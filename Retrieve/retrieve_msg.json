{
    "{a} should be true at the beginning": "a",
    "{a} should always be true": "G(a)",
    "{a} should eventually be true": "E(a)",
    "{a} should be true in the next timestep": "X(a)",
    "{a} should not be true": "N(a)",
    "Eventually, {a} should always be true": "E(G(a))",
    "{a} should be true frequently": "G(E(a))",
    "In the next timestep, {a} should start being always true": "X(G(a))",
    "{a} should never be true": "G(N(a))",
    "Eventually, {a} should not be true": "E(N(a))",
    "In the next timestep, {a} should eventually become true":"X(E(a))",
    "{a} should not always be true": "N(G(a))",
    "always, {a} should be true, or when {a} is not true, in the next timestep {a} should start being always true": "G(a O X(a))",
    "{a} should not be true in the next timestep": "N(X(a))",
    "{a} should not eventually become true": "N(E(a))",
    "Eventually {a} should be false": "E(N(a))",
    "In the next timestep, {a} should not be true": "X(N(a))",
    "In the next timestep, {a} should be true in the next timestep": "X(X a)",
    "{a} should be false in the next timestep" : "X(N a)",
    "Beginning from the next timestep, {a} should eventually be true": "X(E a)",
    "Beginning from the next timestep, {a} should always be true": "X(G a)",
    "Eventually, {a} should be true": "E(X(a))",
    "In the next timestep, {a} and {b} should be true simultaneously": "X(a A b)", 
    "In the next timestep, {a} or {b} should be true": "X(a O b)",
    "In the next timestep, {a} should hold true until {b} becomes true": "X(a U b)",
    "At the beginning, {a} should be true": "N(N(a))",
    "{a} should not be true in the next timpstep": "N(X(a))",
    "Always, {a} should not be true": "N(F(a))",
    "{a} should not be always true": "N(G(a))",
    "{a} should always be false": "G(N a)",
    "{a} should eventually be false": "E(N a)",
    "{a} and {b} should not be true simultaneously": "N(a A b)",
    "Either {a} or {b} should be true": "N(a O b)",
    "{a} should hold true until {b} becomes true": "N(a U b)",
    "In the next timestep, {a} should be false": "X(N a)",
    "{a} should always be true.": "G(a)",
    "Finally {b} should be true, no matter what the value of {a} is": "E(a U b)",
    "{a} and {b} should be true simultaneously": "a A b" ,
    "Eventually {a} and {b} should be true simultanously": "E(a A b)",
    "Eventually {a} or {b} should be true": "E(a O b)",
    "Finally {a} should be true, and then {b} should be true following closely": "E(a A X(b))",
    "{b} should be true, no matter what the value of {a} is": "E(a U b)",
    "{a} and {b} should always be true simultanously": "G(a A b)",
    "{a} should be true at the beginning and {b} should be true in the next timestep": "a A X(b)",
    "{a} should be true while {b} should be false at the beginning": "a A N(b)",
    "{a} should be true at the beginning and eventually, {b} should become true": "a A E(b)",
    "{a} should be true at the beginning and {b} should always be true": "a A G(b)",
    "{a} and {b} should always be true simultaneously": "G(a A b)",
    "Eventually, {a} and {b} should be true simultaneously": "E(a A b)",
    "At the beginning, {a} should be true simultaneously with {b} and {c} being true": "a A (b A c)",
    "At the beginning, {a} should be true simultaneously with either {b} or {c} being true": "a A (b O c)",
    "{a} and {c} should be true at the beginning, or {a} and {b} should be true at the beginning, and then {b} should hold true until {c} becomes true": "a A (b U c)",
    "At the beginning, {a} or {b} should be true": "a O b",
    "At some future point, {a} will be true, and at some point after {a} is true, {b} will also become true": "E(a A E(b))",
    "{a} and {b} should be true sequentially": "E(a A E(b))",
    "At some point in the future, {a} and {b} should be true simultaneously, and from that point onwards, 'b' should always be true. When {b} is not true, {a} and {b} should be true simultaneously again, and then {b} should always be true": "E(a A G(b))",
    "Finally, {a} and {b} should be true simultaneously to lead {b} always being true. Once {b} is not true, this procedure is repeated": "E(a A G(b))",
    "{b} should always be true. Once {b} becomes false, {a} should be true at the next timestep, and holding true until {b} becomes always true": "G(a U b)",
    "{a} should be true or {b} should be true in the next timestep": "a O X(b)",
    "At the beginning, {a} should be true, or {b} is false": "a O N(b)", 
    "{a} should be true, or eventually b is true": "a O E(b)",
    "{a} is true, or {b} is always true": "a O G(b)",
    "Either {a} or {b} should always be true": "G(a O b)",
    "Eventually either {a} or {b} is true": "E(a O b)",
    "Either {a} should be true, or {b} and {c} should be true simultaneously": "a O (b A c)",
    "{a} or {b} or {c} should be true": "a O b O c",
    "Eiter {a} should be true, or {b} should be true until {c} becomes true": "a O (b U c)", 
    "Eventually {a} and {b} should be true simultanously.": "E(a A b)",
    "Eventually {a}, {b} and {c} should be true simultaneously": "E(a A b A c)",
    "In the next timestep {b} should be true, or {a} should be true at the beginning, and {b} should be true in a row or in the next timestep": "a U X(b)",
    "{a} should be true until {b} becomes false": "a U N(b)",
    "{b} should be true eventually, no matter what the value of {a} is": "a U E(b)",
    "{a} should be true until {b} always being true, or {a} and {b} should always be true simultaneously, when {b} is not true, {a} shoule be true until {a} and {b} always being true": "a U G(b)",
    "{a} should be true first and hold true until {c} being true or until {b} being true and then {b} holds true until {c} being true": "a U (b U c)",
    "Beginning from the next timestep, {a} should hold true until {b} being true": "X(a U b)",
    "Eventually {b} should always be true, when {b} is not true, {a} should also be false, but eventually {a} and {b} should be true simultaneously, and eventually {b} should be always true": "G(F(a) U G(b))",
    "{a} should be false after two timesteps": "X(N(X(a)))",
    "Beginning from the next timestep, {a} should not be true": "X(N(E(a)))",
    "Beginning from the next timestep, {a} should not always be true": "X(N(G(a)))",
    "After next timestep, {a} should eventually be false": "E(X(N(a)))",
    "After next timestep, {a} and {b} should eventually be false simultaneously": "E(X(N(a A b)))",
    "In the next timestep, {a} and {b} should not be true simultaneously": "X(N(a A b))",
    "In the next timestep, either {a} or {b} should be true": "X(N(a O b))",
    "Beginning from the next timestep, it should not be the case that {a} holds true until {b} being true": "X(N(a U b))",
    "{a} should not be true in a row": "N(G(F(a)))",
    "{b} should eventually be false, and then either {a} or {b} should always be false. Once they are true simultaneously, {b} should eventually be false again and then either ": "N G (F(X(a)) U b)",
    "{a} and {b} should not always be true simultaneously": "N(G(a A b))",
    "Eventually {a} and {b} should be false simultaneously": "N(G(a O b))",
    "{a} holds true until {b} being true, this case cannot always be true": "N(G(a U b))",
    "After next timestep, {a} should be false eventually": "X(N(G(a)))",
    "It should not be the case that {a} is always true": "N(E(G(a)))",
    "{b} should be true at the beginning, otherwise {a} and {b} should be true simultaneously and then {a} should be true frequently, or {b} should be true first, and after {b} being false, {a} should be true frequently": "(G(E(a)) U b)",
    "Beginning from the next timestep, {b} should be true at the beginning, otherwise {a} and {b} should be true simultaneously and then {a} should be true frequently, or {b} should be true first, and after {b} being false, {a} should be true frequently": "(G(E(a)) U X(b))",
    "From the next timestep, {a} should not be true": "G(N(X(a)))",
    "{a} should be false frequently": "E(G(N(a)))",
    "Eventually {a} should be true or {b} should be true after the first timestep": "E(a O X(b))",
}

