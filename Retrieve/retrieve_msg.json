{
  "a": {
    "{a} should always be true.": "G(a)",
    "{a} should eventually be true.": "E(a)",
    "{a} should be true in the next timestep.": "X(a)",
    "{a} should not be true.": "N(a)",
    "Eventually, {a} should always be true.": "E(G(a))",
    "{a} should be true frequently": "G(E(a))",
    "In the next timestep, {a} should start being always true.": "X(G(a))",
    "{a} should never be true.": "G(N(a))",
    "Eventually, {a} should not be true.": "E(N(a))",
    "In the next timestep, {a} should eventually become true.":"X(E(a))"
  },
  "G(b)": {
    "Eventually, {b} should always be true.": "E(G(b))",
    "In the next timestep, {b} should start being always true.": "X(G(b))",
    "{b} should never be true.": "G(N(b))",
    "{b} should not always be true.": "N(G(b))",
    "always, {b} should be true, or when {b} is not true, in the next timestep {b} should start being always true.": "G(b O X(b))",
    "{b} should be true frequently.": "G(E(b))",
    "{b} should eventually be true.": "F(b)"
  },
  "G(b A b)": {
    "{b} should always be true.": "G(b)"
  },
  "E d": {
    "{d} should not be true in the next timestep.": "N(X(d))",
    "{d} should not eventually become true.": "N(E(d))",
Revised Task: N(G(d))
Behavior: It should not be the case that {d} is always true.

Revised Task: G(N(d))
Behavior: It should always be the case that {d} is not true.

Revised Task: E(N(d))
Behavior: Eventually, it should be the case that {d} is not true.

Revised Task: N(d A d)
Behavior: It should not be the case that {d} and another instance of {d} are true simultaneously.

Revised Task: N(d O d)
Behavior: It should not be the case that either one of the instances of {d} is true.

Revised Task: N(d U d)
Behavior: It should not be the case that {d} should be true until another instance of {d} becomes true.

Revised Task: N(d) A d
Behavior: {d} should not be true, and simultaneously {d} should be true.

Revised Task: X(N(d))
Behavior: In the next timestep, it should be the case that {d} is not true.
  },
  "X e": {
    Revised Task: X(X e)
Behavior: In the next timestep, and then in the following timestep, {e} should be true.

Revised Task: X(N e)
Behavior: In the next timestep, it should be the case that {e} is not true.

Revised Task: X(E e)
Behavior: In the next timestep, it should eventually be the case that {e} becomes true.

Revised Task: X(G e)
Behavior: In the next timestep, it should always be the case that {e} is true.

Revised Task: G(X e)
Behavior: It should always be the case that in the next timestep, {e} is true.

Revised Task: E(X e)
Behavior: Eventually, it should be the case that in the next timestep, {e} is true.

Revised Task: X(e A e)
Behavior: In the next timestep, {e} and another instance of {e} should be true simultaneously.

Revised Task: X(e O e)
Behavior: In the next timestep, either one of the instances of {e} should be true.

Revised Task: X(e U e)
Behavior: In the next timestep, {e} should be true until another instance of {e} becomes true.

Revised Task: N(X e)
Behavior: It should not be the case that in the next timestep, {e} is true.
  },
  "N e": {
    Revised Task: N(N e)
Behavior: It should not be the case that {e} is not true. (Double negation, effectively meaning {e} should be true.)

Revised Task: N(X e)
Behavior: It should not be the case that {e} is true in the next timestep.

Revised Task: N(E e)
Behavior: It should not be the case that {e} eventually becomes true.

Revised Task: N(G e)
Behavior: It should not be the case that {e} is always true.

Revised Task: G(N e)
Behavior: It should always be the case that {e} is not true.

Revised Task: E(N e)
Behavior: Eventually, it should be the case that {e} is not true.

Revised Task: N(e A e)
Behavior: It should not be the case that {e} and another instance of {e} are true simultaneously.

Revised Task: N(e O e)
Behavior: It should not be the case that either one of the instances of {e} is true.

Revised Task: N(e U e)
Behavior: It should not be the case that {e} should be true until another instance of {e} becomes true.

Revised Task: X(N e)
Behavior: In the next timestep, it should be the case that {e} is not true.
    "expected behavior is {e} should never be true. Such specification omits {e}.": "N F(e)",
    "expected behavior is {e} should always be true.": "G(e)",
    "expected behavior is {e} should first be true, and then false.": "F(e U N(e))",
    "expected behavior is {e} should first be false, and then true.": "F(N(e) U e)",
    "expected behavior is {e} should be true or false.": "e O N(e)"
  },
  "a A d": {
    "expected behavior is {a} and {d} should be true simultanously.": "F(a A d)",
    "expected behavior is more than one atomic proposition in {{a}, {d}} should be true.": "F(a O d)",
    "expected behavior is {a} should be true first, and then {d} should be true.": "F(a A X(d))",
    "expected behavior is {d} should be true, no matter what the values of {a} are.": "F(a U d)",
    "expected behavior is {a} or {d} should be true.": "G(a A d)"
    Revised Task: a A X(d)
Behavior: {a} should be true simultaneously with {d} being true in the next timestep.

Revised Task: a A N(d)
Behavior: {a} should be true while it should not be the case that {d} is true.

Revised Task: a A E(d)
Behavior: {a} should be true and eventually, {d} should become true.

Revised Task: a A G(d)
Behavior: {a} should be true and {d} should always be true.

Revised Task: G(a A d)
Behavior: It should always be the case that {a} and {d} are true simultaneously.

Revised Task: E(a A d)
Behavior: Eventually, it should be the case that {a} and {d} are true simultaneously.

Revised Task: a A (d A d)
Behavior: {a} should be true simultaneously with {d} and another instance of {d} being true.

Revised Task: a A (d O d)
Behavior: {a} should be true simultaneously with either one of the instances of {d} being true.

Revised Task: a A (d U d)
Behavior: {a} should be true while {d} should be true until another instance of {d} becomes true.

Revised Task: X(a A d)
Behavior: In the next timestep, it should be the case that {a} and {d} are true simultaneously.

  },
  "f O a": {
    "expected behavior is {a}, {f} should be true at the same time.": "F(a O f)",
    "expected behavior is {a} and {f} should be true sequentially and don't need to be adjacent.": "F(a A F(f))",
    "expected behavior is {a} and {f} should be true simultanously, and then {f} should always be true.": "F(a A G(f))",
    "expected behavior is finally {f} should be true, no matter what the values of {a} are.": "F(a U f)",
    "expected behavior is {f} should always be true, or {a} be true, but subsequently {f} should be true.": "G(a U f)"
    Revised Task: f O X(a)
Behavior: Either {f} should be true or {a} should be true in the next timestep.

Revised Task: f O N(a)
Behavior: Either {f} should be true or it should not be the case that {a} is true.

Revised Task: f O E(a)
Behavior: Either {f} should be true or eventually, {a} should become true.

Revised Task: f O G(a)
Behavior: Either {f} should be true or {a} should always be true.

Revised Task: G(f O a)
Behavior: It should always be the case that either {f} or {a} is true.

Revised Task: E(f O a)
Behavior: Eventually, it should be the case that either {f} or {a} is true.

Revised Task: f O (a A a)
Behavior: Either {f} should be true or {a} and another instance of {a} should be true simultaneously.

Revised Task: f O (a O a)
Behavior: Either {f} should be true or either one of the instances of {a} should be true.

Revised Task: f O (a U a)
Behavior: Either {f} should be true or {a} should be true until another instance of {a} becomes true.

Revised Task: X(f O a)
Behavior: In the next timestep, it should be the case that either {f} or {a} is true.
  },
  "c U b": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c U (b U c)",
    "expected behavior is {b} and {c} should be true simultanously.": "F(c A b)",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "F(c A F(b U c))",
    "expected behavior is {b} and {c} should be true sequentially and need to be adjacent.": "F(c A b A c)",
    "expected behavior is finally {c} should be true, no matter what the value of {b} is.": "F(c U b)"
    Revised Task: c U X(b)
Behavior: {c} should be true until {b} becomes true in the next timestep.

Revised Task: c U N(b)
Behavior: {c} should be true until it is not the case that {b} is true.

Revised Task: c U E(b)
Behavior: {c} should be true until eventually, {b} becomes true.

Revised Task: c U G(b)
Behavior: {c} should be true until {b} always becomes true.

Revised Task: G(c U b)
Behavior: It should always be the case that {c} is true until {b} becomes true.

Revised Task: E(c U b)
Behavior: Eventually, it should be the case that {c} is true until {b} becomes true.

Revised Task: c U (b A b)
Behavior: {c} should be true until {b} and another instance of {b} are true simultaneously.

Revised Task: c U (b O b)
Behavior: {c} should be true until either one of the instances of {b} becomes true.

Revised Task: c U (b U b)
Behavior: {c} should be true until {b} is true until another instance of {b} becomes true.

Revised Task: X(c U b)
Behavior: In the next timestep, it should be the case that {c} is true until {b} becomes true.
  },
  "G G e": {
    "expected behavior is to make {e} always be true. Such specification omits {e}.": "G G e",
    "expected behavior is more than one atomic proposition in {{e}} should be true.": "G G (e O e)",
    "expected behavior is {e} should be true first and then always be true.": "G F e",
    "expected behavior is to make {e} be true for a certain period of time.": "G (F e U G e)",
    "expected behavior is to make {e} to be true at least twice.": "G (F e U F e)"
    Revised Task: G G X(e)
Behavior: It should always be the case that it is always the case that {e} is true in the next timestep.

Revised Task: G G N(e)
Behavior: It should always be the case that it is always the case that {e} is not true.

Revised Task: G G E(e)
Behavior: It should always be the case that it is always the case that {e} eventually becomes true.

Revised Task: G E G(e)
Behavior: It should always be the case that eventually it is always the case that {e} is true.

Revised Task: G G G(e)
Behavior: It should always be the case that it is always the case that it is always the case that {e} is true.

Revised Task: E G G(e)
Behavior: Eventually, it should be the case that it is always the case that it is always the case that {e} is true.

Revised Task: G G (e A e)
Behavior: It should always be the case that it is always the case that {e} and another instance of {e} are true simultaneously.

Revised Task: G G (e O e)
Behavior: It should always be the case that it is always the case that either one of the instances of {e} is true.

Revised Task: G G (e U e)
Behavior: It should always be the case that it is always the case that {e} is true until another instance of {e} becomes true.

Revised Task: N(G G e)
Behavior: It should not be the case that it is always the case that it is always the case that {e} is true.
  },
  "X N d": {
    "expected behavior is that {d} should be true. Such specification omits {d}.": "X(d N d)",
    "expected behavior is {d} should be true before {d} is false.": "F(d N d)",
    "expected behavior is {d} should not be true continuously.": "F(d O X d)",
    "expected behavior is {d} should be true and not be false, or {d} should be false and not be true.": "F(d A X d)",
    "expected behavior is {d} should be true at some moments and should be false at some moments.": "F(T U (d A X d))"
    Revised Task: X N X(d)
Behavior: In the next timestep, it should be the case that {d} is not true in the following timestep.

Revised Task: X N N(d)
Behavior: In the next timestep, it should be the case that {d} is not false (effectively, {d} should be true).

Revised Task: X N E(d)
Behavior: In the next timestep, it should be the case that {d} does not eventually become true.

Revised Task: X N G(d)
Behavior: In the next timestep, it should be the case that {d} is not always true.

Revised Task: G(X N d)
Behavior: It should always be the case that in the next timestep, {d} is not true.

Revised Task: E(X N d)
Behavior: Eventually, it should be the case that in the next timestep, {d} is not true.

Revised Task: X N (d A d)
Behavior: In the next timestep, it should be the case that {d} and another instance of {d} are not true simultaneously.

Revised Task: X N (d O d)
Behavior: In the next timestep, it should be the case that neither of the instances of {d} is true.

Revised Task: X N (d U d)
Behavior: In the next timestep, it should be the case that {d} is not true until another instance of {d} becomes true.

Revised Task: N(X N d)
Behavior: It should not be the case that in the next timestep, {d} is not true.
  },
  "N G d": {
    "expected behavior is {d} should be true all the time. Such specification omits {d}.": "N G F(d)",
    "expected behavior is to make {d} be true all the time, and then {d} should not be true.": "N G (d U X(d))",
    "expected behavior is to make sure {d} cannot be true.": "N G F(X(d))",
    "expected behavior is to make sure {d} cannot be true, and then {d} should not always be false.": "N G (F(X(d)) U d)",
    "expected behavior is to make sure {d} cannot be true and then {d} should eventually be true.": "N G (F(X(d)) U F(d))"
    Revised Task: N G X(d)
Behavior: It should not be the case that {d} is always true in the next timestep.

Revised Task: N G N(d)
Behavior: It should not be the case that {d} is never true (i.e., {d} should sometimes be true).

Revised Task: N G E(d)
Behavior: It should not be the case that {d} is always eventually true.

Revised Task: G N G(d)
Behavior: It should always be the case that it is not the case that {d} is always true.

Revised Task: E N G(d)
Behavior: Eventually, it should be the case that it is not the case that {d} is always true.

Revised Task: N G (d A d)
Behavior: It should not be the case that both instances of {d} are always true simultaneously.

Revised Task: N G (d O d)
Behavior: It should not be the case that at least one of the instances of {d} is always true.

Revised Task: N G (d U d)
Behavior: It should not be the case that {d} is always true until another instance of {d} becomes true.

Revised Task: X N G(d)
Behavior: In the next timestep, it should be the case that {d} is not always true.

Revised Task: N E G(d)
Behavior: It should not be the case that eventually {d} is always true.
  },
  "G N d": {
    "expected behavior is {d} should be true eventually. Such specification omits {d}.": "F d",
    "expected behavior is {d} should not be true eventually. Such specification omits {d}.": "G F d",
    "expected behavior is {d} should be true infinitely often. Such specification omits {d}.": "G F d U d",
    "expected behavior is {d} should be true at least once. Such specification omits {d}.": "F d U G F d",
    "expected behavior is {d} should not be true infinitely often. Such specification omits {d}.": "G F d A G F d"
    Revised Task: G N X(d)
Behavior: It should always be the case that {d} is not true in the next timestep.

Revised Task: G N E(d)
Behavior: It should always be the case that {d} does not eventually become true.

Revised Task: G N G(d)
Behavior: It should always be the case that {d} is never true (i.e., {d} should be continuously false).

Revised Task: E G N(d)
Behavior: Eventually, it should be the case that {d} is always not true.

Revised Task: N G N(d)
Behavior: It should not be the case that {d} is never true (i.e., there should be some instances where {d} is true).

Revised Task: G N (d A d)
Behavior: It should always be the case that both instances of {d} are not true simultaneously.

Revised Task: G N (d O d)
Behavior: It should always be the case that neither of the instances of {d} is true.

Revised Task: G N (d U d)
Behavior: It should always be the case that {d} is not true until another instance of {d} becomes true.

Revised Task: X G N(d)
Behavior: In the next timestep, it should be the case that {d} is always not true.

Revised Task: G E N(d)
Behavior: It should always be the case that eventually {d} is not true.
  },
  "E N b": {
    "expected behavior is {b} should be true infinitely often. Such specification omits the number of times {b} should be true.": "E(N 1 b)",
    "expected behavior is {b} should be true at least once and no more than twice. Such specification omits the maximum times {b} should be true.": "E(N 1 b) U (N 2 b)",
    "expected behavior is {b} should be true at least 4 times. Such specification omits the minimum times {b} should be true.": "E(N 4 b) U (N 5 b)",
    "expected behavior is {b} should be true at most twice. Such specification omits the minimum times {b} should be true.": "E(N 0 b) U (N 2 b)",
    "expected behavior is {b} should be true once and then should not be true again. Such specification omits the number of times {b} should be true.": "E(N 1 b) U N(1 b)"
    Revised Task: E N X(b)
Behavior: Eventually, it should be the case that {b} is not true in the next timestep.

Revised Task: E N E(b)
Behavior: Eventually, it should be the case that {b} does not eventually become true.

Revised Task: E N G(b)
Behavior: Eventually, it should be the case that {b} is never true (i.e., {b} should eventually be continuously false).

Revised Task: G E N(b)
Behavior: It should always be the case that eventually {b} is not true.

Revised Task: N E N(b)
Behavior: It should not be the case that eventually {b} is never true (i.e., there should be some instances where {b} eventually is true).

Revised Task: E N (b A b)
Behavior: Eventually, it should be the case that both instances of {b} are not true simultaneously.

Revised Task: E N (b O b)
Behavior: Eventually, it should be the case that neither of the instances of {b} is true.

Revised Task: E N (b U b)
Behavior: Eventually, it should be the case that {b} is not true until another instance of {b} becomes true.

Revised Task: X E N(b)
Behavior: In the next timestep, it should be the case that eventually {b} is not true.

Revised Task: E X N(b)
Behavior: Eventually, it should be the case that in the next timestep {b} is not true.
  },
  "N E d": {
    "expected behavior is {d} should be true. Such specification omits {d}.": "E d",
    "expected behavior is {d} should be false.": "N d",
    "expected behavior is {d} should be true before {d} or {d} should be false.": "N E(d O X(d))",
    "expected behavior is {d} should be false first, and then {d} should be true.": "N E(F(d) U d)",
    "expected behavior is at least one of {d} should be true.": "E(d O X(d))"
    Revised Task: N E X(d)
Behavior: It should not be the case that eventually {d} is true in the next timestep.

Revised Task: N E N(d)
Behavior: It should not be the case that eventually {d} is never true (effectively meaning {d} should sometimes be true eventually).

Revised Task: N E E(d)
Behavior: It should not be the case that eventually, it is eventually the case that {d} becomes true.

Revised Task: E N E(d)
Behavior: Eventually, it should be the case that it is not the case that {d} eventually becomes true.

Revised Task: G N E(d)
Behavior: It should always be the case that it is not the case that {d} eventually becomes true.

Revised Task: N E (d A d)
Behavior: It should not be the case that eventually both instances of {d} are true simultaneously.

Revised Task: N E (d O d)
Behavior: It should not be the case that eventually at least one of the instances of {d} is true.

Revised Task: N E (d U d)
Behavior: It should not be the case that eventually {d} is true until another instance of {d} becomes true.

Revised Task: X N E(d)
Behavior: In the next timestep, it should be the case that it is not the case that {d} eventually becomes true.

Revised Task: N G E(d)
Behavior: It should not be the case that it is always eventually the case that {d} becomes true.
  },
  "N X d": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U X(d)",
    "expected behavior is {d} should always be true.": "G(d)",
    "expected behavior is more than one atomic proposition in {{d}} should be true.": "F(d)",
    "expected behavior is {d} should be true eventually.": "F(d U X(d))",
    "expected behavior is {d} should never be true.": "N(G(d))"
    Revised Task: N X X(d)
Behavior: It should not be the case that {d} is true in the next-next timestep.

Revised Task: N X N(d)
Behavior: It should not be the case that {d} is not true in the next timestep.

Revised Task: N X E(d)
Behavior: It should not be the case that eventually {d} becomes true in the next timestep.

Revised Task: X N X(d)
Behavior: In the next timestep, it should be the case that {d} is not true in the following timestep.

Revised Task: G N X(d)
Behavior: It should always be the case that {d} is not true in the next timestep.

Revised Task: E N X(d)
Behavior: Eventually, it should be the case that {d} is not true in the next timestep.

Revised Task: N X (d A d)
Behavior: It should not be the case that both instances of {d} are true in the next timestep simultaneously.

Revised Task: N X (d O d)
Behavior: It should not be the case that at least one of the instances of {d} is true in the next timestep.

Revised Task: N X (d U d)
Behavior: It should not be the case that {d} is true until another instance of {d} becomes true in the next timestep.

Revised Task: N G X(d)
Behavior: It should not be the case that it is always the case that {d} is true in the next timestep.

  },
  "X G d": {
    "expected behavior is {d} should be true eventually. Such specification omits {d}.": "d U X G d",
    "expected behavior is {d} should be true sequentially and don't need to be adjacent.": "X F(d)",
    "expected behavior is more than one atomic proposition in {{d}} should be true.": "X G(d O F(d))",
    "expected behavior is {d} should be true first and then always be true.": "G d",
    "expected behavior is {d} should always be true, or {d} should not be true first, and then {d} should be true.": "F(X O d)"
    Revised Task: X G X(d)
Behavior: In the next timestep, it should always be the case that {d} is true in the following timestep.

Revised Task: X G N(d)
Behavior: In the next timestep, it should always be the case that {d} is not true.

Revised Task: X G E(d)
Behavior: In the next timestep, it should always be the case that {d} eventually becomes true.

Revised Task: G X G(d)
Behavior: It should always be the case that in the next timestep, it is always the case that {d} is true.

Revised Task: E X G(d)
Behavior: Eventually, it should be the case that in the next timestep, it is always the case that {d} is true.

Revised Task: X G (d A d)
Behavior: In the next timestep, it should always be the case that both instances of {d} are true simultaneously.

Revised Task: X G (d O d)
Behavior: In the next timestep, it should always be the case that at least one of the instances of {d} is true.

Revised Task: X G (d U d)
Behavior: In the next timestep, it should always be the case that {d} is true until another instance of {d} becomes true.

Revised Task: N X G(d)
Behavior: It should not be the case that in the next timestep, it is always the case that {d} is true.

Revised Task: X E G(d)
Behavior: In the next timestep, it should eventually be the case that it is always the case that {d} is true.
  },
  "N N b": {
    "expected behavior is {b} should be true. Such specification omits {b}.": "N b",
    "expected behavior is {b} should not always be true.": "N Fb",
    "expected behavior is {b} should always be true.": "Gb",
    "expected behavior is {b} should be true in two consecutive cycles.": "N N b N b",
    "expected behavior is {b} should be true in the first cycle, and then should not always be true in the next cycle.": "N (b U Fb)"
    Revised Task: N N X(b)
Behavior: It should not be the case that it is not the case that {b} is true in the next timestep (effectively meaning {b} should be true in the next timestep).

Revised Task: N N N(b)
Behavior: It should not be the case that it is not the case that {b} is not true (a triple negation, effectively reverting back to the original state of {b}).

Revised Task: N N E(b)
Behavior: It should not be the case that it is not the case that {b} eventually becomes true (meaning {b} should eventually become true).

Revised Task: N N G(b)
Behavior: It should not be the case that it is not the case that {b} is always true (meaning {b} should always be true).

Revised Task: G N N(b)
Behavior: It should always be the case that it is not the case that {b} is not true (meaning {b} should always be true).

Revised Task: E N N(b)
Behavior: Eventually, it should be the case that it is not the case that {b} is not true (meaning {b} should eventually be true).

Revised Task: N N (b A b)
Behavior: It should not be the case that it is not the case that both instances of {b} are true simultaneously (meaning both {b} should be true simultaneously).

Revised Task: N N (b O b)
Behavior: It should not be the case that it is not the case that at least one of the instances of {b} is true (meaning at least one {b} should be true).

Revised Task: N N (b U b)
Behavior: It should not be the case that it is not the case that {b} is true until another instance of {b} becomes true (meaning {b} should be true until another {b} becomes true).

Revised Task: X N N(b)
Behavior: In the next timestep, it should be the case that it is not the case that {b} is not true (meaning {b} should be true in the next timestep).
  },
  "X E e": {
    "expected behavior is {e} should be true eventually. Such specification omits {e}.": "F(e U X e)",
    "expected behavior is {e} should be true eventually and sequentially. Such specification omits the sequential requirement.": "F(e A X e)",
    "expected behavior is {e} should be true eventually and adjacently. Such specification omits the adjacency requirement.": "F(e U X F(e))",
    "expected behavior is more than one atomic proposition in {{e}} should be true eventually. Such specification omits the other atomic proposition in {{e}}.": "F(e O X e)",
    "expected behavior is {e} should be true eventually and always. Such specification omits the always requirement.": "G(e U X e)"
    Revised Task: X E X(e)
Behavior: In the next timestep, it should eventually be the case that {e} is true in the following timestep.

Revised Task: X E N(e)
Behavior: In the next timestep, it should eventually be the case that {e} is not true.

Revised Task: X E E(e)
Behavior: In the next timestep, it should eventually be the case that {e} eventually becomes true.

Revised Task: E X E(e)
Behavior: Eventually, it should be the case that in the next timestep, it is eventually the case that {e} becomes true.

Revised Task: G X E(e)
Behavior: It should always be the case that in the next timestep, it is eventually the case that {e} becomes true.

Revised Task: X E (e A e)
Behavior: In the next timestep, it should eventually be the case that both instances of {e} are true simultaneously.

Revised Task: X E (e O e)
Behavior: In the next timestep, it should eventually be the case that at least one of the instances of {e} is true.

Revised Task: X E (e U e)
Behavior: In the next timestep, it should eventually be the case that {e} is true until another instance of {e} becomes true.

Revised Task: N X E(e)
Behavior: It should not be the case that in the next timestep, it is eventually the case that {e} becomes true.

Revised Task: X G E(e)
Behavior: In the next timestep, it should always be the case that eventually {e} becomes true.
  },
  "E G d": {
    "expected behavior is {d} should be true until the end. Such specification omits the time frame.": "F(E G d)",
    "expected behavior is {d} should be true until some other event occured.": "F(E (d U a))",
    "expected behavior is {d} should be true until some other event occured, or until the end.": "F(E (d U (a O G d)))",
    "expected behavior is {d} should be true until the end, and then {d} should not be true.": "F(E G (X(-d)))",
    "expected behavior is {d} should be true until some other event occured, and then {d} should not be true.": "F(E (d U (a A X(-d))))"
    Revised Task: E G X(d)
Behavior: Eventually, it should always be the case that {d} is true in the next timestep.

Revised Task: E G N(d)
Behavior: Eventually, it should always be the case that {d} is not true.

Revised Task: E G E(d)
Behavior: Eventually, it should always be the case that {d} eventually becomes true.

Revised Task: G E G(d)
Behavior: It should always be the case that eventually, it is always the case that {d} is true.

Revised Task: N E G(d)
Behavior: It should not be the case that eventually, it is always the case that {d} is true.

Revised Task: E G (d A d)
Behavior: Eventually, it should always be the case that both instances of {d} are true simultaneously.

Revised Task: E G (d O d)
Behavior: Eventually, it should always be the case that at least one of the instances of {d} is true.

Revised Task: E G (d U d)
Behavior: Eventually, it should always be the case that {d} is true until another instance of {d} becomes true.

Revised Task: X E G(d)
Behavior: In the next timestep, it should eventually be the case that it is always the case that {d} is true.

Revised Task: E E G(d)
Behavior: Eventually, it should be the case that eventually it is always the case that {d} is true.
  },
  "X X b": {
    "expected behavior is {b} should be true twice in a row. Such specification omits {b}.": "X b X b",
    "expected behavior is {b} should be true at least two times.": "G(b U (X b A X b))",
    "expected behavior is {b} should be true at least three times.": "G(b U (X b A X b A X b))",
    "expected behavior is {b} should be true at least four times.": "G(b U (X b A X b A X b A X b))",
    "expected behavior is {b} should be true only once.": "F(X b)"
    Revised Task: X X (b A a)

Behavior: {b} and {a} should be true in the next-next timestep.
Revised Task: X X (b O a)

Behavior: Either {b} or {a} should be true in the next-next timestep.
Revised Task: X X N b

Behavior: {b} should not be true in the next-next timestep.
Revised Task: X X G b

Behavior: From the next-next timestep onwards, {b} should always be true.
Revised Task: X X F b

Behavior: Starting from the next-next timestep, {b} should be true at least once.
Revised Task: X X X b

Behavior: {b} should be true in the next-next-next timestep.
Revised Task: X X (b U a)

Behavior: {b} should be true until {a} becomes true, starting from the next-next timestep.
Revised Task: X X (b A N a)

Behavior: {b} should be true and {a} should not be true in the next-next timestep.
Revised Task: G X X b

Behavior: {b} should always be true in the next-next timestep.
Revised Task: F X X b

Behavior: Eventually, {b} should be true in the next-next timestep.





  },
  "E X b": {
    "expected behavior is {b} should be true. Such specification omits {b}.": "E(b A X b)",
    "expected behavior is {b} should be true infinitely often. Such specification omits infinite occurence of {b}.": "E(b U X b)",
    "expected behavior is {b} should be true eventually and then {b} should always be true. Such specification omits {b} to be always true.": "F(b A X b)",
    "expected behavior is {b} should be true eventually but not immediate, and then {b} should always be true. Such specification omits {b} to be always true and it's not immediate after {b} is true.": "F(X b A X b)",
    "expected behavior is {b} should be true eventually but not immediate, and then {b} should always be true, and {b} should be true again after {b} is false. Such specification omits {b} to be always true and it's not immediate after {b} is true, moreover it excludes that {b} should be true again after {b} is false.": "F(X b A X b U b)"
    G X b

Behavior: Always, in the next timestep, {b} should be true.
Revised Task: E X N b

Behavior: Eventually, in the next timestep, {b} should not be true.
Revised Task: E G b

Behavior: Eventually, {b} should always be true.
Revised Task: N E X b

Behavior: It should not be the case that eventually, in the next timestep, {b} is true.
Revised Task: E X E b

Behavior: Eventually, in the next timestep, it should eventually be true that {b} is true.
Revised Task: E X U a b

Behavior: Eventually, in the next timestep, {a} should be true until {b} is true.
Revised Task: E X (a O b)

Behavior: Eventually, in the next timestep, either {a} or {b} should be true.
Revised Task: E (a U X b)

Behavior: Eventually, {a} should be true until, in the next timestep, {b} becomes true.
Revised Task: X E b

Behavior: In the next timestep, it should eventually be true that {b} is true.
  },
  "c O N e": {
    "expected behavior is {c} should be true once, and then the next state should be {e}.": "c U e",
    "expected behavior is {c} should be true for many times, and then {e} should be true.": "F(c U e)",
    "expected behavior is {c} and {e} should be true simultanously.": "c A e",
    "expected behavior is {c} should be true until {e} is true, but {e} could be false in some of the states.": "G(c U e)",
    "expected behavior is {c} should be true until {e} is true, and then {c} and {e} should always be true.": "F(G(c U e))"
    Revised Task: c O N (e)

Behavior: Either {c} should be true, or the event {e} should never occur.
Revised Task: c O N (X e)

Behavior: Either {c} should be true, or the event {e} should not occur in the next timestep.
Revised Task: c O N (G e)

Behavior: Either {c} should be true, or the event {e} should never always be true.
Revised Task: c O (X N e)

Behavior: Either {c} should be true, or in the next timestep, the event {e} should not be true.
Revised Task: N (c O e)

Behavior: It should never be the case that either {c} is true or the event {e} occurs.
Revised Task: (c A N e)

Behavior: {c} should be true and the event {e} should never occur.
Revised Task: (c U N e)

Behavior: {c} should be true until it is certain that the event {e} will never occur.
Revised Task: N (X c O e)

Behavior: It should not be the case that in the next timestep, either {c} is true or the event {e} occurs.
Revised Task: (X c) O N e

Behavior: Either in the next timestep {c} should be true, or the event {e} should never occur.
Revised Task: c O (N X e)

Behavior: Either {c} should be true, or it should not be the case that in the next timestep the event {e} occurs.





  },
  "E d U e": {
    "expected behavior is {d} and {e} should be true simultanously.": "F(d A e)",
    "expected behavior is for {d} and {e} should be true sequentially and don't need to be adjacent.": "F(d A F(e))",
    "expected behavior is {d} and {e} should be true consecutively.": "F(d U e)",
    "expected behavior is if {d} is true, then {e} should be true.": "F(d A e)",
    "expected behavior is {d} should be true, or {d} should not be true first, and then {d} or {e} should be true.": "F(d O X(e))"
    Revised Task: E(d U e)
Behavior: eventually, {d} should be true until {e} becomes true.

Revised Task: G(d U e)
Behavior: always, {d} should be true until {e} becomes true.

Revised Task: E(d A e)
Behavior: eventually, {d} and {e} should be true simultaneously.

Revised Task: E(d O e)
Behavior: eventually, either {d} or {e} (or both) should be true.

Revised Task: E(d U (e A X d))
Behavior: eventually, {d} should be true until {e} becomes true, and at that time, {d} should be true in the next timestep.

Revised Task: E(d U (e O X d))
Behavior: eventually, {d} should be true until either {e} becomes true or in the next timestep {d} is true.

Revised Task: E(d U (e A G d))
Behavior: eventually, {d} should be true until {e} becomes true, and from then on, {d} should always be true.

Revised Task: E(d U (e A F d))
Behavior: eventually, {d} should be true until {e} becomes true, and at some point in the future, {d} should be true again.

Revised Task: E(d U N e)
Behavior: eventually, {d} should be true until {e} is not true.

Revised Task: E(d U (N e A X d))
Behavior: eventually, {d} should be true until {e} is not true, and at that time, {d} should be true in the next timestep.
  },
  "N d U e": {
    "expected behavior is {d} should be false first. Such specification omits {d}.": "N(d U e)",
    "expected behavior is to make {d} and {e} be false simultanously.": "N(d A e)",
    "expected behavior is to make {d} and {e} be false sequentially and don't need to be adjacent.": "N(d A N(e))",
    "expected behavior is to make {d}, {e} should be false sequentially and don't need to be adjacent.": "N(d A N(N(e)))",
    "expected behavior is more than one atomic proposition in {{d}, {e}} should be false.": "N(d O e)"
    Revised Task: N (d U e)
Behavior: Until {e} becomes true, {d} should be false.

Revised Task: N d U N e
Behavior: Until {e} becomes false, {d} should be false.

Revised Task: G(N d U e)
Behavior: It should always be the case that until {e} becomes true, {d} is false.

Revised Task: N d U (X e)
Behavior: Until {e} becomes true in the next timestep, {d} should be false.

Revised Task: F(N d U e)
Behavior: Eventually, it will be the case that until {e} becomes true, {d} is false.

Revised Task: N (d A e)
Behavior: {d} and {e} should never be true simultaneously.

Revised Task: (N d) U (d A e)
Behavior: Until {d} and {e} are true simultaneously, {d} should be false.

Revised Task: N d U (e A G d)
Behavior: Until {e} becomes true, {d} should be false. After {e} becomes true, {d} should always be true.

Revised Task: (N d U e) A G d
Behavior: Until {e} becomes true, {d} should be false, and {d} should always be true in general.

Revised Task: N d U (e O N d)
Behavior: Until {e} becomes true or {d} becomes false, {d} should be false.






  },
  "X E N d": {
    "expected behavior is N is an atomic proposition. Such specification omits N.": "X E (N d)",
    "expected behavior is {d} should be true eventually. Such specification omits {d}.": "X (E d)",
    "expected behavior is {d} should not be true eventually. Such specification omits {d}.": "X (G d)",
    "expected behavior is {d} should be true eventually but not necessarily immediately. Such specification omits {d}.": "X (F d)",
    "expected behavior is {d} should be true eventually and immediately. Such specification omits {d}.": "X (E F d)"
    Revised Task: X E d
Behavior: Eventually, {d} should be true in the next timestep.

Revised Task: X N E d
Behavior: It should not be the case that {d} eventually becomes true in the next timestep.

Revised Task: G E N d
Behavior: It should always be the case that eventually, {d} is not true.

Revised Task: X G d
Behavior: In the next timestep, it should always be the case that {d} is true.

Revised Task: X O E d
Behavior: In the next timestep, either {d} is true or it will eventually be true.

Revised Task: E X d
Behavior: Eventually, it should be the case that {d} is true in the next timestep.

Revised Task: N X E d
Behavior: It should not be the case that in the next timestep, {d} will eventually be true.

Revised Task: X E (N d O d)
Behavior: In the next timestep, it should eventually be the case that either {d} is not true or it is true.

Revised Task: X E (d U N d)
Behavior: In the next timestep, eventually {d} should be true until it is not true.

Revised Task: G X E d
Behavior: It should always be the case that, in the next timestep, {d} will eventually be true.
  },
  "X N N d": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d N N X d",
    "expected behavior is {d} should be true before {N}.": "F(d U (N N X d))",
    "expected behavior is to make {d} and {N} be true sequentially and don't need to be adjacent.": "F(d A F(N N X d))",
    "expected behavior is that {d} and {N} should be true simultanously.": "F(d A N A X d)",
    "expected behavior is {d} should eventually be true and {N} should not be true in the meantime.": "F(G(d) U X(N))"
    Revised Task: X N d
Behavior: In the next time step, it should be false that {d} is false, which means {d} should be true.

Revised Task: X N N N d
Behavior: In the next time step, it should be false that it is false that {d} is false, which effectively means {d} should be false.

Revised Task: X N G d
Behavior: In the next time step, it should be false that {d} is always true, implying {d} can be false at some point.

Revised Task: X G N d
Behavior: In the next time step, it should always be the case that {d} is false.

Revised Task: X N X d
Behavior: In the next time step, it should be false that in the subsequent time step {d} is false, meaning {d} should be true in two time steps.

Revised Task: X N U (d O e)
Behavior: In the next time step, it should be false that {d} is true until {d} or {e} is true, implying a disruption in the expected sequence of {d}.

Revised Task: X X N d
Behavior: In the next two time steps, it should be false that {d} is false, which means {d} should be true in two time steps.

Revised Task: X N (d A e)
Behavior: In the next time step, it should be false that both {d} and {e} are true, indicating at least one of them is false.

Revised Task: X N (d O e)
Behavior: In the next time step, it should be false that either {d} or {e} is true, implying both are false.

Revised Task: N X N d
Behavior: It should be false that in the next time step, it is false that {d} is false, which effectively means {d} should be true in the next time step.
  },
  "N X X c": {
    "expected behavior is {c} should be true immediately. Such specification omits {c}.": "N F(X c)",
    "expected behavior is {c} should be true, no matter what the values of {a} and {b} are.": "N F(a U b U c)",
    "expected behavior is {c} should be true eventually, but don't need to be adjacent.": "F(N X X c)",
    "expected behavior is {c} should be true eventually, and don't need to be adjacent.": "F(N X F(X c))",
    "expected behavior is {c} should be true, and more than one atomic proposition in {{a}, {b}, {c}} should be true.": "N F(a O b O X c)"
    Revised Task: N X (c)

Behavior: The proposition {c} should not be true in the next timestep.
Revised Task: N X X X (c)

Behavior: The proposition {c} should not be true in the next to next to next timestep.
Revised Task: N X X (N c)

Behavior: The proposition {c} should not be true in the next to next timestep, and its negation should hold at that time.
Revised Task: N X X (G c)

Behavior: The proposition {c} should not be true in the next to next timestep, but afterwards, it should always be true.
Revised Task: N X X (F c)

Behavior: The proposition {c} should not be true in the next to next timestep, but eventually, it should be true.
Revised Task: N X (X c A X c)

Behavior: The proposition {c} should not be true in the next timestep, and in the next to next timestep, {c} should be true while also being true in the next timestep.
Revised Task: N X X (c A X c)

Behavior: The proposition {c} should not be true in the next to next timestep, and at that time, {c} should also be true in the next timestep.
Revised Task: N X X (c O X c)

Behavior: The proposition {c} should not be true in the next to next timestep, but either {c} or its next timestep value should be true.
Revised Task: N G X X (c)

Behavior: The proposition {c} should not always be true in the next to next timestep.
Revised Task: N X X (U c)

Behavior: The proposition {c} should not be true in the next to next timestep, but eventually, it should hold true until a certain condition is met.
  },
  "X e U e": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U e",
    "expected behavior is {e} should be true first, and then {e} should be true all the time.": "G(e U e)",
    "expected behavior is more than one atomic proposition in {e} should be true.": "F(e O e)",
    "expected behavior is {e} should be true first, and then {e} should not be true.": "F(e U X(e))",
    "expected behavior is {e} should be true first, and then {e} should always be true.": "F(e A G(e))"
    Revised Task: X (e U e)
Behavior: The event e should be true at least twice in a row, starting from the next timestep.

Revised Task: G (e U e)
Behavior: The event e should repeatedly occur at least twice in a row, throughout all timesteps.

Revised Task: X (e A e)
Behavior: The event e should be true in the next timestep and remain true immediately after.

Revised Task: X (e O e)
Behavior: The event e should be true in the next timestep, or it can be false but then true immediately after.

Revised Task: F (e U e)
Behavior: Eventually, the event e will be true at least twice in a row.

Revised Task: X (N e U e)
Behavior: The event e should not be true in the next timestep, but subsequently, it should be true at least twice in a row.

Revised Task: X (e U N e)
Behavior: In the next timestep, the event e should start being true and continue until it becomes false at least once.

Revised Task: G (e O X e)
Behavior: The event e should always be true, or if it is false at any point, it must be true in the subsequent timestep.

Revised Task: F (N e U e)
Behavior: Eventually, the event e will follow a pattern where it is first false and then true at least twice in a row.

Revised Task: X (e U X e)
Behavior: The event e should be true in the next timestep, and then again in the timestep immediately following its first occurrence.
  },
  "N N G a": {
    "expected behavior is {a} should eventually be true. Such specification omits {a}.": "G(N a)",
    "expected behavior is {a} should always be true. Such specification omits {a}.": "G a",
    "expected behavior is {a} should be true once and then eventually be false. Such specification omits {a}.": "N(G a)",
    "expected behavior is {a} should be true once and then eventually be true again. Such specification omits {a}.": "N(N G a)",
    "expected behavior is {a} should be true twice and then eventually be false. Such specification omits {a}.": "N(N G a) U G a"
    Revised Task: G(N a)

Behavior: It is always the case that {a} is not true.
Revised Task: N G N a

Behavior: It is not always the case that {a} is not true.
Revised Task: G N a

Behavior: It is always the case that in the next timestep, {a} is true.
Revised Task: N G a

Behavior: It is not always the case that {a} is true.
Revised Task: N N N G a

Behavior: It is never the case that it is never the case that it is always true that {a} is true.
Revised Task: G G a

Behavior: It is always the case that it is always true that {a} is true.
Revised Task: N N G N a

Behavior: It is never the case that it is always true that {a} is not true.
Revised Task: N G G a

Behavior: It is not the case that it is always true that it is always true that {a} is true.
Revised Task: N N N a

Behavior: It is never the case that it is never the case that {a} is true.
Revised Task: N N X G a

Behavior: It is never the case that in the next timestep, it is always true that {a} is true.
  },
  "N N X a": {
    "expected behavior is {a} should be false eventually. Such specification omits {a}.": "N N X (a)",
    "expected behavior is {a} should not be true eventually. Such specification omits {a}.": "N N X (N a)",
    "expected behavior is {a} should not be true eventually, but {a} can be true before that.": "N N X (G a)",
    "expected behavior is {a} should not be true eventually, and {a} should not be true at any time before that.": "N N X (F a)",
    "expected behavior is to eventually make {a} false, and {a} should not be true at any time before that.": "N N X (N F a)"
    Revised Task: N X N a

Behavior: The next state should not be such that it's not the case that {a} is true.
Revised Task: N N G a

Behavior: It should always be the case that it's not true that it's not true that {a} is true.
Revised Task: N N F a

Behavior: Eventually, it should be the case that it's not true that it's not true that {a} is true.
Revised Task: N X a

Behavior: In the next state, it should not be the case that {a} is true.
Revised Task: N N U a b

Behavior: It should not be true that it's not true that {a} is true until {b} becomes true.
Revised Task: X N N a

Behavior: In the next state, it should be the case that it's not true that it's not true that {a} is true.
Revised Task: N N X (a A b)

Behavior: It should not be true that it's not true that in the next state both {a} and {b} are true.
Revised Task: N N (a U b)

Behavior: It should not be true that it's not true that {a} remains true until {b} becomes true.
Revised Task: N G N a

Behavior: It should not be the case that always it's not true that {a} is true.
Revised Task: N (a U N b)

Behavior: It should not be true that {a} remains true until it's not the case that {b} is true.
  },
  "b A G b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "F(b A G(b))",
    "expected behavior is {b} should always be true.": "G(b)",
    "expected behavior is {b} should be true at least once.": "F(b)",
    "expected behavior is {b} should be true at least twice.": "F(b A b)",
    "expected behavior is {b} should be true at least three times.": "F(b A b A b)"
    Revised Task: G(b A G b)

Behavior: The proposition {b} should always be true, and it should always be that {b} is always true.
Revised Task: b A X G b

Behavior: The proposition {b} should be true, and in the next timestep, {b} should always be true.
Revised Task: b A F G b

Behavior: The proposition {b} should be true, and eventually, it will always be that {b} is always true.
Revised Task: b A G (b O c)

Behavior: The proposition {b} should be true, and it should always be that either {b} or {c} is true.
Revised Task: b A G N b

Behavior: The proposition {b} should be true, and it should always be that {b} is not true. (Note: This is a contradictory behavior.)
Revised Task: N (b A G b)

Behavior: It should never be the case that {b} is true and always {b} is true.
Revised Task: b O G b

Behavior: Either {b} is true, or it is always the case that {b} is true.
Revised Task: b A G (b U c)

Behavior: The proposition {b} should be true, and it should always be that {b} is true until {c} becomes true.
Revised Task: b A G X b

Behavior: The proposition {b} should be true, and it should always be that in the next timestep {b} is true.
Revised Task: b A U G b

Behavior: The proposition {b} should be true, and it should be true until it is always the case that {b} is true.
  },
  "G c U b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U c",
    "expected behavior is {b} should be true first, and then {c} should be true.": "G(b U c)",
    "expected behavior is {b} and {c} should be true simultanously.": "F(b A c)",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "G(b O c)",
    "expected behavior is finally {b} and {c} should be true, no matter what the values of {b} and {c} are.": "G(b A c)"
    Revised Task: G(c U (b A X a))

Behavior: {c} should always be true, or {b} and {a} should be true in the next timestep after {b} becomes true.
Revised Task: G(c U (b O a))

Behavior: {c} should always be true, or either {b} or {a} should eventually be true.
Revised Task: G(c U X(b))

Behavior: {c} should always be true, or {b} should be true in the next timestep.
Revised Task: G(c A b)

Behavior: Both {c} and {b} should always be true.
Revised Task: F(c U b)

Behavior: Eventually, {c} should be true until {b} becomes true.
Revised Task: G(c U F(b))

Behavior: {c} should always be true, or eventually, {b} should become true.
Revised Task: G(c U (b A N a))

Behavior: {c} should always be true, or {b} and not {a} should be true simultaneously.
Revised Task: G(c U (b A G a))

Behavior: {c} should always be true, or {b} and {a} should always be true together.
Revised Task: G(c O b)

Behavior: Either {c} should always be true, or {b} should be true.
Revised Task: G(c U (N b))

Behavior: {c} should always be true, or not {b} should eventually be true.
  },
  "G c O b": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "G(c O b)",
    "expected behavior is {c} and {b} should be true simultanously.": "G(c A b)",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {c} should be true.": "G(c O X(b))",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "G(b O c)",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "G(b A F(c))"
    Revised Task: G c U b
Behavior: {c} should always be true until {b} becomes true.

Revised Task: G c A b
Behavior: Both {c} and {b} should always be true.

Revised Task: X c O b
Behavior: In the next timestep, either {c} or {b} should be true.

Revised Task: G (c O X b)
Behavior: Always, either {c} should be true or {b} should be true in the next timestep.

Revised Task: G (c A G b)
Behavior: Always, {c} should be true and {b} should always be true thereafter.

Revised Task: G (N c O b)
Behavior: Always, either {c} should not be true or {b} should be true.

Revised Task: F (c O b)
Behavior: Eventually, either {c} or {b} should be true.

Revised Task: G (c O E b)
Behavior: Always, either {c} should be true or {b} should eventually be true.

Revised Task: G (c O U b)
Behavior: Always, either {c} should be true or it should be true until {b} becomes true.

Revised Task: G (c O G b)
Behavior: Always, either {c} should be true or {b} should always be true.






  },
  "X a O e": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "F(a O e)",
    "expected behavior is to make {a} and {e} be true simultanously.": "F(a A e)",
    "expected behavior is to make {a} and {e} be true sequentially and don't need to be adjacent.": "F(a A F(e))",
    "expected behavior is more than one atomic proposition in {{a}, {e}} should be true.": "F(a O e)",
    "expected behavior is {e} shoule be true, or {a} should not be true first, and then {a} or {e} should be true.": "F(a U (X a O e))"
    Revised Task: X (a O e)
Behavior: Either {a} or {e} should be true in the next timestep.

Revised Task: X a A e
Behavior: Both {a} and {e} should be true in the next timestep.

Revised Task: G(a O e)
Behavior: Either {a} or {e} should always be true.

Revised Task: X (a U e)
Behavior: {a} should be true until {e} becomes true in the next timestep.

Revised Task: X (a O N(e))
Behavior: Either {a} should be true or {e} should be false in the next timestep.

Revised Task: X (N(a) O e)
Behavior: Either {a} should be false or {e} should be true in the next timestep.

Revised Task: X (a O E(e))
Behavior: Either {a} should be true in the next timestep or {e} should eventually be true.

Revised Task: E(a O e)
Behavior: Either {a} or {e} should eventually be true.

Revised Task: X (a O G(e))
Behavior: Either {a} should be true in the next timestep, or {e} should always be true.

Revised Task: X (a O X(e))
Behavior: Either {a} should be true in the next timestep, or {e} should be true in the timestep after next.






  },
  "N b A a": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A a",
    "expected behavior is {a} and {b} should be true simultanously.": "F(b A a)",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "F(b A F(a))",
    "expected behavior is more than one atomic proposition in {{a}, {b}} should be true.": "F(b O a)",
    "expected behavior is {b} should not be true first, and then {a} should be true.": "N(b U a)"
    Revised Task: N b A N a
Behavior: Neither {b} nor {a} should be true.

Revised Task: N(b O a)
Behavior: It's not the case that either {b} or {a} is true.

Revised Task: G(N b A a)
Behavior: Always, {b} should not be true, but {a} should be true.

Revised Task: F(N b A a)
Behavior: Eventually, {b} should not be true and {a} should be true.

Revised Task: N b A X a
Behavior: {b} should not be true and in the next timestep, {a} should be true.

Revised Task: X(N b) A a
Behavior: In the next timestep, {b} should not be true, and {a} should be true.

Revised Task: N b A G a
Behavior: {b} should not be true and {a} should always be true.

Revised Task: E(N b A a)
Behavior: It's possible for {b} to not be true and {a} to be true at some point.

Revised Task: N b A (a U c)
Behavior: {b} should not be true, and {a} should be true until {c} becomes true.

Revised Task: N(b A a)
Behavior: It's not the case that both {b} and {a} are true.






  },
  "E X N c": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "N c U X N c",
    "expected behavior is {c} should be true infinitely often.": "G(N c U X N c)",
    "expected behavior is {c} should be true at least once and then remains true.": "F(N c U X N c)",
    "expected behavior is {c} should be true and then never be false.": "G(F(N c U X N c))",
    "expected behavior is {c} should be true and then may be false for a finite number of times.": "G(F(N c U (X N c O X N c)))"
    Revised Task: E X c

Behavior: Eventually, in the next timestep, {c} should be true.
Revised Task: E X X N c

Behavior: Eventually, it should be the case that in two timesteps from now, {c} is not true.
Revised Task: E N c

Behavior: Eventually, {c} should not be true.
Revised Task: E X (a U c)

Behavior: Eventually, in the next timestep, {a} should be true until {c} becomes true.
Revised Task: E X (a A c)

Behavior: Eventually, in the next timestep, {a} and {c} should be true simultaneously.
Revised Task: E X (a O c)

Behavior: Eventually, in the next timestep, either {a} or {c} should be true.
Revised Task: G X N c

Behavior: Always, in the next timestep, {c} should not be true.
Revised Task: E X (b U N c)

Behavior: Eventually, in the next timestep, {b} should be true until {c} is not true.
Revised Task: E (X c A N c)

Behavior: Eventually, {c} should be true in the next timestep and simultaneously not true.
Revised Task: E X (N a U c)

Behavior: Eventually, in the next timestep, {a} should not be true until {c} becomes true.
  },
  "f U X e": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U X(f)",
    "expected behavior is to make {f} and {e} be true simultanously.": "F(f A e)",
    "expected behavior is to make {f} and {e} be true sequentially and don't need to be adjacent.": "F(f A F(e))",
    "expected behavior is more than one atomic proposition in {{f}, {e}} should be true.": "F(f O e)",
    "expected behavior is {f} shoule be true, or {f} should not be tre first, and then {f} or {e} should be true.": "F(f U (X(f) O e))"
    Revised Task: f U X (e)

Behavior: The value of {f} should be true until in the next timestep, {e} becomes true.
Revised Task: f U (X e)

Behavior: The value of {f} should be true until it is immediately followed by {e} being true.
Revised Task: G(f U X e)

Behavior: Always, {f} should be true until in the next timestep, {e} becomes true.
Revised Task: f U (X N e)

Behavior: The value of {f} should be true until it is immediately followed by {e} not being true.
Revised Task: f U (N X e)

Behavior: The value of {f} should be true until in the next timestep, {e} is not true.
Revised Task: N(f U X e)

Behavior: It is not the case that {f} should be true until in the next timestep, {e} becomes true.
Revised Task: f U (X O e)

Behavior: The value of {f} should be true until it is immediately followed by {e} being true or false.
Revised Task: f O X e

Behavior: Either {f} is true, or in the next timestep, {e} becomes true.
Revised Task: E(f U X e)

Behavior: Eventually, {f} should be true until in the next timestep, {e} becomes true.
Revised Task: f U (X G e)

Behavior: The value of {f} should be true until in the next timestep, {e} always remains true.
  },
  "f U G e": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U G(f)",
    "expected behavior is {f} should be true, or {f} should not be true first, and then {f} or {e} should be true.": "f U (G f O e)",
    "expected behavior is {f} and {e} should be true simultanously, and then {e} should always be true.": "f U (G(e) A e)",
    "expected behavior is more than one atomic proposition in {{f}, {e}} should be true.": "f O G(e)",
    "expected behavior is finally {e} should be true, no matter what the value of {f} is.": "f U e"
    Revised Task: f U (G e)
Behavior: {f} should be true until it is always the case that {e} is true.

Revised Task: f U (e A G f)
Behavior: {f} should be true until {e} is true, and from then on {f} should always be true.

Revised Task: G(f U e)
Behavior: It should always be the case that {f} is true until {e} becomes true.

Revised Task: f U (X e)
Behavior: {f} should be true until {e} is true in the next timestep.

Revised Task: f A G e
Behavior: {f} should be true, and {e} should always be true.

Revised Task: N(f U G e)
Behavior: It is not the case that {f} should be true until {e} always becomes true.

Revised Task: f U (G N e)
Behavior: {f} should be true until it is always the case that {e} is not true.

Revised Task: f O G e
Behavior: Either {f} is true or it is always the case that {e} is true.

Revised Task: f U (e U G f)
Behavior: {f} should be true until {e} becomes true, and then {f} should always be true eventually.






  },
  "d O X d": {
    "expected behavior is {d} should be true first and then {d} should be true again.": "d U X(d)",
    "expected behavior is {d} should be true first and then {d} should be true again, no matter what the time gap between them.": "d U X[1,\u221e](d)",
    "expected behavior is {d} should be true at least twice.": "F(d U X(d))",
    "expected behavior is {d} should be true twice consecutively.": "F(d A X(d))",
    "expected behavior is {d} should be true first and then {d} should be true again, but they don't need to be adjacent.": "F(d A X F(d))"
    Revised Task: d O X (d)
Behavior: Either {d} should be true now or {d} should be true in the next timestep.

Revised Task: G(d O X d)
Behavior: It's always the case that either {d} is true now or it will be true in the next timestep.

Revised Task: d O G(d)
Behavior: Either {d} is true now or {d} should always be true in the future.

Revised Task: d O F(d)
Behavior: Either {d} is true now or {d} should eventually become true.

Revised Task: d O X F(d)
Behavior: Either {d} is true now or in the next timestep, {d} should eventually become true.

Revised Task: d O N(d)
Behavior: Either {d} is true now or {d} is not true now.

Revised Task: d O U(d)
Behavior: Either {d} is true now or {d} will be true until some condition is met.

Revised Task: d O (X N(d))
Behavior: Either {d} is true now or in the next timestep, {d} should not be true.

Revised Task: F(d O X d)
Behavior: Eventually, it should be the case that either {d} is true now or will be true in the next timestep.

Revised Task: d O (d A X d)
Behavior: Either {d} is true now, or {d} should be true now and also in the next timestep.
  },
  "N N E b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b",
    "expected behavior is {b} should be false first. Such specification omits {b}.": "N b",
    "expected behavior is {b} should be true again. Such specification omits {b}.": "b U b",
    "expected behavior is {b} should not be true twice. Such specification omits {b}.": "N N b",
    "expected behavior is {b} should not be true three times. Such specification omits {b}.": "N N N b"
    Revised Task: N E b

Behavior: Eventually, {b} should not be true.
Revised Task: N N G b

Behavior: It should always be false that {b} is not true.
Revised Task: E N b

Behavior: Eventually, {b} should be false.
Revised Task: G N b

Behavior: It should always be the case that {b} is not true.
Revised Task: N N E (N b)

Behavior: It should not be the case that eventually {b} is not true.
Revised Task: E E b

Behavior: It should eventually be the case that eventually {b} is true.
Revised Task: N G b

Behavior: It should not be the case that {b} is always true.
Revised Task: N N b

Behavior: It should be false that {b} is not true.
Revised Task: N N E (b A c)

Behavior: It should not be the case that eventually both {b} and {c} are true.
Revised Task: E (b O c)

Behavior: Eventually, either {b} or {c} should be true.
  },
  "X X N b": {
    "expected behavior is {b} should be true and doesn't need to be adjacent.": "X(X(Nb))",
    "expected behavior is {b} should be true eventually and doesn't need to be adjacent.": "F(X(Nb))",
    "expected behavior is {b} should be true eventually, but not necessarily adjacent.": "F(X(F(Nb)))",
    "expected behavior is {b} should be true eventually, but not necessarily in two steps.": "F(F(Nb))",
    "expected behavior is {b} should always be true.": "G(X(Nb))"
    Revised Task: X N b

Behavior: In the next time step, {b} should not be true.
Revised Task: X X G b

Behavior: Starting from two time steps ahead, {b} should always be true.
Revised Task: X X X b

Behavior: In three time steps ahead, {b} should be true.
Revised Task: G X N b

Behavior: From now onwards, it should always be the case that in the next time step, {b} is not true.
Revised Task: X X E b

Behavior: Starting from two time steps ahead, {b} should eventually be true.
Revised Task: X X (b U N b)

Behavior: In two time steps ahead, {b} should be true until it is not true in the following step.
Revised Task: X X (b A N b)

Behavior: In two time steps ahead, {b} should be true and simultaneously not true, which is a contradiction and thus always false.
Revised Task: X (N b U X b)

Behavior: In the next step, {b} should not be true until the step after, where {b} should be true.
Revised Task: X (b O X N b)

Behavior: In the next step, either {b} is true or in the step after, {b} should not be true.
Revised Task: F X X b

Behavior: Eventually, in two time steps ahead, {b} should be true.
  },
  "N N N d": {
    "expected behavior is {d} should never be true. Such specification omits {d}.": "N N N N d",
    "expected behavior is to make {d} be true after three times of false.": "N N N F d",
    "expected behavior is to make {d} be true after two times of false.": "N N F d",
    "expected behavior is to make {d} be true after one time of false.": "N F d",
    "expected behavior is to make {d} be true after four times of false.": "N N N N F d"
    Revised Task: N N d

Behavior: Initially, the value of {d} is not concerned, but in the next timestep, {d} should not be true.
Revised Task: N N N N d

Behavior: Initially, the value of {d} is not concerned, but it should not be true for three consecutive timesteps.
Revised Task: N N (d A e)

Behavior: Initially, the value of {d} and {e} are not concerned, but in the next timestep, neither {d} nor {e} should be true.
Revised Task: N N (d O e)

Behavior: Initially, the value of {d} is not concerned, but in the next timestep, either {d} or {e} should not be true.
Revised Task: N N X d

Behavior: Initially, the value of {d} is not concerned, but in the next timestep, {d} should not be true in the subsequent timestep.
Revised Task: N N G d

Behavior: Initially, the value of {d} is not concerned, but in the next timestep, {d} should not be true for all subsequent timesteps.
Revised Task: N N E d

Behavior: Initially, the value of {d} is not concerned, but in the next timestep, {d} should not eventually be true.
Revised Task: N d

Behavior: {d} should not be true in the next timestep.
Revised Task: N N (d U e)

Behavior: Initially, the value of {d} is not concerned, but in the next timestep, {d} should not be true until {e} is true.
Revised Task: N N N (d A e)

Behavior: Initially, the value of {d} and {e} is not concerned, but neither {d} nor {e} should be true in the third timestep.
  },
  "c A X f": {
    "expected behavior is {f} should be true only after {c}. Such specification omits {c}.": "c A X(f)",
    "expected behavior is {c} and {f} should be true simultanously.": "F(c A f)",
    "expected behavior is {c} should be true first, and then {f} should be true sequentially and don't need to be adjacent.": "F(c A F(X(f)))",
    "expected behavior is {c} should be true first, and then {f} should eventually be true.": "G(c A X(f))",
    "expected behavior is {c}, {f} and other atomic propositions should be true.": "F(c O X(f))"
    Revised Task: c A X (f)
Behavior: {c} should be true and in the next timestep, {f} should also be true.

Revised Task: c A F(f)
Behavior: {c} should be true and eventually, {f} should be true.

Revised Task: c A G(f)
Behavior: {c} should be true and {f} should always be true thereafter.

Revised Task: c A X G(f)
Behavior: {c} should be true and from the next timestep onwards, {f} should always be true.

Revised Task: c O X f
Behavior: Either {c} should be true or {f} should be true in the next timestep.

Revised Task: c A X N(f)
Behavior: {c} should be true and in the next timestep, {f} should not be true.

Revised Task: N(c) A X f
Behavior: {c} should not be true and in the next timestep, {f} should be true.

Revised Task: c U X f
Behavior: {c} should be true until, in the next timestep, {f} becomes true.

Revised Task: c A (X f A G(c))
Behavior: {c} should be true and in the next timestep, {f} should be true and {c} should always be true thereafter.

Revised Task: c A (X f O N(c))
Behavior: {c} should be true and in the next timestep, either {f} should be true or {c} should not be true.
  },
  "X G N f": {
    "expected behavior is {f} should be true eventually. Such specification omits {f}.": "X G N G f",
    "expected behavior is {f} should never be true.": "X G N F f",
    "expected behavior is {f} should be true until some other atomic propositions become true.": "X (G N f) U p",
    "expected behavior is {f} should be true until some other atomic propositions become false.": "X (G N f) U Fq",
    "expected behavior is {f} should not be true and then other atomic propositions become true.": "X (G N Ff) U p"
    Revised Task: X(G N(f))

Behavior: The proposition {f} should not be true in all future timesteps, starting from the next timestep.
Revised Task: G(X N(f))

Behavior: Starting from the next timestep, {f} should not be true in all subsequent timesteps.
Revised Task: X N G(f)

Behavior: Starting from the next timestep, it is not the case that {f} should be true at all future timesteps.
Revised Task: X G(f)

Behavior: Starting from the next timestep, {f} should be true at all future timesteps.
Revised Task: X G N(f) A G(f)

Behavior: Starting from the next timestep, it is not the case that {f} should be always true, and {f} should always be true.
Revised Task: G N X(f)

Behavior: It is not the case that starting from the next timestep, {f} should be true.
Revised Task: N X G(f)

Behavior: It is not the case that starting from the next timestep, {f} should always be true.
Revised Task: X(G N(f)) A X(f)

Behavior: Starting from the next timestep, {f} should not be always true, but {f} should be true in the next timestep.
Revised Task: X E N(f)

Behavior: Starting from the next timestep, {f} should not be true at some future timestep.
Revised Task: G X N(f)

Behavior: In all future timesteps, starting from the next timestep, {f} should not be true.





  },
  "E a A d": {
    "expected behavior is {a} should be true first and {d} should be true eventually. Such specification omits {d}.": "E(a A d)",
    "expected behavior is {a} and {d} should be true simultanously.": "F(a A d)",
    "expected behavior is to make {a} and {d} be true sequentially and don't need to be adjacent.": "E(a A F(d))",
    "expected behavior is to make {a}, {d} and other propositions be true sequentially and don't need to be adjacent.": "E(a A F(b A F(d)))",
    "expected behavior is {a}, {b} and {d} finally be true simultanously.": "F(a A b A d)"
    Revised Task: E(a A G(d))

Behavior: Eventually, {a} and {d} must be true, with {d} remaining true always from that point onwards.
Revised Task: G(a A E(d))

Behavior: {a} must always be true and at some point, {d} must become true.
Revised Task: E(a O E(d))

Behavior: Eventually, either {a} or {d} must be true, with no requirement for both to be true simultaneously.
Revised Task: E(a U d)

Behavior: {a} must be true until {d} becomes true, at which point {a} can be false.
Revised Task: E(N a A d)

Behavior: Eventually, it must be the case that {a} is not true while {d} is true.
Revised Task: E(a A X(d))

Behavior: Eventually, {a} and {d} must be true, with {d} being true in the next timestep after {a} becomes true.
Revised Task: E(a A d A G(d))

Behavior: Eventually, {a} and {d} must be true simultaneously, with {d} remaining true always from that point onwards.
Revised Task: G(E a A d)

Behavior: It must always be the case that eventually {a} and {d} are true simultaneously.
Revised Task: E(X a A d)

Behavior: Eventually, {a} should be true in the next timestep and {d} should be true simultaneously.
Revised Task: E(a A d O N d)

Behavior: Eventually, {a} and {d} must be true simultaneously, or {d} must not be true.
  },
  "X c A f": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "F(f A X c)",
    "expected behavior is to make {c} and {f} be true simultanously.": "F(c A f)",
    "expected behavior is to make {c} and {f} be true sequentially and don't need to be adjacent.": "F(X c A f)",
    "expected behavior is to make {c} finally be true, no matter what the value of {f} is.": "G(f A X c)",
    "expected behavior is {c} should always be true, or {f} should be true first, and then {c} should be true.": "G(f U X c)"
    Revised Task: X(c A f)
Behavior: In the next timestep, both {c} and {f} should be true simultaneously.

Revised Task: X(c O f)
Behavior: In the next timestep, either {c} or {f} (or both) should be true.

Revised Task: G(c A f)
Behavior: {c} and {f} should always be true in every timestep.

Revised Task: E(c A f)
Behavior: {c} and {f} should eventually be true simultaneously at some point in time.

Revised Task: X(c A N f)
Behavior: In the next timestep, {c} should be true and {f} should be false.

Revised Task: N(X c A f)
Behavior: It is not the case that in the next timestep both {c} and {f} will be true.

Revised Task: X(c A G f)
Behavior: In the next timestep, {c} should be true and {f} should always be true thereafter.

Revised Task: X(c U f)
Behavior: In the next timestep, {c} should be true until {f} becomes true.

Revised Task: G(X c A f)
Behavior: It should always be the case that in the next timestep both {c} and {f} are true.

Revised Task: E(X c A f)
Behavior: Eventually, it will be the case that in the next timestep both {c} and {f} are true.






  },
  "f U E b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U E(f)",
    "expected behavior is to make {f} and {b} be true simultanously.": "f A b",
    "expected behavior is to make {f} and {b} be true sequentially and don't need to be adjacent.": "f U E(b)",
    "expected behavior is to make {f} and {b} be true sequentially and should be adjacent.": "f U b",
    "expected behavior is more than one atomic proposition in {{f},{b}} should be true.": "f O b"
    Revised Task: G(f U E b)
Behavior: The property {b} should eventually become true, and until then, {f} should be true. This pattern should hold always.

Revised Task: f U (E b)
Behavior: Eventually, {b} should become true, and until then, {f} should be true.

Revised Task: f U (E N b)
Behavior: Eventually, {b} should not be true, and until then, {f} should be true.

Revised Task: N(f U E b)
Behavior: It's not the case that {b} should eventually become true and {f} should be true until then.

Revised Task: f A E b
Behavior: Both {f} should be true, and eventually, {b} should be true.

Revised Task: f U (X E b)
Behavior: Eventually, {b} should become true, but only after the next time step, and until then, {f} should be true.

Revised Task: f O E b
Behavior: Either {f} should be true, or eventually, {b} should be true.

Revised Task: f U (b A E b)
Behavior: {b} should eventually become true, and {b} should be true in that instance, while until then, {f} should be true.

Revised Task: f U (b O E b)
Behavior: Either {b} should eventually become true, or until then, {f} should be true.

Revised Task: f U (b U E b)
Behavior: Eventually, {b} should become true and maintain that state, and until then, {f} should be true.
  },
  "N X N b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "N b A X(N b)",
    "expected behavior is to make {b} true infinitely often.": "G(b A X(N b))",
    "expected behavior is to make {b} true at least once and then remain true forever.": "F(b A X(G b))",
    "expected behavior is to make {b} true at least once and then remain true for a finite time.": "F(b A X(F b))",
    "expected behavior is to make {b} true at least once and then remain false forever.": "F(b A X(N b))"
    Revised Task: N X b
Behavior: {b} should not be true in the next timestep.

Revised Task: N X N X b
Behavior: {b} should be true in two timesteps from now.

Revised Task: N X N (a O b)
Behavior: either {a} or {b} should not be true in the next timestep.

Revised Task: N (a U b)
Behavior: until {b} becomes true, {a} should not be true.

Revised Task: N X (a A b)
Behavior: in the next timestep, {a} and {b} should not both be true.

Revised Task: N X E b
Behavior: {b} should eventually not be true in the next timestep.

Revised Task: G N X b
Behavior: it should always be the case that {b} is not true in the next timestep.

Revised Task: E N X b
Behavior: it should eventually be the case that {b} is not true in the next timestep.

Revised Task: N X G b
Behavior: in the next timestep, it should always be the case that {b} is not true.

Revised Task: N X U (a, b)
Behavior: {b} should not be true in the next timestep until {a} becomes true.
  },
  "N G N d": {
    "expected behavior is {d} should not be true. Such specification omits {d}.": "N G N F(d)",
    "expected behavior is {d} should be false, or {d} should not be true first, and then {d} can be true or false.": "N G N (F(d) U d)",
    "expected behavior is {d} should always be false.": "G N F(d)",
    "expected behavior is {d} should be false initially, and then {d} can be true or false.": "F(N G N d)",
    "expected behavior is to make sure {d} is false in the end.": "N F(G N d)"
    Revised Task: N G d
Behavior: {d} should not always be true.

Revised Task: G N d
Behavior: {d} should not be true at the next timestep.

Revised Task: N G (d A e)
Behavior: It's not the case that {d} and {e} are always true.

Revised Task: G (N d A e)
Behavior: {d} is not true at the next timestep, and {e} is always true.

Revised Task: N G (d O e)
Behavior: It's not the case that either {d} or {e} are always true.

Revised Task: G (N d O e)
Behavior: Either {d} is not true at the next timestep, or {e} is always true.

Revised Task: N (G d A e)
Behavior: It's not the case that {d} is always true and {e} is true.

Revised Task: (N G d) A e
Behavior: {d} should not always be true, and {e} is true.

Revised Task: N G (N d)
Behavior: It's not the case that {d} is not always true.

Revised Task: G (N d U e)
Behavior: {d} is not true at the next timestep until {e} is true.
  },
  "G c A c": {
    "expected behavior is to make c true. Such specification omits {c}.": "G c A F c",
    "expected behavior is to make {c} true when {c} is already true.": "G c A T c",
    "expected behavior is to make {c} false when {c} is already true.": "G c A F F c",
    "expected behavior is {c} should be true sequentially.": "G F c A F c",
    "expected behavior is {c} should be true simultanously.": "G c A c U T c"
    Revised Task: G(c O c)
Behavior: {c} should always be true, or {c} may not be true at some points but eventually always true.

Revised Task: G(X c A c)
Behavior: In every timestep, the value of {c} in the next timestep and the current timestep should always be true.

Revised Task: G(c A G c)
Behavior: {c} should be always true, and it must remain true continuously.

Revised Task: G(c U c)
Behavior: {c} should be true and remain true until it is true again, which effectively means always true.

Revised Task: G(N c A c)
Behavior: {c} should always be true, but there will be an inconsistency as {c} is also expected to be not true simultaneously.

Revised Task: E(c A c)
Behavior: Eventually, {c} should be true, and this true state of {c} should coincide with another instance of {c} being true.

Revised Task: G(c O X c)
Behavior: {c} should always be true, or it should be true in the next timestep.

Revised Task: X(G c A c)
Behavior: Starting from the next timestep, {c} should always be true, and this state should be maintained continuously.

Revised Task: G(c A E c)
Behavior: {c} should always be true, and there should be an instance where {c} becomes true.

Revised Task: G(E c A c)
Behavior: There should be a point where {c} is true and from that point onwards, {c} should always be true.
  },
  "N G G b": {
    "expected behavior is {b} should not be true. Such specification omits {b}.": "N G b",
    "expected behavior is {b} should be true infinitely often.": "N G F b",
    "expected behavior is {b} should be true finitely often.": "N G X b",
    "expected behavior is {b} should be true at least once.": "N G (b U b)",
    "expected behavior is {b} should be true until some other atomic proposition is true.": "N G (b U X b)"
    Revised Task: N G b
Behavior: It should always be the case that {b} is not true eventually.

Revised Task: N G G (a A b)
Behavior: It should always be the case that neither {a} nor {b} are always true.

Revised Task: N G G (b O c)
Behavior: It should always be the case that {b} is not always true or {c} is not always true.

Revised Task: N (G b U a)
Behavior: {b} should not be always true until {a} becomes true.

Revised Task: N G G (X b)
Behavior: It should always be the case that {b} is not true in the next timestep.

Revised Task: N G G (E b)
Behavior: It should always be the case that {b} is not true at some point in the future.

Revised Task: N G (b U c)
Behavior: It should always be the case that {b} is not true until {c} becomes true.

Revised Task: N G G (b A c)
Behavior: It should always be the case that {b} and {c} are not always true simultaneously.

Revised Task: G N G b
Behavior: It should always be the case that it is not always the case that {b} is true.

Revised Task: N E G b
Behavior: It should be the case at some point that {b} is not always true.
  },
  "E a O a": {
    "expected behavior is {a} should be true. Such specification omits {a}.": "F(a O a)",
    "expected behavior is {a} should always be true. Such specification omits {a}.": "G(a O a)",
    "expected behavior is {a} should be true first, and then {a} should be true until the end. Such specification omits {a}.": "F(a U a)",
    "expected behavior is {a} should be true first, and then {a} should be true periodically. Such specification omits {a}.": "F(a A X(a))",
    "expected behavior is {a} should be true first, and then either {a} or {b} should be true. Such specification omits {b}.": "F(a O b O a)"
    Revised Task: E a
Behavior: Eventually, {a} should be true.

Revised Task: E(a A a)
Behavior: Eventually, both instances of {a} should be true simultaneously.

Revised Task: E(N a)
Behavior: Eventually, {a} should be false.

Revised Task: G(E a)
Behavior: It should always be the case that {a} will eventually be true.

Revised Task: E(a U a)
Behavior: {a} should be true until {a} becomes true, which essentially means {a} should eventually be true.

Revised Task: E(X a)
Behavior: {a} should be true in the next time step.

Revised Task: E(a O N a)
Behavior: Eventually, {a} should be true or not true, which essentially means the behavior is not restricted.

Revised Task: E(a O G a)
Behavior: Eventually, {a} should be true or always be true, which means either {a} eventually becomes true or it's always true.

Revised Task: E(E a O a)
Behavior: Eventually, {a} should eventually be true or just be true at some point, which emphasizes the eventual truth of {a}.

Revised Task: N(E a O a)
Behavior: It should never be the case that {a} eventually becomes true or is true at some point, meaning {a} should always be false.
  },
  "N a O c": {
    "expected behavior is {a} should not be true, while {c} should be true. Such specification omits {c}.": "N(a O c)",
    "expected behavior is {a} should be false and {c} should be true simultaneously.": "N(a A c)",
    "expected behavior is {a} should not be true first, and then {c} should be true.": "N(a O X c)",
    "expected behavior is more than one atomic proposition in {{a}, {c}} should not be true.": "N(a O b O c)",
    "expected behavior is {a} or {c} should not be true, but both of them can not be true at the same time.": "N(a O b U c)",
    "expected behavior is {a} should not be true first, and then {c} should always be true.": "N(a O G c)",
    "expected behavior is finally {c} should not be true, no matter what the values of {a} are.": "N(a U N c)",
    "expected behavior is {c} should not always be true, or {a} should not be true first, and then {c} should not be true.": "N(a U N X c)"
    Revised Task: N a A c

Behavior: {a} should not be true and {c} should be true.
Revised Task: N (a U c)

Behavior: {a} should not be true until {c} becomes true.
Revised Task: N a O N c

Behavior: Either {a} is not true, or {c} is not true.
Revised Task: N a O G c

Behavior: Either {a} is not true, or {c} should always be true.
Revised Task: N a O X c

Behavior: Either {a} is not true, or {c} should be true in the next timestep.
Revised Task: E(N a O c)

Behavior: Eventually, it should be that either {a} is not true, or {c} is true.
Revised Task: G(N a O c)

Behavior: Always, it should be that either {a} is not true, or {c} is true.
Revised Task: N a O E c

Behavior: Either {a} is not true, or {c} should eventually be true.
Revised Task: N (a A c)

Behavior: {a} should not be true and simultaneously {c} should be true.
Revised Task: N a O (b U c)

Behavior: Either {a} is not true, or {b} should be true until {c} becomes true.
  },
  "N X G a": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "a U (X G a)",
    "expected behavior is {a} should be true eventually, but not neceesarily always. Such specification omits {a}.": "F(a U (X G a))",
    "expected behavior is {a} should be true eventually, and no matter what the values of {a} before it become true, {a} should still be true in the end.": "G(a U (X G a))",
    "expected behavior is {a} should be true eventually, and no matter what the values of {a} before it become true, {a} should still be true in the end, and finally {a} should always be true.": "F(G(a U (X G a)))",
    "expected behavior is {a} should be true eventually, and no matter what the values of {a} before it become true, {a} should still be true in the end, and finally {a} should always be true, but also there should be at least one instance of {a} being false.": "F(G(a U (N X G a)))"
    Revised Task: N G X a
Behavior: {a} should not be true in the next time step after the next.

Revised Task: N X (G a A E b)
Behavior: {a} should always be true starting from the next time step, and {b} should eventually be true, but initially {a} is not true.

Revised Task: N X (a O G b)
Behavior: Either {a} is not true in the next time step, or {b} should always be true starting from the next time step.

Revised Task: N X (E a)
Behavior: {a} should not be true in the next time step but should eventually be true.

Revised Task: N X (a U G b)
Behavior: {a} should not be true in the next time step, and {b} should always be true until {a} becomes true.

Revised Task: N (X a A G b)
Behavior: {a} is not true in the next time step and {b} should always be true.

Revised Task: N X (a A G b)
Behavior: In the next time step, both {a} and {b} must be true, but initially, {a} is not true.

Revised Task: G (N X a)
Behavior: It should always be the case that {a} is not true in the next time step.

Revised Task: E (N X a)
Behavior: Eventually, {a} should not be true in the next time step.

Revised Task: N X (a U b)
Behavior: {a} should not be true in the next time step until {b} becomes true.
  },
  "N E N a": {
    "expected behavior is {a} is true first. Such specification omits {a}.": "N(E(N(a)))",
    "expected behavior is {a} should be true in the future. Such specification omits {a}.": "N(E(F(a)))",
    "expected behavior is {a} should be true eventually. Such specification omits {a}.": "N(G(a))",
    "expected behavior is {a} should not be true eventually. Such specification omits {a}.": "N(N(G(a)))",
    "expected behavior is {a} should always be true. Such specification omits {a}.": "N(E(G(a)))"
    Revised Task: N E a
Behavior: Eventually, {a} must not be true.

Revised Task: N E N (a A a)
Behavior: Never eventually have both instances of {a} be not true.

Revised Task: N E (N a U a)
Behavior: Eventually, {a} must switch from not being true to being true.

Revised Task: N (E N a) A a
Behavior: It should not be the case that {a} will eventually be not true, and {a} must also be true at the same time.

Revised Task: N (E N a) O a
Behavior: Either it should not be the case that {a} will eventually be not true, or {a} is true.

Revised Task: E N (a A a)
Behavior: Eventually, it should not be true that both instances of {a} are true.

Revised Task: G N E N a
Behavior: It should always be the case that it is not eventually the case that {a} is not true.

Revised Task: N E (N a A a)
Behavior: Eventually, {a} should be both not true and true at the same time, which is a contradiction and thus impossible.

Revised Task: N E (a O N a)
Behavior: Eventually, either {a} is true or {a} is not true.

Revised Task: E (N a U N E a)
Behavior: Eventually, {a} must not be true until it is eventually not true again.
  },
  "c U N N c": {
    "expected behavior is {c} should be true after two steps. Such specification omits {c} in the first two steps.": "c U c U c",
    "expected behavior is {c} should be true after two steps, and {c} should be true in the first two steps.": "T U N N T",
    "expected behavior is {c} should be true after two steps, and {c} should be true in the first two steps, and {c} should always be true.": "G(c U N N c)",
    "expected behavior is {c} should be true after two steps, and {c} should be true in the first two steps, and {c} should be true after one step.": "G(c U c U c)",
    "expected behavior is more than one atomic proposition in {{c}} should be true.": "c U (c O c)"
    Revised Task: c U N c

Behavior: Eventually, {c} should be true after the next timestep.
Revised Task: G(c U N c)

Behavior: Always, eventually {c} should be true after the next timestep.
Revised Task: c U N G c

Behavior: Eventually, {c} should always be true after the next timestep.
Revised Task: E(c U N c)

Behavior: It is possible that eventually {c} will be true after the next timestep.
Revised Task: c U (N c A c)

Behavior: Eventually, {c} should be true and remain true in the next timestep.
Revised Task: c U (N N N c)

Behavior: Eventually, {c} should be true after three timesteps.
Revised Task: c U (N c O c)

Behavior: Eventually, {c} should be true in the next timestep or it is already true.
Revised Task: c U N (c A c)

Behavior: Eventually, {c} should be true in the next timestep, and it should still be true.
Revised Task: c U (N c U c)

Behavior: Eventually, {c} should be true in the next timestep and remain true until it is true again.
Revised Task: N (c U N c)

Behavior: It is not the case that {c} will eventually be true after the next timestep.
  },
  "c U N b": {
    "expected behavior is {c} should be true first and {b} should not be true.": "F(c U N(b))",
    "expected behavior is {c} should be true, but {b} should not be true and {b} can be true again.": "G(c U N(b))",
    "expected behavior is both {c} and {b} should be true simultanously.": "F(c A b)",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {b} or {c} should be true.": "F(c U (b O N(c)))",
    "expected behavior is if {c} is true, {b} should be true in a finite time.": "G(F(c A b))"
    Revised Task: c U b
Behavior: {c} should be true until {b} becomes true.

Revised Task: G(c U N b)
Behavior: It should always be the case that {c} is true until the next time step when {b} becomes true.

Revised Task: E(c U N b)
Behavior: Eventually, it should be the case that {c} is true until the next time step when {b} becomes true.

Revised Task: c U (N b A c)
Behavior: {c} should be true until the next timestep when {b} becomes true, and {c} must also be true at that time.

Revised Task: c U (N b O c)
Behavior: {c} should be true until either the next timestep when {b} becomes true or {c} is true.

Revised Task: N(c U N b)
Behavior: It is not the case that {c} should be true until the next timestep when {b} becomes true.

Revised Task: c U (b A N c)
Behavior: {c} should be true until {b} becomes true, and at that time, {c} should not be true in the next timestep.

Revised Task: c U (N b U c)
Behavior: {c} should be true until the next timestep when {b} becomes true, and subsequently until {c} becomes true again.

Revised Task: X(c U N b)
Behavior: In the next timestep, it should be the case that {c} is true until the following timestep when {b} becomes true.

Revised Task: c U G(N b)
Behavior: {c} should be true until it is always the case that {b} is not true in subsequent timesteps.
  },
  "N e A N a": {
    "expected behavior is {e} should not be true first. Such specification omits {e}.": "N (e A N a)",
    "expected behavior is to make {a} and {e} be true simultanously.": "N (e A a)",
    "expected behavior is to make {a} and {e} be true sequentially and don't need to be adjacent.": "N (e A F(a))",
    "expected behavior is to make {a}, {e} and {f} be true sequentially and don't need to be adjacent.": "N (e A F(a) A F(f))",
    "expected behavior is more than one atomic proposition in {{a}, {e}, {f}} should not be true.": "N (e O a O f)",
    "expected behavior is {a} shoule not be true, or {a} should not be true first, and then {a} or {f} should not be true.": "N (e O N(a U f))",
    "expected behavior is {a} and {f} should not be true simultanously, and then {f} should always not be true.": "N (e O N G(f))",
    "expected behavior is finally {f} should not be true, no matter what the values of {a} and {e} are.": "N (e U a U f)",
    "expected behavior is {f} should always not be true, or {a} and {e} be not true, but subsequently {f} should not be true.": "G(e U a U f)"
    Revised Task: N e O N a

Behavior: Either {e} is not true, or {a} is always false.
Revised Task: N e A G a

Behavior: {e} is not true, and {a} must be true at all times.
Revised Task: N E(e A N a)

Behavior: It's not true that eventually {e} and not {a} must be true.
Revised Task: E(N e A N a)

Behavior: Eventually, it will be true that {e} is not true and {a} is always false.
Revised Task: G(N e A N a)

Behavior: Always, {e} is not true and {a} is always false.
Revised Task: N e U N a

Behavior: {e} is not true until {a} is false.
Revised Task: N X(e A N a)

Behavior: In the next time step, {e} must not be true and {a} must always be false.
Revised Task: N e A X a

Behavior: {e} is not true, and {a} must be false in the next time step.
Revised Task: N (e O N a)

Behavior: Either {e} is not true, or {a} is not always false.
Revised Task: E(N e) A N a

Behavior: Eventually, {e} is not true, and {a} is always false.
  },
  "E E E N e": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e E E E N e",
    "expected behavior is {e} should always be true.": "G(e E E E N e)",
    "expected behavior is {e} should be true, or {e} should not be true first, and then {e} should be true again.": "E E E (N (e O e))",
    "expected behavior is {e} should be true, or {e} should not be true first, and then {e} should be true after a certain time.": "E E E (N (e U e))",
    "expected behavior is {e} should be true in a certain time.": "E E E (N F(e))"
    Revised Task: E E E e

Behavior: Eventually, it must be true that eventually, it must be true that eventually, {e} is true.
Revised Task: E E N E e

Behavior: Eventually, it must be true that eventually, it is not the case that eventually, {e} is true.
Revised Task: E E E N N e

Behavior: Eventually, it must be true that eventually, it must be true that it is not the case that it is not the case that {e} is true.
Revised Task: E E E (a U e)

Behavior: Eventually, it must be true that eventually, it must be true that eventually, {a} should be true until {e} becomes true.
Revised Task: E N E E e

Behavior: Eventually, it is not the case that eventually, it must be true that eventually, {e} is true.
Revised Task: E E E X e

Behavior: Eventually, it must be true that eventually, it must be true that in the next timestep, {e} is true.
Revised Task: E E E (e A e)

Behavior: Eventually, it must be true that eventually, it must be true that eventually, {e} and again {e} are true simultaneously.
Revised Task: E E (a O e)

Behavior: Eventually, it must be true that eventually, either {a} is true or {e} is true.
Revised Task: E E E G e

Behavior: Eventually, it must be true that eventually, it must be true that from then on, {e} is always true.
Revised Task: G E E E e

Behavior: It is always the case that eventually, it must be true that eventually, it must be true that eventually, {e} is true.
  },
  "E N N N e": {
    "expected behavior is {e} should be true only after all of the {N}s are true. Such specification omits {e}.": "E N N N e N",
    "expected behavior is {e} should be true only after all of the {N}s are true, but not necessarily consecutively.": "E N N N E N e",
    "expected behavior is {e} should be true when any of the {N}s are true.": "E N O N O N e",
    "expected behavior is {e} should be true simultanously with any of the {N}s are true.": "E N A N A N e",
    "expected behavior is {e} should be true only if all of the {N}s are true.": "E N A N A N A e"
    Revised Task: E N N e
Behavior: Eventually, it should be the case that not immediately, but at some point later, {e} is not true.

Revised Task: E N N N N e
Behavior: Eventually, it should be the case that {e} is not true for the next four timesteps.

Revised Task: E N e
Behavior: Eventually, it should be the case that not in the next step, but eventually, {e} is true.

Revised Task: E N G e
Behavior: Eventually, it should be the case that not in the next step, but from some point onwards, {e} is always true.

Revised Task: E N N (e U N e)
Behavior: Eventually, it should be the case that not immediately, but at some point later, {e} is true until it is not true in the next step.

Revised Task: G N N N e
Behavior: It should always be the case that {e} is not true for the next three timesteps.

Revised Task: E (N N N e A N e)
Behavior: Eventually, it should be the case that {e} is not true for the next three timesteps and then it's not true in the next step.

Revised Task: E (N N e O N e)
Behavior: Eventually, it should be the case that either {e} is not true for the next two timesteps or it's not true in the next step.

Revised Task: E (N N N e A e)
Behavior: Eventually, it should be the case that {e} is not true for the next three timesteps and then it is true.

Revised Task: E X N N N e
Behavior: Eventually, in the next timestep, it should be the case that {e} is not true for the next three timesteps.
  },
  "N f O X f": {
    "expected behavior is {f} should not be true. Such specification omits {f}.": "N f U X f",
    "expected behavior is {f} should be false first, then true or false.": "N f A X f",
    "expected behavior is {f} should be true first, then false or true.": "F(f A X f)",
    "expected behavior is {f} should not be true continuously.": "N(F(f U X f))",
    "expected behavior is {f} should not be true finally.": "N(G(f U X f))"
    Revised Task: N f A X f

Behavior: The proposition {f} must not be true or {f} must be true in the next timestep.
Revised Task: N (f O X f)

Behavior: It is not the case that {f} is true or that {f} will be true in the next timestep.
Revised Task: N f O G f

Behavior: The proposition {f} must not be true or it must always be true from now on.
Revised Task: N f O E f

Behavior: The proposition {f} must not be true or it must eventually be true at some point in the future.
Revised Task: N (X f O f)

Behavior: It is not the case that in the next timestep {f} is true or currently {f} is true.
Revised Task: G(N f O X f)

Behavior: It is always the case that {f} must not be true or {f} must be true in the next timestep.
Revised Task: E(N f O X f)

Behavior: It is eventually the case that {f} must not be true or {f} must be true in the next timestep.
Revised Task: N X f O f

Behavior: Next timestep, {f} must not be true or currently {f} must be true.
Revised Task: N f O X (N f)

Behavior: The proposition {f} must not be true or it must not be true in the next timestep.
Revised Task: N (f A X f)

Behavior: It is not the case that {f} is currently true and will be true in the next timestep.
  },
  "N G e A f": {
    "expected behavior is {f} should be true regardless of the value of {e}. Such specification omits {f}.": "G e A f",
    "expected behavior is {e} should be true firstly, or {f} should always be true.": "N G F(e A f)",
    "expected behavior is {e} and {f} should be true simultanously.": "N G (e A f)",
    "expected behavior is more than one atomic proposition in {{e}, {f}} should be true.": "N G (e O f)",
    "expected behavior is {f} should be true, or {e} should not be true first, and then {f} should be true.": "N G (e O X(f))"
    Revised Task: G N e A f

Behavior: {e} should not be true or {f} should not be true always.
Revised Task: N G (e O f)

Behavior: It should always be the case that either {e} is not true or {f} is not true.
Revised Task: N G E(e A f)

Behavior: It should always be the case that {e} and {f} should not eventually be true simultaneously.
Revised Task: N G (e U f)

Behavior: It should always be the case that {e} is not true until {f} is true.
Revised Task: N E G(e A f)

Behavior: It should eventually be the case that {e} and {f} are always not true.
Revised Task: N G X(e A f)

Behavior: It should always be the case that in the next timestep, {e} and {f} are not true.
Revised Task: N (e U G f)

Behavior: {e} should not be true until it is always the case that {f} is true.
Revised Task: G N (e A X f)

Behavior: It should always be the case that {e} is not true or {f} is not true in the next timestep.
Revised Task: N G (e A G f)

Behavior: It should always be the case that {e} and {f} are not always true together.
Revised Task: N (G e U f)

Behavior: It should not be the case that {e} is always true until {f} is true.
  },
  "N N e A f": {
    "expected behavior is that {e} should be true and then {f} should be true. Such specification omits {e}.": "N e A (N f)",
    "expected behavior is that {e} and {f} should be true simultaneously.": "N e A f",
    "expected behaviour is that {e} should be false and then {f} should be true.": "N (N e A f)",
    "expected behaviour is that {e} should be false and then {f} should always be true.": "N (N e A G(f))",
    "expected behaviour is that {e} should be false and then {f} should be true, no matter what values of {f} have been before.": "N (N e U f)"
    Revised Task: N N e U f

Behavior: Either {e} should always be false or eventually, {f} must be true.
Revised Task: N N E(e A f)

Behavior: It's required that {e} and {f} are not true simultaneously at any point in time.
Revised Task: N N e O A(f)

Behavior: {e} must be false at all times, or {f} should always be true.
Revised Task: N E(e A f)

Behavior: Eventually, both {e} and {f} should not be true simultaneously.
Revised Task: N e A N f

Behavior: {e} must not be true, and in the next timestep, {f} should also not be true.
Revised Task: N N e A X f

Behavior: {e} must always be false, and in the next timestep, {f} should not be true.
Revised Task: N E(e U f)

Behavior: It is required that either {e} is always false or eventually {f} becomes true.
Revised Task: E(N e A f)

Behavior: Eventually, {e} should not be true while {f} is true.
Revised Task: G(N e A f)

Behavior: It is always the case that {e} should not be true while {f} is true.
Revised Task: N N (e A f)

Behavior: Neither {e} nor {f} should be true at any point in time.
  },
  "G f O G b": {
    "expected behavior is {f} should be true first and {b} should be true after. Such specification omits {f}.": "G(f O G(b))",
    "expected behavior is {f} and {b} should be true simultanously.": "G(f A b)",
    "expected behavior is to make {f} and {b} be true sequentially and don't need to be adjacent.": "G(f O G(F(b)))",
    "expected behavior is more than one atomic proposition in {{f}, {b}} should be true.": "G(f O b)",
    "expected behavior is {f} shoule be true, or {f} should not be true first, and then {f} or {b} should be true.": "G(f O (G(f) O G(b)))"
    Revised Task: G(f A G b)

Behavior: {f} and {b} should always be true.
Revised Task: G(f O X b)

Behavior: {f} should always be true, or in the next timestep, {b} should be true.
Revised Task: G f U G b

Behavior: {f} should be true until {b} is always true.
Revised Task: G(f O E b)

Behavior: {f} should always be true, or eventually, {b} should be true.
Revised Task: N(G f) O G b

Behavior: {f} should not always be true, or {b} should always be true.
Revised Task: G(f U G b)

Behavior: {f} should be true until {b} is always true.
Revised Task: G(f O G(N b))

Behavior: {f} should always be true, or {b} should never be always true.
Revised Task: E(G f O G b)

Behavior: Eventually, {f} should always be true, or {b} should always be true.
Revised Task: G(f A N G b)

Behavior: {f} should always be true and {b} should not always be true.
Revised Task: G(E f O G b)

Behavior: Eventually, {f} should be true and always maintained, or {b} should always be true.
  },
  "G f U G f": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U G f",
    "expected behavior is {f} should be true eventually.": "F f U G f",
    "expected behavior is {f} should be true throughout.": "G F f U G f",
    "expected behavior is {f} should be true eventually and don't need to be adjacent.": "F f U G F f",
    "expected behavior is {f} should be true at least once but not always.": "G f O G f"
    Revised Task: G(f U f)

Behavior: {f} should always be true eventually.
Revised Task: G f A G f

Behavior: {f} should always be true.
Revised Task: G(f A G f)

Behavior: {f} should be true and always remain true.
Revised Task: G(f O G f)

Behavior: {f} should always be true, or it should always become true eventually.
Revised Task: G(X f U G f)

Behavior: {f} should be true in the next timestep and always remain true thereafter.
Revised Task: E(f U G f)

Behavior: {f} should eventually become true and then always remain true.
Revised Task: G(f U X G f)

Behavior: {f} should always be true, and in the next timestep, it should become true and remain always true.
Revised Task: G(N f U G f)

Behavior: {f} should not be true until it becomes always true.
Revised Task: G(f U G(N f))

Behavior: {f} should be true until it is always not true.
Revised Task: G(f U E G f)

Behavior: {f} should be true until it is eventually always true.





  },
  "E E ( f )": {
    "expected behavior is to make {f} be true eventually. Such specification omits {f}.": "E (f)",
    "expected behavior is to make {f} be true infinitely often. Such specification omits {f}.": "E E ( f )",
    "expected behavior is to make {f} first be true and then be false. Such specification omits {f}.": "E X ( f )",
    "expected behavior is to make {f} be true in a limited time period. Such specification omits {f}.": "E U ( f )",
    "expected behavior is to make {f} be true eventually and no more than once. Such specification omits {f}.": "E F ( f )"
    Revised Task: E E (X f)

Behavior: Eventually, it must be true that in the next timestep {f} is true.
Revised Task: E (N E (f))

Behavior: Eventually, it must be true that {f} is not eventually true.
Revised Task: E (f U E(f))

Behavior: Eventually, {f} should be true until it is true again eventually.
Revised Task: G E (f)

Behavior: It must always be true that eventually {f} is true.
Revised Task: E (f O E(f))

Behavior: Eventually, {f} should be true or it must eventually be true again.
Revised Task: E (E(f) A E(f))

Behavior: Eventually, {f} must be true and it must be true again eventually.
Revised Task: E (E(f) U f)

Behavior: Eventually, {f} should be true until it is true again.
Revised Task: E (f)

Behavior: Eventually, {f} should be true.
Revised Task: E (X E(f))

Behavior: Eventually, it must be true that eventually in the next timestep {f} is true.
Revised Task: E (G E(f))

Behavior: Eventually, it must always be true that eventually {f} is true.
  },
  "N a U G f": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U G(a)",
    "expected behavior is {a} should be false first. Such specification omits {a}.": "N(a U G(f))",
    "expected behavior is {f} should be true and keeps true always. Such specification omits {f}.": "a U G(f)",
    "expected behavior is {f} should be true, or {a} should be false first, and then {f} should be true. Such specification omits {f}.": "N(a U G(f))",
    "expected behavior is {f} should keep true always and then {a} should be false. Such specification omits {f}.": "G(f U N(a))"
    Revised Task: N a U (G f)
Behavior: The negation of {a} should hold true until {f} is always true.

Revised Task: N (a U G f)
Behavior: The negation should apply to the entire statement where {a} should be true until {f} always becomes true.

Revised Task: G (N a U f)
Behavior: It should always be the case that the negation of {a} holds true until {f} becomes true.

Revised Task: N a U (X G f)
Behavior: The negation of {a} should hold true until in the next time step {f} always becomes true.

Revised Task: E (N a U f)
Behavior: Eventually, it should be the case that the negation of {a} holds true until {f} becomes true.

Revised Task: N a A G f
Behavior: The negation of {a} should be true and {f} should always be true.

Revised Task: N (a O G f)
Behavior: The negation should apply to the statement where either {a} is true or {f} is always true.

Revised Task: N a U (f A G f)
Behavior: The negation of {a} should hold true until both {f} is true and then always remains true.

Revised Task: N (E a U G f)
Behavior: The negation should apply to the statement where eventually {a} should be true until {f} always becomes true.

Revised Task: G (N a U G f)
Behavior: It should always be the case that the negation of {a} holds true until {f} is always true.
  },
  "X a O X f": {
    "expected behavior is {a} should be true first, and then {f} should be true. Such specification omits {f}.": "X a O f",
    "expected behavior is to make {f} be true whenever {a} is true.": "X(a O f)",
    "expected behavior is to make {a} and {f} be true simultanously.": "X(a A f)",
    "expected behavior is to make {f} be true first, and then {a} should be true.": "F(X a O f)",
    "expected behavior is to make {a} and {f} be true sequentially and don't need to be adjacent.": "F(X a O X f)"
    Revised Task: X a O X (f A a)

Behavior: In the next timestep, {a} should be true, or in the next timestep, both {f} and {a} should be true simultaneously.
Revised Task: X (a A f)

Behavior: In the next timestep, both {a} and {f} should be true simultaneously.
Revised Task: E(X a O X f)

Behavior: Eventually, in a future timestep, either {a} should be true or in the next timestep {f} should be true.
Revised Task: X a U X f

Behavior: In the next timestep, {a} should be true until, in a following timestep, {f} becomes true.
Revised Task: G(X a O X f)

Behavior: It should always be the case that in the next timestep, either {a} is true or in the next timestep {f} is true.
Revised Task: X (N a) O X f

Behavior: In the next timestep, {a} should not be true, or in the next timestep, {f} should be true.
Revised Task: X a O G(X f)

Behavior: In the next timestep, {a} should be true, or it should always be the case that in the next timestep, {f} is true.
Revised Task: E(X a) O X f

Behavior: Eventually, {a} should be true in the next timestep, or in the next timestep, {f} should be true.
Revised Task: X a O X (N f)

Behavior: In the next timestep, {a} should be true, or in the next timestep, {f} should not be true.
Revised Task: X (a U f)

Behavior: In the next timestep, {a} should be true until {f} becomes true.
  },
  "N E a A e": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "E a A e",
    "expected behavior is to make {a} and {e} be true simultanously.": "N E (a A e)",
    "expected behavior is to make {a} and {e} be true sequentially and don't need to be adjacent.": "N E (a A F(e))",
    "expected behavior is to make {a}, {e} finally be true simultanously.": "N (E a A e)",
    "expected behavior is more than one atomic proposition in {{a}, {e}} should be true.": "N (E a O e)"
    Revised Task: E N a A e

Behavior: Both {a} and {e} must not eventually be true simultaneously.
Revised Task: N E (a O e)

Behavior: It is not the case that either {a} or {e} will eventually be true.
Revised Task: N G (a A e)

Behavior: Neither {a} nor {e} should always be true.
Revised Task: E (N a A N e)

Behavior: Both {a} and {e} must eventually not be true simultaneously.
Revised Task: G (N a A e)

Behavior: {e} should always be true, provided {a} is never true.
Revised Task: E (a U N e)

Behavior: {a} should be true until {e} is not true.
Revised Task: N E (a A X e)

Behavior: It is not the case that {a} and {e} will eventually be true with {e} true in the next timestep.
Revised Task: E (a U G e)

Behavior: {a} should be true until it's always {e}.
Revised Task: E X (a A e)

Behavior: In the next timestep, both {a} and {e} should eventually be true.
Revised Task: N G (a O e)

Behavior: It is always the case that neither {a} nor {e} are true.
  },
  "N E a U d": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U d",
    "expected behavior is to make {a} and {d} be true simultanously.": "E(a A d)",
    "expected behavior is to make {a} and {d} be true sequentially and don't need to be adjacent.": "E(a A F(d))",
    "expected behavior is to make {a}, {d} finally be true simultanously.": "E(a A d)",
    "expected behavior is more than one atomic proposition in {{a}, {d}} should be true.": "E(a O d)",
    "expected behavior is {d} should be true, or {d} should not be true first, and then {d} should be true.": "N E(a U O(d))",
    "expected behavior is {a} and {d} should be true simultanously, and then {d} should always be true.": "N E(a A G(d))",
    "expected behavior is finally {d} should be true, no matter what the value of {a} is.": "N E(a U d)",
    "expected behavior is {d} should always be true, or {a} be true, but subsequently {d} should be true.": "N G(a U d)"
    Revised Task: N(a U d)

Behavior: {a} should be true until {d} becomes true.
Revised Task: E(N a U d)

Behavior: Eventually, there will be a time when {a} is not true until {d} becomes true.
Revised Task: N E (a A d)

Behavior: It is not the case that eventually both {a} and {d} will be true simultaneously.
Revised Task: N E (a O d)

Behavior: It is not the case that eventually either {a} or {d} (or both) will be true.
Revised Task: G(N a U d)

Behavior: It will always be the case that {a} is not true until {d} becomes true.
Revised Task: N E (a U X d)

Behavior: It is not the case that eventually {a} will be true until the next time step after {d} becomes true.
Revised Task: E(N a U G d)

Behavior: Eventually, there will be a time when {a} is not true until {d} is always true.
Revised Task: N E (G a U d)

Behavior: It is not the case that eventually {a} will always be true until {d} becomes true.
Revised Task: E(N a U E d)

Behavior: Eventually, there will be a time when {a} is not true until {d} eventually becomes true.
Revised Task: N G(a U d)

Behavior: It is not the case that {a} will always be true until {d} becomes true.
  },
  "X N e A a": {
    "expected behavior is to make {e} and {a} be true simultanously.": "e A a",
    "expected behavior is to make {e} true first, and then {a} should be true.": "X(e A a)",
    "expected behavior is to make {e} and {a} be true sequentially and don't need to be adjacent.": "X(e A F(a))",
    "expected behavior is {e} should not be true, and then {a} should be true.": "X(N(e) A a)",
    "expected behavior is {e} should not be true, or {a} should be true.": "X(N(e) O a)"
    Revised Task: X N (e A a)

Behavior: In the next timestep, it is not the case that {a} will eventually be true.
Revised Task: X (N e) A a

Behavior: In the next timestep, {a} must be true and it is not the case that something will eventually happen.
Revised Task: X (e A N a)

Behavior: In the next timestep, something will eventually be true and {a} is not true.
Revised Task: X e A N a

Behavior: In the next timestep, it is expected that something will eventually be true, and {a} is not true.
Revised Task: N X (e A a)

Behavior: It is not the case that in the next timestep, {a} will eventually be true.
Revised Task: e A X a

Behavior: Eventually, {a} must be true in the next timestep.
Revised Task: X (e O a)

Behavior: In the next timestep, either something will eventually happen or {a} is true.
Revised Task: G(X N e A a)

Behavior: Always, in the next timestep, it is not the case that {a} will eventually be true.
Revised Task: X U (e A a)

Behavior: Until a certain point, in the next timestep, {a} will eventually be true.
Revised Task: N X e A N a

Behavior: It is not the case that in the next timestep, something will eventually be true, and {a} is not true.
  },
  "c A c O e": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c U (c O e)",
    "expected behavior is more than one atomic proposition in {{c}, {e}} should be true.": "c A (c O e)",
    "expected behavior is {c} and {e} should be true simultanously.": "F(c A e)",
    "expected behavior is {c} should always be true, or {e} should be true first, and then {c} should be true.": "F(c O X(e))",
    "expected behavior is {e} should be true, or {c} should not be true first, and then {e} or {c} should be true.": "F(c A (e O X(c)))"
    Revised Task: c A c A e

Behavior: {c} and {e} must both be true simultaneously.
Revised Task: c O c O e

Behavior: At least one of {c} or {e} should eventually be true.
Revised Task: G(c A c O e)

Behavior: It must always be the case that either {c} is true or both {c} and {e} are true.
Revised Task: X(c A c O e)

Behavior: In the next time step, it must be true that either {c} is true or both {c} and {e} are true.
Revised Task: E(c A c O e)

Behavior: Eventually, it must be true that either {c} is true or both {c} and {e} are true.
Revised Task: c A E(c O e)

Behavior: {c} must be true and eventually either {c} or {e} should be true.
Revised Task: c A G(c O e)

Behavior: {c} must be true and it must always be the case that either {c} or {e} is true.
Revised Task: c A c U e

Behavior: {c} must be true until {e} becomes true.
Revised Task: c A (c O X(e))

Behavior: {c} must be true, and either {c} is true or {e} should be true in the next time step.
Revised Task: c A (c O G(e))

Behavior: {c} must be true, and either {c} is always true or {e} must always be true.
  },
  "c U c O e": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c U (c O e)",
    "expected behavior is {c} should be true, and then {e} should be true.": "F(c U e)",
    "expected behavior is {c} or {e} should be true.": "c O e",
    "expected behavior is {c} or {e} should be true, and then {e} should always be true.": "G(c O e)",
    "expected behavior is {c} and {e} should be true simultanously.": "F(c A e)"
    Revised Task: c U (c A e)

Behavior: The condition {c} must be true until both {c} and {e} are true simultaneously.
Revised Task: c U (c O N(e))

Behavior: The condition {c} must be true until either {c} is true again or {e} is false.
Revised Task: c U (X(c) O e)

Behavior: The condition {c} must be true until either {c} is true in the next timestep or {e} is true.
Revised Task: c U (c O G(e))

Behavior: The condition {c} must be true until either {c} is true again or {e} is always true from that point onward.
Revised Task: c U (c O E(e))

Behavior: The condition {c} must be true until either {c} is true again or {e} eventually becomes true.
Revised Task: G(c U c) O e

Behavior: It should always be the case that {c} is true until {c} is true again, or eventually, {e} should be true.
Revised Task: c U c A e

Behavior: The condition {c} must be true until {c} is true again, and at that point, {e} must also be true.
Revised Task: N(c) U (c O e)

Behavior: The condition {c} should initially be false, but eventually, either {c} becomes true or {e} is true.
Revised Task: c U (c U e)

Behavior: The condition {c} must be true until either {c} is true again or eventually {e} is true.
Revised Task: E(c U c) O e

Behavior: Eventually, it must be the case that {c} is true until {c} is true again, or {e} should be true.
  },
  "e U G G f": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U G(G(f))",
    "expected behavior is to make {f} always be true.": "F(e U G(f))",
    "expected behavior is to make {e} and {f} be true simultanously.": "e A G(f)",
    "expected behavior is to make {e} and {f} be true sequentially and don't need to be adjacent.": "F(e U F(G(f)))",
    "expected behavior is finally {f} should be true, no matter what the value of {e} is.": "e U F(G(f))"
    Revised Task: E(e U (G G f))
Behavior: {e} should be true until {f} becomes always true.

Revised Task: E(e U G(f O e))
Behavior: {e} should be true until {f} or {e} becomes always true.

Revised Task: E(e U (G X f))
Behavior: {e} should be true until {f} becomes true in the next time step and then always remains true.

Revised Task: E(e A G G f)
Behavior: {e} and {f} should eventually be true, with {f} always remaining true.

Revised Task: G(e U G f)
Behavior: {e} should always be true or {f} should always be true eventually.

Revised Task: E(N e U G G f)
Behavior: {e} should not be true until {f} becomes always true.

Revised Task: E(e O G G f)
Behavior: Either {e} or {f} being always true should eventually happen.

Revised Task: E(e U G(N f))
Behavior: {e} should be true until it becomes always true that {f} is not true.

Revised Task: E(G e U G f)
Behavior: {e} being always true should lead to {f} also becoming always true.

Revised Task: G(e U G(N f))
Behavior: Always, {e} should be true until it becomes always true that {f} is not true.
  },
  "c U N G f": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c U (N G f)",
    "expected behavior is to make {c} and {f} be true simultanously.": "c U (N A f)",
    "expected behavior is to make {c} and {f} be true sequentially and don't need to be adjacent.": "c U (N A F(f))",
    "expected behavior is to make {c}, {N}, and {f} be true sequentially and don't need to be adjacent.": "c A F(N A F(f))",
    "expected behavior is {c}, {N}, and {f} finally be true simultanously.": "F(c A N A f)"
    Revised Task: c U N (G f)

Behavior: {f} should always be true in the future, with the value of {c} not being a concern until the next timestep.
Revised Task: c U (N G f)

Behavior: Starting from the next timestep, {f} must always be true, with {c} needing to be true until this condition is met.
Revised Task: c U G f

Behavior: {f} should always be true, with {c} needing to be true until this always-true condition is established.
Revised Task: G(c U N f)

Behavior: It is always the case that {f} needs to be true in the next timestep, with {c} being true until then.
Revised Task: c U X G f

Behavior: {f} should always be true starting from a future timestep, with {c} being true until that point is reached.
Revised Task: E(c U N G f)

Behavior: It will eventually be the case that {f} is always true in the future, with {c} being true until the next timestep.
Revised Task: c U (N O G f)

Behavior: {f} should be true in the next timestep or always true in the future, with {c} needing to be true until one of these conditions is met.
Revised Task: N(c U G f)

Behavior: It is not the case that {c} needs to be true until {f} is always true; the requirement for {c} is negated.
Revised Task: c U (N A G f)

Behavior: {f} must always be true in the next timestep, with {c} being true until this condition is met.
Revised Task: c O N G f

Behavior: Either {c} is true, or in the next timestep, it must always be the case that {f} is true.





  },
  "N N d U a": {
    "expected behavior is {d} should be true first and then {a}. Such specification omits {d}.": "d U (N N a)",
    "expected behavior is {a} should eventually be true, no matter what the values of {d} are.": "G(d U a)",
    "expected behavior is {a} should be true, or {d} should not be true first, and then {d} or {a} should be true.": "N N (d O X(a))",
    "expected behavior is {a} should be true if {d} is false for a certain number of times.": "N N (d A X(a))",
    "expected behavior is {a} should be true if {d} is true for a certain number of times.": "N N (d A F(a))"
    Revised Task: N N d U (a A X b)

Behavior: Not not {d} until {a} and in the next timestep {b} becomes true.
Revised Task: E(N d U a)

Behavior: Eventually, not {d} until {a} becomes true.
Revised Task: G(N d U a)

Behavior: Always, it must be that not {d} until {a} becomes true.
Revised Task: N d U (a O b)

Behavior: Not {d} until either {a} or {b} becomes true.
Revised Task: N N d A a

Behavior: Not not {d} and {a} should be true.
Revised Task: N N (d U a) A b

Behavior: Not not either {d} until {a}, and {b} should be true.
Revised Task: N N d U E(a)

Behavior: Not not {d} until {a} eventually becomes true.
Revised Task: N N d U G(a)

Behavior: Not not {d} until {a} is always true.
Revised Task: E(N d U (a A b))

Behavior: Eventually, not {d} until both {a} and {b} become true.
Revised Task: N N X(d U a)

Behavior: Not not in the next timestep, {d} until {a} becomes true.
  },
  "N X c U a": {
    "expected behavior is {c} should be false and then {a} should be true. Such specification omits {c}.": "N (X c U a)",
    "expected behavior is {a} should be true eventually, no matter what the value of {c} is.": "G(N X c U a)",
    "expected behavior is {a} should be true eventually, and {c} should be false first.": "G(N (X c U a))",
    "expected behavior is {a} should be true eventually, and {c} should keep true or false.": "G(N (X c O a))",
    "expected behavior is more than one atomic proposition in {{a}, {c}} should be true.": "G(N (X c O a)) O a",
    "expected behavior is {a} or {c} should be true.": "N (X c O a)"
    Revised Task: N X (c U a)

Behavior: The next timestep should negate the condition where {c} becomes true until {a} is true.
Revised Task: G(N X c U a)

Behavior: It is always the case that the next timestep should negate {c} until {a} becomes true.
Revised Task: N X c U E(a)

Behavior: The next timestep should negate {c} until {a} eventually becomes true.
Revised Task: N X (c A a)

Behavior: The next timestep should negate the condition where {c} and {a} are both true simultaneously.
Revised Task: E(N X c U a)

Behavior: Eventually, it will be the case that the next timestep negates {c} until {a} becomes true.
Revised Task: N X c O a

Behavior: The next timestep should negate {c}, or {a} should be true.
Revised Task: N X (c U a A b)

Behavior: The next timestep should negate the condition where {c} becomes true until {a} is true, and {b} is also true.
Revised Task: N G X c U a

Behavior: It is always the case that the next timestep should negate {c} and this condition should be maintained until {a} becomes true.
Revised Task: N X c U (a A b)

Behavior: The next timestep should negate {c} until both {a} and {b} become true simultaneously.
Revised Task: N X c U G(a)

Behavior: The next timestep should negate {c} until it is always the case that {a} is true.
  },
  "e A b U d": {
    "expected behavior is {e} should always be true, and {b} or {d} should be true.": "G(e A (b U d))",
    "expected behavior is {b} should be true first, and then {d} should be true.": "e A (b A X(d))",
    "expected behavior is to make {e}, {b} and {d} be true sequentially and don't need to be adjacent.": "F(e A F(b A F(d)))",
    "expected behavior is more than one atomic proposition in {{e}, {b}, {d}} should be true.": "F(e O b O d)",
    "expected behavior is {e} should be true first, and then {b} or {d} should be true.": "F(e A (b U d))"
    Revised Task: G(a A b U d)
Behavior: {a} and {b} should always be true until {d} becomes true.

Revised Task: E(a A b U X(d))
Behavior: {a} and {b} should be true until {d} becomes true in the next timestep.

Revised Task: E(a A b O d)
Behavior: Eventually, either {a} and {b} are both true or {d} is true.

Revised Task: E(a U b U d)
Behavior: Eventually, {d} should be true, the values of {a} and {b} are not concerned until then.

Revised Task: E(a A N(b) U d)
Behavior: {a} should be true and {b} should be false until {d} becomes true.

Revised Task: E(a A b A d)
Behavior: {a}, {b}, and {d} should eventually be true simultaneously.

Revised Task: E(N(a) A b U d)
Behavior: {a} should be false and {b} should be true until {d} becomes true.

Revised Task: G(a O b U d)
Behavior: Always, either {a} or {b} should be true until {d} becomes true.

Revised Task: E(a A b U G(d))
Behavior: {a} and {b} should be true until {d} becomes true, and then {d} should always be true.

Revised Task: E(X(a) A b U d)
Behavior: {a} should be true in the next timestep and {b} should be true until {d} becomes true.
  },
  "e U b A d": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (b A d)",
    "expected behavior is {d} should be true, or {d} should not be true first, and then {b} or {d} should be true.": "e U (b O X(d))",
    "expected behavior is to make {b} and {d} be true simultanously.": "F(e U (b A d))",
    "expected behavior is to make {b} and {d} be true sequentially and don't need to be adjacent.": "F(e U (b A F(d)))",
    "expected behavior is finally {d} should be true, no matter what the values of {e} and {b} are.": "F(e U (b U d))"
    Revised Task: E(b U d)

Behavior: {b} should be true until {d} becomes true.
Revised Task: G(e U (b A X(d)))

Behavior: {e} should be true always until {b} becomes true. After {b} becomes true, {d} should be true in the next timestep.
Revised Task: E(e A (b O d))

Behavior: {e} should be true eventually and either {b} or {d} should be true eventually.
Revised Task: E(e U (N(b) A d))

Behavior: {e} should be true until {b} becomes false and {d} is true.
Revised Task: E(e U (b A G(d)))

Behavior: {e} should be true until {b} and {d} are true, and then {d} should always be true.
Revised Task: E(N(e) U (b A d))

Behavior: {e} should be false until both {b} and {d} become true.
Revised Task: E(e U (b A E(d)))

Behavior: {e} should be true until {b} becomes true, and eventually, {d} should be true.
Revised Task: E(e O (b A d))

Behavior: Either {e} or both {b} and {d} should eventually be true.
Revised Task: G(e U (b O d))

Behavior: {e} should always be true until either {b} or {d} becomes true.
Revised Task: E(e U (b A X(N(d))))

Behavior: {e} should be true until {b} becomes true, and in the next timestep, {d} should be false.
  },
  "N X N G a": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "N X N G (a)",
    "expected behavior is {a} should first be true, and then {a} should always be true.": "F(N X N G (a))",
    "expected behavior is {a} should be true sequencely and don't need to be adjacent.": "F(N X F(N G (a)))",
    "expected behavior is {a} should be true simultanously, and then {a} should always be true.": "F(N A G(N G (a)))",
    "expected behavior is {a} should first be false, and then {a} should always be true.": "F(N X G(N G (a)))"
    Revised Task: N G a

Behavior: {a} should not always be true.
Revised Task: N X G a

Behavior: Starting from the next timestep, {a} should not always be true.
Revised Task: N X N a

Behavior: In the next timestep, it's not necessary that {a} be false.
Revised Task: N X E a

Behavior: It's not required that {a} eventually becomes true.
Revised Task: X N G a

Behavior: Starting from the next timestep, {a} should not always be true.
Revised Task: G N X a

Behavior: It should always be the case that {a} is not false in the next timestep.
Revised Task: N X N E a

Behavior: In the next timestep, it's not necessary that {a} eventually becomes false.
Revised Task: N G N a

Behavior: It should not always be the case that {a} is false.
Revised Task: E N X a

Behavior: Eventually, it's not necessary for {a} to be false in the next timestep.
Revised Task: X G a

Behavior: Starting from the next timestep, {a} should always be true.





  },
  "N G N G a": {
    "expected behavior is {a} should be true and remain true. Such specification omits {a}.": "F(G(a))",
    "expected behavior is {a} should be true and remain true, but it should always be true.": "G(G(a))",
    "expected behavior is {a} should be true once and remain true.": "F(G(F(a)))",
    "expected behavior is {a} should be true once and remain false.": "F(G(N(a)))",
    "expected behavior is {a} should be false and remain false.": "N G N G N(a)"
    Revised Task: G N G a

Behavior: {a} should not always be true; there should be at least one time step where {a} is false.
Revised Task: N G a

Behavior: It is not the case that {a} should always be true; there should be at least one time step where {a} is false.
Revised Task: N G N a

Behavior: It is not the case that {a} should never be true; there should be at least one time step where {a} is true.
Revised Task: G N a

Behavior: There should be at least one time step where {a} is not true, but not necessarily always.
Revised Task: N G G a

Behavior: It is not the case that {a} should be always true for all time steps; there should be at least one time step where {a} is false.
Revised Task: G G N G a

Behavior: {a} should be false for at least one time step, but in general, {a} should be true for most of the time.
Revised Task: N N G N G a

Behavior: {a} should be true for all time steps; there should be no time step where {a} is false.
Revised Task: N G N G N a

Behavior: It is not the case that {a} should never be true; {a} should be true at least once.
Revised Task: G N G N a

Behavior: There should be at least one time step where {a} is true, and one time step where {a} is false.
Revised Task: N G N G G a

Behavior: It is not the case that {a} should never be true continuously; there should be periods where {a} is true.
  },
  "f U b U a": {
    "expected behavior is to make {b} and {a} be true sequentially and don't need to be adjacent.": "F(f U (b U a))",
    "expected behavior is {f}, {b} and {a} finally be true simultanously.": "F(f A b A a)",
    "expected behavior is more than one atomic proposition in {{f}, {b}, {a}} should be true.": "F(f O b O a)",
    "expected behavior is {f} should be true, or {f} should not be true first, and then {b} or {a} should be true.": "F(f U (b O X(a)))",
    "expected behavior is {b} and {a} should be true simultanously, and then {a} should always be true.": "F(f U (b A G(a)))"
    Revised Task: f U (b U a)
Behavior: {f} should be true until {b} becomes true, and after {b} becomes true, {a} should also be true eventually.

Revised Task: G(f U b U a)
Behavior: {f}, {b}, and {a} should always be true, either simultaneously or sequentially.

Revised Task: f U (b A a)
Behavior: {f} should be true until both {b} and {a} are true simultaneously.

Revised Task: E(f U b U a)
Behavior: Eventually, the sequence where {f} is true until {b} becomes true, followed by {a} becoming true, should occur.

Revised Task: f U (b O X(a))
Behavior: {f} should be true until either {b} becomes true or in the next timestep after {b}, {a} becomes true.

Revised Task: f U (N(b) U a)
Behavior: {f} should be true until {b} is not true, and eventually, {a} should be true.

Revised Task: f U (b U E(a))
Behavior: {f} should be true until {b} becomes true, and {a} should eventually be true at some point, not necessarily immediately after {b}.

Revised Task: f U (G(b) U a)
Behavior: {f} should be true until {b} is always true, and eventually, {a} should be true.

Revised Task: X(f U b U a)
Behavior: In the next timestep, {f} should be true until {b} becomes true, followed by {a} becoming true.

Revised Task: f U (b U G(a))
Behavior: {f} should be true until {b} becomes true, and afterwards, {a} should always be true.
  },
  "d O X E e": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O X (E e)",
    "expected behavior is to make {d} and {e} be true simultanously.": "d A E e",
    "expected behavior is to make {d} and {e} be true sequentially and don't need to be adjacent.": "d O X F(E e)",
    "expected behavior is to make {d}, {e} finally be true simultanously.": "d A E F(e)",
    "expected behavior is more than one atomic proposition in {{d}, {e}} should be true.": "d O E e",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} or {e} should be true.": "d O (X (E e))",
    "expected behavior is {d} and {e} should be true simultanously, and then {e} should always be true.": "d A E G(e)",
    "expected behavior is finally {e} should be true, no matter what the values of {d} is.": "d U E e",
    "expected behavior is {e} should always be true, or {d} be true, but subsequently {e} should be true.": "G(d U E e)"
    Revised Task: d O X (E e)
Behavior: Either {d} is true, or eventually, {e} should be true in the next timestep.

Revised Task: d O E e
Behavior: Either {d} is true, or eventually, {e} should be true.

Revised Task: d O X G e
Behavior: Either {d} is true, or {e} should always be true in the next timestep.

Revised Task: d O G e
Behavior: Either {d} is true, or {e} should always be true.

Revised Task: d O X N e
Behavior: Either {d} is true, or {e} should not be true in the next timestep.

Revised Task: d O X (N E e)
Behavior: Either {d} is true, or eventually, {e} should not be true in the next timestep.

Revised Task: d O X (e U d)
Behavior: Either {d} is true, or {e} should be true until {d} is true in the next timestep.

Revised Task: d O X E (d A e)
Behavior: Either {d} is true, or eventually, both {d} and {e} should be true in the next timestep.

Revised Task: d O X (d U e)
Behavior: Either {d} is true, or {d} should be true until {e} is true in the next timestep.

Revised Task: d O X (d O e)
Behavior: Either {d} is true, or either {d} or {e} should be true in the next timestep.
  },
  "d U X N e": {
    "expected behavior is {d} and {e} should be true sequentially and don't need to be adjacent.": "F(d U X(N e))",
    "expected behavior is {d} and {e} should be true simultanously.": "F(d A e)",
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U X (N e)",
    "expected behavior is finally {e} should be true, no matter what the values of {d} are.": "F(d U e)",
    "expected behavior is more than one atomic proposition in {{d}, {e}} should be true.": "F(d O e)"
    Revised Task: d U X (N e)

Behavior: {d} should be true until, in the next timestep, {e} is not true.
Revised Task: G(d U X N e)

Behavior: This should always be the case: {d} is true until, in the next timestep, {e} is not true.
Revised Task: d U (X N e)

Behavior: {d} should be true until it's not true that {e} is true in the next timestep.
Revised Task: E(d U X N e)

Behavior: It should eventually be the case that {d} is true until, in the next timestep, {e} is not true.
Revised Task: d U N X e

Behavior: {d} should be true until not immediately but in the timestep after the next, {e} is true.
Revised Task: d U X (e A N e)

Behavior: {d} should be true until, in the next timestep, {e} is true and not true simultaneously (which is a contradiction and thus may never happen).
Revised Task: d U (N e A X e)

Behavior: {d} should be true until {e} is not true and in the next timestep, {e} is true.
Revised Task: d U (X e O N e)

Behavior: {d} should be true until either {e} is true in the next timestep or {e} is not true.
Revised Task: d U (E X N e)

Behavior: {d} should be true until it is eventually the case that, in the next timestep, {e} is not true.
Revised Task: N (d U X N e)

Behavior: It should not be the case that {d} is true until, in the next timestep, {e} is not true.
  },
  "b U G N e": {
    "expected behavior is {e} should be true eventually. Such specification omits {e}.": "b U G(N e)",
    "expected behavior is {b} and {e} should be true sequentially and don't need to be adjacent.": "b U G(F(N e))",
    "expected behavior is {b} and {e} should be true simultanously.": "b A G(N e)",
    "expected behavior is more than one atomic proposition in {{b}, {e}} should be true.": "b O G(N e)",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {b} or {e} should be true.": "b U G(N (b O e))"
    Revised Task: b U G N X(e)
Behavior: {b} should be true until {e} is not true in the next timestep; meanwhile, {e} should always be false.

Revised Task: b U G N(e)
Behavior: {b} should be true until {e} is never true; {e} should always be false.

Revised Task: b U N G(e)
Behavior: {b} should be true until it's not always the case that {e} is true.

Revised Task: b U G(e)
Behavior: {b} should be true until eventually, {e} is always true.

Revised Task: N(b) U G(e)
Behavior: {b} should not be true until {e} is always true.

Revised Task: b U (G N(e))
Behavior: {b} should be true until it's always the case that {e} is not true.

Revised Task: b O G N(e)
Behavior: Either {b} is true, or it's always the case that {e} is not true.

Revised Task: b U G N E(e)
Behavior: {b} should be true until it's always the case that {e} is not eventually true.

Revised Task: E(b) U G N(e)
Behavior: Eventually, {b} should be true until it's always the case that {e} is not true.

Revised Task: b U G N O(e)
Behavior: {b} should be true until it's always the case that {e} is not or is true.
  },
  "E f U N d": {
    "expected behavior is {f} should be true eventually, but {f} should not be true in the first time.": "E f U X N d",
    "expected behavior is {d} should be false eventually, but {d} should not be false in the first time.": "E f U N X d",
    "expected behavior is {f} and {d} should be true eventually and {d} should be false before {f}.": "E f U N (X d U f)",
    "expected behavior is {f} and {d} should be true simultanously eventually.": "E f U F(N d)",
    "expected behavior is {f} should be true eventually or {d} should be false eventually.": "E f O N d"
    Revised Task: E(f U d)

Behavior: Eventually, {f} should be true until {d} becomes true.
Revised Task: E(f A N d)

Behavior: Eventually, both {f} and {d} in the next timestep should be true.
Revised Task: G(f U N d)

Behavior: Always, {f} should be true until {d} becomes true in the next timestep.
Revised Task: E(f U G d)

Behavior: Eventually, {f} should be true until {d} always remains true.
Revised Task: E(f O N d)

Behavior: Eventually, either {f} or {d} in the next timestep should be true.
Revised Task: E(N f U d)

Behavior: Eventually, {f} in the next timestep should be true until {d} becomes true.
Revised Task: E(f U X d)

Behavior: Eventually, {f} should be true until {d} becomes true in the immediate next timestep.
Revised Task: E(G f U d)

Behavior: Eventually, {f} always being true should continue until {d} becomes true.
Revised Task: N(E f U d)

Behavior: It is not the case that eventually, {f} should be true until {d} becomes true.
Revised Task: E(f U E d)

Behavior: Eventually, {f} should be true until it becomes true that {d} will eventually be true.
  },
  "N c U E e": {
    "expected behavior is {c} should be false first, and then {e} should be true. Such specification omits {e}.": "N c U E (e)",
    "expected behavior is {c} should be false first, and then {e} should be true or false.": "N c U (E e)",
    "expected behavior is {e} should be true first, and then {c} should be false.": "N (c U E e)",
    "expected behavior is {c} and {e} should be false simultanously.": "N (c A E e)",
    "expected behavior is more than one atomic proposition in {{c}, {e}} should be false.": "N (c O E e)"
    Revised Task: N c U (E e)

Behavior: {c} must not be true until {e} eventually becomes true.
Revised Task: N (c U E e)

Behavior: It is not the case that {c} should be true until {e} eventually becomes true.
Revised Task: N c U (E (e A N e))

Behavior: {c} must not be true until {e} becomes true and immediately after {e} becomes true, {e} must not be true.
Revised Task: N c U (G e)

Behavior: {c} must not be true until {e} is always true.
Revised Task: N c U (X e)

Behavior: {c} must not be true until {e} becomes true in the next time step.
Revised Task: G(N c U e)

Behavior: It should always be the case that {c} is not true until {e} becomes true.
Revised Task: N c U (e O N e)

Behavior: {c} must not be true until either {e} becomes true or {e} is not true.
Revised Task: N c U (e A N e)

Behavior: {c} must not be true until a state where {e} is true and simultaneously not true, which is a contradiction and thus impossible.
Revised Task: E(N c U e)

Behavior: Eventually, it should be the case that {c} is not true until {e} becomes true.
Revised Task: N (c O E e)

Behavior: It is not the case that either {c} is true or {e} will eventually be true.
  },
  "X d O G d": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O G d",
    "expected behavior is {d} should be false first. Such specification omits {~d}.": "X ~d O G d",
    "expected behavior is {d} should be true eventually. Such specification omits {Fd}.": "X d O G Fd",
    "expected behavior is {d} should always be true. Such specification omits {Gd}.": "X d O Gd",
    "expected behavior is {d} should be true eventually and should be false first. Such specification omits {FXd}.": "FX d O G Fd"
    Revised Task: X (d O G d)

Behavior: Either {d} should be true in the next timestep, or {d} should always be true.
Revised Task: X d A G d

Behavior: {d} should be true in the next timestep and {d} should always be true.
Revised Task: X d O G (N d)

Behavior: Either {d} should be true in the next timestep, or {d} should never be true.
Revised Task: G d O G d

Behavior: Either {d} should always be true, or {d} should always be true (redundant, emphasizes the permanence of {d}).
Revised Task: X d O X d

Behavior: Either {d} should be true in the next timestep, or {d} should be true in the timestep after that.
Revised Task: N (X d O G d)

Behavior: It is not the case that {d} will be true in the next timestep or {d} will always be true.
Revised Task: X (d O E d)

Behavior: Either {d} should be true in the next timestep, or {d} should eventually be true.
Revised Task: E (X d O G d)

Behavior: It will eventually be the case that {d} is true in the next timestep or {d} is always true.
Revised Task: X (N d O G d)

Behavior: Either {d} should not be true in the next timestep, or {d} should always be true.
Revised Task: G (X d O G d)

Behavior: It should always be the case that {d} is true in the next timestep or {d} is always true.
  },
  "N d O G d": {
    "expected behavior is to make {d} false forever. Such specification omits {d} being false forever.": "N d A G d",
    "expected behavior is to make {d} true forever. Such specification omits {d} being true forever.": "N d O F d",
    "expected behavior is to make {d} be true at least once. Such specification omits {d} being true at least once.": "N d O X d",
    "expected behavior is to make {d} be false at least once. Such specification omits {d} being false at least once.": "N d A X d",
    "expected behavior is to make {d} be true eventually. Such specification omits {d} being true eventually.": "N d U F d"
    Revised Task: N(d O G(d))
Behavior: Either {d} should not be true, or {d} should always be true.

Revised Task: N(d O X(G(d)))
Behavior: Either {d} should not be true, or in the next timestep, {d} should start to always be true.

Revised Task: G(N d O d)
Behavior: Always, either {d} should not be true or {d} should be true.

Revised Task: N(G d O d)
Behavior: Either always {d} should be true, or at least once {d} should be true.

Revised Task: N(d O E(d))
Behavior: Either {d} should not be true, or eventually, {d} should be true.

Revised Task: E(N d O d)
Behavior: Eventually, either {d} should not be true or {d} should be true.

Revised Task: N(d O U(d, G d))
Behavior: Either {d} should not be true, or {d} should be true until it always becomes true.

Revised Task: N(d U G(d))
Behavior: {d} should not be true until it always becomes true.

Revised Task: N(d A G(d))
Behavior: {d} should not be true and always be true (a contradiction).

Revised Task: G(N d A d)
Behavior: Always, {d} should be both not true and true (a contradiction).
  },
  "X b U N e": {
    "expected behavior is {e} should eventually be true. Such specification omits {e}.": "b U N e",
    "expected behavior is {b} should be true before {e} becomes true.": "X b U e",
    "expected behavior is {e} should be true infinitely often.": "X b U G e",
    "expected behavior is {b} should be true infinitely often before {e} becomes true.": "G b U e",
    "expected behavior is {b} should be true only once before {e} becomes true.": "F b U e"
    
Revised Task: X(b U N e)
Behavior: {b} should be true until {e} becomes false. In the next timestep after {e} becomes false, {b} should still be true.

Revised Task: X(b A N e)
Behavior: {b} should be true and {e} should be false in the next timestep.

Revised Task: X(b O N e)
Behavior: Either {b} should be true or {e} should be false in the next timestep.

Revised Task: G(b U N e)
Behavior: {b} should always be true until {e} becomes false. Once {e} is false, {b} can be false as well.

Revised Task: E(b U N e)
Behavior: Eventually, {b} should be true until {e} becomes false. When {e} becomes false, {b} can be false as well.

Revised Task: X(b U N(G e))
Behavior: {b} should be true until {e} is false. In the next timestep, {e} should always be false.

Revised Task: X(b U (N e A G b))
Behavior: {b} should be true until {e} becomes false. In the next timestep, {e} should be false and {b} should always be true.

Revised Task: X(b U (N e O G b))
Behavior: {b} should be true until either {e} becomes false or {b} always becomes true in the next timestep.

Revised Task: X(N b U N e)
Behavior: {b} should be false until {e} becomes false in the next timestep.

Revised Task: X(b U E N e)
Behavior: {b} should be true until {e} becomes false eventually in the next timestep.
  },
  "E N f U a": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U (E N a)",
    "expected behavior is to make {f} and {a} be true simultanously.": "E N (f A a)",
    "expected behavior is to make {f} and {a} be true sequentially and don't need to be adjacent.": "E N (f A F(a))",
    "expected behavior is to make {f}, {a} finally be true simultanously.": "F(f A a)",
    "expected behavior is more than one atomic proposition in {{f}, {a}} should be true.": "F(f O a)",
    "expected behavior is {f} shoule be true, or {f} should not be true first, and then {f} or {a} should be true.": "E N (f O X(a))",
    "expected behavior is {f} and {a} should be true simultanously, and then {a} should always be true.": "E N (f A G(a))",
    "expected behavior is finally {a} should be true, no matter what the values of {f} are.": "F(f U a)",
    "expected behavior is {a} should always be true, or {f} be true, but subsequently {a} should be true.": "G(f U a)"
    
Revised Task: E(N f U a)
Behavior: Eventually, it will not be the case that {f} is true until {a} is true.

Revised Task: E(N(f U a))
Behavior: Eventually, it will not be the case that {f} should be true until {a} becomes true.

Revised Task: E(N f A a)
Behavior: Eventually, it will not be the case that {f} is true and {a} is true.

Revised Task: E(f U a)
Behavior: Eventually, {f} should be true until {a} becomes true.

Revised Task: E(N f O a)
Behavior: Eventually, either {f} is not true or {a} is true.

Revised Task: E(N f U N a)
Behavior: Eventually, it will not be the case that {f} is true until it is not the case that {a} is true.

Revised Task: E(N(f A a))
Behavior: Eventually, it will not be the case that both {f} and {a} are true.

Revised Task: G(N f U a)
Behavior: It will always be the case that {f} is not true until {a} is true.

Revised Task: E(G f U a)
Behavior: Eventually, it will always be the case that {f} is true until {a} is true.

Revised Task: E(N f U X a)
Behavior: Eventually, it will not be the case that {f} is true until in the next timestep {a} is true.
  },
  "G E e U N b": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "E(e U N(b))",
    "expected behavior is to make {e} and {b} be true simultanously.": "G(E(e A N(b)))",
    "expected behavior is to make {e} and {b} be true sequentially and don't need to be adjacent.": "G(E(e) A N(b))",
    "expected behavior is to make {e}, {N} and {b} be true sequentially and don't need to be adjacent.": "G(E(e) A N(N(b)))",
    "expected behavior is {e}, {N} and {b} finally be true simultanously.": "G(E(e A N(b)))"
    Revised Task: G(E(e U N(b)))

Behavior: Eventually, {e} should be true until the next timestep where {b} is true, and this pattern should always occur.
Revised Task: G E (e A N b)

Behavior: Eventually, {e} and the next timestep's value of {b} should always be true.
Revised Task: G E (e O N b)

Behavior: Eventually, either {e} or the next timestep's value of {b} should always be true.
Revised Task: G(E(e U b))

Behavior: {e} should be true until {b} becomes true, and this should always be the case.
Revised Task: E G (e U N b)

Behavior: It should eventually be the case that always {e} is true until the next timestep where {b} is true.
Revised Task: G(E(e U X b))

Behavior: Eventually, {e} should be true until the timestep after the next where {b} is true, and this should always occur.
Revised Task: G(E(N e U b))

Behavior: It should always be the case that eventually, the negation of {e} holds true until {b} becomes true.
Revised Task: G E (e U b)

Behavior: Eventually, {e} should be true until {b} becomes true, and this should always occur.
Revised Task: E(G e U N b)

Behavior: Eventually, it should always be true that {e} holds until the next timestep where {b} is true.
Revised Task: G E (N e U b)

Behavior: It should always be the case that eventually, the negation of {e} holds true until {b} becomes true.
  },
  "G N e U N b": {
    "expected behavior is to make {e} and {b} be true sequentially and don't need to be adjacent.": "G N (e U F(N b))",
    "expected behavior is to make {e} and {b} be true simultanously.": "G N (e A N b)",
    "expected behavior is {e} should be false, or {e} should not be true first, and then {e} or {b} should be true.": "G N (e O X(N b))",
    "expected behavior is {e} and {b} should be false simultanously, and then {e} should always be false.": "G N (e A F(N b))",
    "expected behavior is finally {b} should be false, no matter what the values of {e} are.": "G N (e U N b)"
    Revised Task: G(e U N b)
Behavior: Eventually, {e} should be true until {b} is not true.

Revised Task: G(N e U b)
Behavior: {e} should not be true always until {b} becomes true.

Revised Task: G N (e A U b)
Behavior: It is always not the case that both {e} and the condition "until {b}" are true.

Revised Task: G(N e A N b)
Behavior: Both {e} and {b} should not be true always.

Revised Task: G N (e O U N b)
Behavior: It is always not the case that either {e} is true or it is not true until {b} becomes true.

Revised Task: X G N e U N b
Behavior: In the next timestep, it should always be the case that {e} is not true until {b} is not true.

Revised Task: G N e U (X N b)
Behavior: It is always the case that {e} is not true until, in the next timestep, {b} is not true.

Revised Task: G N (e U X b)
Behavior: It is always not the case that {e} is true until {b} is true in the next timestep.

Revised Task: E G N e U N b
Behavior: Eventually, it will always be the case that {e} is not true until {b} is not true.

Revised Task: G(N e U N X b)
Behavior: It is always not the case that {e} is true until, in the next timestep, {b} is not true.
  },
  "N E a A N c": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "N E a A c",
    "expected behavior is {a} and {c} should be true simultanously.": "E a A c",
    "expected behavior is to make {a} and {c} be true sequentially and don't need to be adjacent.": "N E a A N F(c)",
    "expected behavior is to make {a}, {c} be false, and then {a} or {c} should be true eventually.": "N (E a A N E c)",
    "expected behavior is more than one atomic proposition in {{a}, {c}} should be true.": "E a O c"
    Revised Task: N E (a A N c)

Behavior: Eventually, both {a} and not {c} should be true.
Revised Task: N G a A N c

Behavior: Always, {a} should be true and {c} should not be true.
Revised Task: N E a A c

Behavior: Eventually, {a} should be true and {c} should be false.
Revised Task: N E (a O N c)

Behavior: Eventually, either {a} should be true or {c} should not be true.
Revised Task: E N a A N c

Behavior: Eventually, {a} should not be true and {c} should not be true.
Revised Task: N (a U N c)

Behavior: Not {a} should be true until {c} is not true.
Revised Task: N E (a A X N c)

Behavior: Eventually, {a} should be true and in the next timestep, {c} should not be true.
Revised Task: N E (a U N c)

Behavior: Eventually, {a} should be true until {c} is not true.
Revised Task: N E a U N c

Behavior: Eventually, {a} should be true or {c} should not be true.
Revised Task: N (E a A G N c)

Behavior: Not {a} should eventually be true and {c} should always not be true.
  },
  "N E a U N c": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "N(E(a U N(c)))",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "N(E(N(a) U c))",
    "expected behavior is to make {a} and {c} be true simultanously.": "N(E(a A c))",
    "expected behavior is to make {a} and {c} be true sequentially and don't need to be adjacent.": "N(E(a U F(c)))",
    "expected behavior is finally {c} should be true, no matter what the values of {a} are.": "N(E(a U c))"
    Revised Task: N E a U c
Behavior: Eventually, {a} should be true until {c} becomes true.

Revised Task: N E a A N c
Behavior: Eventually, {a} should be true and {c} should be false.

Revised Task: N E (a U N c)
Behavior: Negate the case where {a} eventually becomes true until {c} is false.

Revised Task: N G a U N c
Behavior: Negate the case where always {a} should be true until {c} is false.

Revised Task: E N a U N c
Behavior: Eventually, it should be that {a} is not true until {c} is false.

Revised Task: N E (a O N c)
Behavior: Negate the case where {a} or not {c} should eventually be true.

Revised Task: N E a U G N c
Behavior: Negate the case where {a} should be true until it is always the case that {c} is false.

Revised Task: N E a U X N c
Behavior: Negate the case where {a} should be true until in the next time step, {c} is false.

Revised Task: N (E a U N c)
Behavior: Negate the entire case where {a} should eventually be true until {c} is false.

Revised Task: E N a U (N c A N a)
Behavior: Eventually, {a} should not be true until both {c} and {a} are false.
  },
  "G N N f O a": {
    "expected behavior is {f} should be true after {a} is true. Such specification omits {f}.": "G N N f A a",
    "expected behavior is {f} should be true after {a} becomes false. Such specification omits {f}.": "G N N f R a",
    "expected behavior is {f} should not be true after {a} is true. Such specification omits {f}.": "G N N f U a",
    "expected behavior is {f} should be true after {a} is true, and also should not be true after {a} is false. Such specification omits {f}.": "G N N f O R a",
    "expected behavior is {f} should be true after {a} is false. Such specification omits {f}.": "G N N f U R a"
    Revised Task: G(f O a)

Behavior: Either {f} or {a} should always be true.
Revised Task: G N (f A a)

Behavior: It should never be the case that both {f} and {a} are true.
Revised Task: N G (f O a)

Behavior: It is not always the case that either {f} or {a} is true.
Revised Task: G(f A N a)

Behavior: {f} should always be true and {a} should never be true.
Revised Task: G N (f O N a)

Behavior: It should never be the case that {f} is true or {a} is not true.
Revised Task: G(f U a)

Behavior: {f} should be true until {a} becomes true.
Revised Task: G N f A a

Behavior: {f} should never be true while {a} should always be true.
Revised Task: G(f O X a)

Behavior: Either {f} should always be true or {a} should be true in the next timestep.
Revised Task: N G f O a

Behavior: It is not always the case that {f} or {a} is true.
Revised Task: G(f O E a)

Behavior: Either {f} should always be true or {a} should eventually be true.
  },
  "G N f O a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O (G N f)",
    "expected behavior is {a} and {f} should be true simultanously.": "G N (a O f)",
    "expected behavior is {a} and {f} should be true sequentially and don't need to be adjacent.": "G N F(a O f)",
    "expected behavior is {f} should be true, or {f} should not be true first, and then {a} should be true.": "G N (f O X(a))",
    "expected behavior is {f} should always be true, or {a} should be true, but subsequently {f} should be true.": "G N (f U a)"
    Revised Task:
G(f O a)

Behavior: Either {f} or {a} must always be true.

2. Revised Task:
G N (f O a)

Behavior: It's always the case that it's not true that either {f} or {a} is true.

3. Revised Task:
G(f A a)

Behavior: Both {f} and {a} must always be true.

4. Revised Task:
G(f U a)

Behavior: {f} should be true until {a} becomes true, and then {a} must always be true.

5. Revised Task:
G E (f O a)

Behavior: It must always be the case that either {f} or {a} will eventually be true.

6. Revised Task:
N G (f O a)

Behavior: It is not always the case that either {f} or {a} is true.

7. Revised Task:
G(f O N a)

Behavior: It must always be the case that {f} is true or {a} is not true.

8. Revised Task:
G(f O X a)

Behavior: It must always be the case that {f} is true or {a} is true in the next time step.

9. Revised Task:
G(f O E a)

Behavior: It must always be the case that {f} is true or {a} will eventually be true.

10. Revised Task:
G(f O G a)

Behavior: It must always be the case that {f} is true or {a} is always true.
  },
  "( c ) A N a": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "(c A N a) U a",
    "expected behavior is to make {a} and {c} be true simultanously.": "F(c A a)",
    "expected behavior is to make {a} and {c} be true sequentially.": "F(c A X(a))",
    "expected behavior is to make {a} and {c} be true but not at the same time.": "F(c O X(a))",
    "expected behavior is to make {a} and {c} eventually be true.": "F(G(c) U G(a))"
    Revised Task: (c) A N (a)
Behavior: {c} should be true and {a} should not be true in the next timestep.

Revised Task: (c) O N (a)
Behavior: Either {c} should be true or {a} should not be true in the next timestep.

Revised Task: G(c) A N (a)
Behavior: {c} should always be true and {a} should not be true in the next timestep.

Revised Task: E(c) A N (a)
Behavior: {c} should eventually be true and {a} should not be true in the next timestep.

Revised Task: (c) A N E(a)
Behavior: {c} should be true and eventually, {a} should not be true.

Revised Task: (c) A X N (a)
Behavior: {c} should be true and in the next timestep, {a} should not be true.

Revised Task: N (c) A N (a)
Behavior: {c} should not be true and {a} should not be true in the next timestep.

Revised Task: (c) U N (a)
Behavior: {c} should be true until {a} is not true in the next timestep.

Revised Task: (c) A G N (a)
Behavior: {c} should be true and {a} should always not be true.

Revised Task: (c) A N (a) O N (b)
Behavior: {c} should be true and either {a} should not be true in the next timestep or {b} should not be true.
  },
  "G N b U E d": {
    "expected behavior is to make {b} and {d} be true simultanously.": "G F(b A d)",
    "expected behavior is to make {b} and {d} be true sequentially and don't need to be adjacent.": "G F(b A F(d))",
    "expected behavior is to make {b} and {d} be true sequentially and need to be adjacent.": "G (b U d)",
    "expected behavior is {b} should not be true first, and then {d} should be true.": "G (N b U d)",
    "expected behavior is {d} should always be true, no matter what the values of {b} are.": "G F(b U d)"
    Revised Task: G N b U (E d)

Behavior: {b} should always be negative, and eventually {d} should be true.
Revised Task: G (N b U d)

Behavior: Always, either {b} should be negative or {d} should be true.
Revised Task: G (b U E d)

Behavior: Always, {b} should be true until eventually {d} becomes true.
Revised Task: G (N b U E(N d))

Behavior: Always, {b} should be negative until eventually {d} is also negative.
Revised Task: N(G b U E d)

Behavior: It's not always the case that {b} is true until {d} eventually becomes true.
Revised Task: G N (b O E d)

Behavior: Always, {b} should be negative or eventually {d} should be true.
Revised Task: G (N b A E d)

Behavior: Always, {b} should be negative and eventually {d} should be true.
Revised Task: G (N b U X d)

Behavior: Always, {b} should be negative until {d} is true in the next timestep.
Revised Task: E(G N b U d)

Behavior: Eventually, it should always be the case that {b} is negative until {d} is true.
Revised Task: G (b U N E d)

Behavior: Always, {b} should be true until it's not the case that eventually {d} is true.
  },
  "G N b U G d": {
    "expected behavior is {b} should be true once and {d} should always be true. Such specification omits {d}.": "G N (b U G d)",
    "expected behavior is {b} should be true, and then {d} should always be true.": "G N (b A G d)",
    "expected behavior is to make {b} and {d} be true simultanously.": "G N (b A d)",
    "expected behavior is to make {b} and {d} be true sequentially and don't need to be adjacent.": "G N (b A F(d))",
    "expected behavior is more than one atomic proposition in {{b}, {d}} should be true.": "G N (b O d)",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {d} should be true.": "G N (b O X(d))",
    "expected behavior is {b} and {d} should be true simultanously, and then {d} should always be true.": "G N (b A G(d))",
    "expected behavior is finally {d} should be true, no matter what the value of {b} is.": "G N (b U d)",
    "expected behavior is {d} should always be true, or {b} be true, but subsequently {d} should be true.": "G (N b U d)"
    Revised Task: G N b U d

Behavior: {d} should be true eventually. Until then, {b} should always be false.
Revised Task: G N (b A G d)

Behavior: {b} should always be false and {d} should always be true.
Revised Task: G N b U X(G d)

Behavior: {b} should always be false until in the next timestep, {d} starts to always be true.
Revised Task: G(N b) A G d

Behavior: {b} should always be false and independently {d} should always be true.
Revised Task: G b U G d

Behavior: {b} should be true eventually and {d} should always be true.
Revised Task: G N b O G d

Behavior: Either {b} should always be false or {d} should always be true.
Revised Task: G (N b U d) A G d

Behavior: {d} should always be true and, until {d} is true, {b} should be false.
Revised Task: E(N b U G d)

Behavior: Eventually, there will be a period where {b} is always false until {d} becomes and remains true.
Revised Task: G N b U E d

Behavior: {b} should always be false until {d} becomes true at some point.
Revised Task: G N (b U G d)

Behavior: Until {d} becomes and remains true, {b} should always be false.
  },
  "e O ( E f )": {
    "expected behavior is {e} and {f} should be true simultanously.": "e A f",
    "expected behavior is {e} and {f} should be true sequentially and don't need to be adjacent.": "E(e O f)",
    "expected behavior is {f} should always be true, and {e} should be true first.": "G(e O f)",
    "expected behavior is {e} and {f} finally be true simultanously.": "F(e A f)",
    "expected behavior is {e} or {f} should be true.": "e O f"
    Revised Task: e O E(f)

Behavior: Either {e} eventually becomes true or {f} becomes true at some point.
Revised Task: G(e O E(f))

Behavior: It's always the case that either {e} becomes true or at some point {f} becomes true.
Revised Task: e O (X E f)

Behavior: {e} becomes true or in the next timestep it will eventually be the case that {f} becomes true.
Revised Task: e O (f A E(g))

Behavior: {e} becomes true, or both {f} and eventually {g} become true.
Revised Task: e U (E f)

Behavior: {e} remains true until at some point {f} becomes true.
Revised Task: e O (N E f)

Behavior: {e} becomes true or it will not immediately but eventually be the case that {f} becomes true.
Revised Task: N(e O E f)

Behavior: It's not the case that {e} becomes true or {f} eventually becomes true.
Revised Task: e O (f U g)

Behavior: {e} becomes true or {f} remains true until {g} becomes true.
Revised Task: E(e O f)

Behavior: Eventually, it will be the case that either {e} or {f} becomes true.
Revised Task: e O (E f A g)

Behavior: {e} becomes true, or eventually {f} becomes true and {g} is also true.





  },
  "N E E b U c": {
    "expected behavior is {b} should be true first and then {c} should be true. Such specification omits {b}.": "E b U c",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "N E F(b A F(c))",
    "expected behavior is to make {b} and {c} be true simultanously.": "N E (b A c)",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "N E (b O c)",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {c} should be true.": "N E (b O X(c))"
    Given a linear temporal logic task {ltlt}, where 'A', 'O', 'N', 'G', 'U', 'X', 'E' stand for 'and', 'or', 'negative', 'always', 'until', 'next', 'eventually', respectively. Randomly substitute, add or delete the operators to generate 10 similar tasks with corresponding behaviors. The following is an example

Task: 
E(a U (b A X c))

Output:

Revised Task: a U (b A X (c))
Behavior: {a} should be true until {b} becomes true. After {b} becomes true {a} can be false, but when {b} becomes true, {c} should be true in the next timestep.

Revised Task: E(a U (b A c))
Behavior: make {b} and {c} be true simultanously, the value of {a} is not concerned.

Revised Task: E(a U (b A E(c)))
Behavior: make {b} and {c} be true sequentially and don't need to be adjacent, the value of {a} is not concerned.

Revised Task: E(a A E(b A E(c)))
Behavior: make {a}, {b} and {c} be true sequentially and don't need to be adjacent.

Revised Task: E(a A b A c)
Behavior: {a}, {b} and {c} finally be true simultanously.

Revised Task: E(a O b O c)
Behavior: more than one atomic proposition in {{a}, {b}, {c}} should be true eventually.

Revised Task: E(a U (b O X(c)))
Behavior: {b} shoule be true, or {b} should not be true first, and then {b} or {c} should be true, the value of {a} is not concerned.

Revised Task: E(a U (b A G(c)))
Behavior: {b} and {c} should be true simultanously, and then {c} should always be true, the value of {a} is not concerned

Revised Task: E(a U (b U c))
Behavior: finally {c} should be true, the value of {a} and {b} are not concerned. 

Revised Task: G(a U (b U c))
Behavior: {c} should always be true, or {a} and {b} be true, but subsequently {c} should be true.

Now generate the result of task: "e O ( E f )", the  output should have the same output format with the example and without extra explaination.
  },
  "N E G b U c": {
    "expected behavior is {b} should be false first. Such specification omits {b}.": "N E G(b U c)",
    "expected behavior is to make {b} and {c} be false simultanously.": "N E G(b A c)",
    "expected behavior is to make {b} and {c} be false sequentially and don't need to be adjacent.": "N E G(b A F(c))",
    "expected behavior is to make {b}, {c} and {d} be false sequentially and don't need to be adjacent.": "N E G(b A F(c A F(d)))",
    "expected behavior is more than one atomic proposition in {{b}, {c}, {d}} should be false.": "N E G(b O c O d)",
    "expected behavior is {b} shoule be false, or {b} should not be false first, and then {b} or {c} should be false.": "N E G(b O X(c))",
    "expected behavior is {b} and {c} should be false simultanously, and then {c} should always be false.": "N E G(b A G(c))",
    "expected behavior is finally {c} should be false, no matter what the values of {b} are.": "N E G(b U c)",
    "expected behavior is {c} should always be false, or {b} and {c} be false, but subsequently {c} should be false.": "N E G(b U X(c))"
    Revised Task: N E (G b U c)

Behavior: Not eventually {b} always being true until {c} becomes true.
Revised Task: N E (b U G c)

Behavior: Not eventually {b} being true until {c} always becomes true.
Revised Task: N G (b U c)

Behavior: Not always {b} being true until {c} becomes true.
Revised Task: N E G (b A c)

Behavior: Not eventually always {b} and {c} being true simultaneously.
Revised Task: E N (b U c)

Behavior: Eventually, it is not the case that {b} is true until {c} becomes true.
Revised Task: N E (b O c)

Behavior: Not eventually {b} or {c} being true.
Revised Task: G N E (b U c)

Behavior: Always not eventually {b} being true until {c} becomes true.
Revised Task: N E (X b U c)

Behavior: Not eventually {b} being true in the next timestep until {c} becomes true.
Revised Task: N E (b U X c)

Behavior: Not eventually {b} being true until {c} is true in the next timestep.
Revised Task: N E G (b U X c)

Behavior: Not eventually always {b} being true until {c} is true in the next timestep.
  },
  "N G E b A a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "G E b A a",
    "expected behavior is {a} and {b} should be true simultanously.": "N(G(E(b A a)))",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent.": "N(G(E(b U a)))",
    "expected behavior is more than one atomic proposition in {{a}, {b}} should be true.": "N(G(E(b O a)))",
    "expected behavior is {a} and {b} should be true, or {b} should not be true first, and then {b} or {a} should be true.": "N(G(E(b O X(a))))"
    Revised Task: N G (E b A a)

Behavior: The condition where both {b} and {a} eventually become true should never always be the case.
Revised Task: G E (b A N a)

Behavior: It's always the case that eventually {b} will be true and {a} will not be true.
Revised Task: E (N b A a)

Behavior: Eventually, {b} should not be true and {a} should be true.
Revised Task: N E (b A a)

Behavior: It should not be the case that {b} and {a} eventually become true simultaneously.
Revised Task: G (b A N E a)

Behavior: Always, {b} should be true and it should not be the case that {a} eventually becomes true.
Revised Task: N G b A E a

Behavior: It should never always be the case that {b} is true and eventually {a} becomes true.
Revised Task: G (N b A E a)

Behavior: Always, {b} should not be true and eventually {a} should become true.
Revised Task: E (b O N a)

Behavior: Eventually, either {b} is true or {a} is not true.
Revised Task: E N (b A a)

Behavior: It should eventually be the case that it's not true both {b} and {a} are true simultaneously.
Revised Task: N E G (b A a)

Behavior: It should not be the case that it is always eventually true that both {b} and {a} are true.
  },
  "N G E b O a": {
    "expected behavior is {b} and {a} should be true simultaneously.": "G(b O a)",
    "expected behavior is {b} and {a} should be true sequentially.": "F(b A a)",
    "expected behavior is {a} should not be true, or {b} and {a} should be true simultaneously.": "N F(b O a)",
    "expected behavior is {a} should be true before {b}.": "N G(a U b)",
    "expected behavior is {b} should not be true, or {a} should be true.": "N (b A a)"
    Revised Task: G E b O a
Behavior: Eventually, either {b} or {a} should become true.

Revised Task: N G (E b A a)
Behavior: It should always be the case that {b} eventually becomes true and {a} is always true.

Revised Task: N G E (b A a)
Behavior: It should never be the case that {b} and {a} are true simultaneously.

Revised Task: G N E b O a
Behavior: It should always be the case that {b} or {a} is not true in the next timestep.

Revised Task: N G E (b O X a)
Behavior: It should never be the case that either {b} is true or {a} is true in the next timestep.

Revised Task: N E b O G a
Behavior: {b} or {a} should eventually become true, and {a} should always be true.

Revised Task: N G E (b U a)
Behavior: It should never be the case that {a} becomes true unless {b} is true.

Revised Task: N G (b O E a)
Behavior: It should always be the case that {b} is true or {a} will eventually become true.

Revised Task: N (E b U G a)
Behavior: It should never be the case that {b} eventually becomes true unless {a} is always true.

Revised Task: G (E b A N a)
Behavior: It should always be the case that {b} eventually becomes true and {a} is not true in the next timestep.
  },
  "G N E ( b )": {
    "expected behavior is {b} should be true until the end. Such specification omits the ending time.": "G N E ( b ) U b",
    "expected behavior is {b} should always be true but no need to be true until the end.": "G N E ( b ) O b",
    "expected behavior is {b} should be true until some other atomic proposition is true.": "G N E ( b U a )",
    "expected behavior is {b} should be true until the end, and other atomic propositions should also be true.": "F G N E ( b U a )",
    "expected behavior is {b} should always be true, and other atomic propositions should also be true.": "G N E ( b A a )"
    Revised Task: G N (b)

Behavior: {b} should always be false.
Revised Task: G E (b)

Behavior: {b} should eventually be true at some point.
Revised Task: G N E (a O b)

Behavior: Neither {a} nor {b} should eventually become true.
Revised Task: G N E (X b)

Behavior: It is not the case that {b} will be true in the next timestep.
Revised Task: G N E (b A c)

Behavior: It is not the case that {b} and {c} will both eventually be true.
Revised Task: N G E (b)

Behavior: It is not always the case that {b} will eventually be true.
Revised Task: G (b U c)

Behavior: Always, {b} should be true until {c} becomes true.
Revised Task: G N E (b U c)

Behavior: It is not the case that {b} should be true until {c} eventually becomes true.
Revised Task: G N E (b) A c

Behavior: It should always be the case that {b} will not eventually be true, and {c} is also true.
Revised Task: G N (E b) O c

Behavior: Always, it should not be the case that {b} will eventually be true, or {c} is true.
  },
  "G N X ( b )": {
    "expected behavior is {b} should be true initially. Such specification omits {b}.": "b U N X (b)",
    "expected behavior is {b} should always be true. Such specification omits {b}.": "G b U N X (b)",
    "expected behavior is at least one atomic proposition in {{b}} should be true. Such specification omits {b}.": "G N (b O X(b))",
    "expected behavior is {b} should be true first, and then {b} should always be true. Such specification omits {b}.": "G b U N X (G b)",
    "expected behavior is {b} should be true first, and then {b} should not be true. Such specification omits {b}.": "G b U N (X b)"
    Revised Task: G N X (b)
Behavior: {b} should not be true in the next timestep, and this condition should always hold.

Revised Task: G X (b)
Behavior: {b} should be true in the next timestep, and this condition should always hold.

Revised Task: G N X (N b)
Behavior: {b} should not be false in the next timestep, and this condition should always hold.

Revised Task: N G X (b)
Behavior: It is not always the case that {b} should be true in the next timestep.

Revised Task: G N (b)
Behavior: {b} should not be true, and this condition should always hold.

Revised Task: G X N (b)
Behavior: {b} should not be true in the timestep after the next, and this condition should always hold.

Revised Task: G N X (b A b)
Behavior: The conjunction of {b} with itself should not be true in the next timestep, and this condition should always hold.

Revised Task: G N X (b O b)
Behavior: The disjunction of {b} with itself should not be true in the next timestep, and this condition should always hold.

Revised Task: G (b)
Behavior: {b} should always be true.

Revised Task: G N (N b)
Behavior: {b} should not always be false.
  },
  "N N d O N e": {
    "expected behavior is {d} should be false first. Such specification omits {d}.": "N (N d) O N e",
    "expected behavior is to make {d} and {e} be false simultanously.": "N N (d O e)",
    "expected behavior is to make {d} and {e} be false sequentially and don't need to be adjacent.": "N N (d O N e)",
    "expected behavior is to make {d}, {e} and {f} be false sequentially and don't need to be adjacent.": "N (N d) O (N e) O (N f)",
    "expected behavior is more than one atomic proposition in {{d}, {e}} should be false.": "N (d O e)"
    Revised Task: N d O N e

Behavior: {d} should not be true initially, but eventually {e} should always not be true.
Revised Task: N N d O e

Behavior: Initially, {d} should not be true. Eventually, {e} should always be true.
Revised Task: N N d U N e

Behavior: Initially, {d} should not be true until {e} is not true.
Revised Task: N N (d A e) O N e

Behavior: Initially, neither {d} nor {e} should be true, or eventually {e} should not be true.
Revised Task: N N d O (N e A e)

Behavior: Initially, {d} should not be true. Eventually, {e} should fluctuate between true and false states.
Revised Task: N N d U (N e O e)

Behavior: Initially, {d} should not be true until {e} changes its state.
Revised Task: N d O (N e U e)

Behavior: {d} should not be true initially, and eventually, {e} should alternate between being true and not true.
Revised Task: N N d O (N e U d)

Behavior: Initially, {d} should not be true. Eventually, {e} should not be true until {d} becomes true.
Revised Task: N N (d O e) O N e

Behavior: Initially, either {d} or {e} should not be true, and eventually {e} should not be true.
Revised Task: G(N N d O N e)

Behavior: Always, initially {d} should not be true, and eventually {e} should always not be true.
  },
  "G G e U N f": {
    "expected behavior is {e} and {f} should be true sequentially and don't need to be adjacent.": "G G F(e U N(f))",
    "expected behavior is {f} should always be true, no matter what the values of {e} are.": "G G F(e U f)",
    "expected behavior is more than one atomic proposition in {{e}, {f}} should be true.": "G G (e O N(f))",
    "expected behavior is {e} should be true first, and then {f} should be true.": "G G (e A N(f))",
    "expected behavior is {e} should always be true, or {f} should not be true first, and then {e} or {f} should be true.": "G G (e O N X(f))"
    Revised Task: G(e U N f)

Behavior: Eventually, {e} should be true until {f} is true in the next timestep. This should always hold.
Revised Task: G G e U f

Behavior: Always, always, {e} should be true until {f} becomes true.
Revised Task: G G (e O N f)

Behavior: Always, always, either {e} or {f} in the next timestep should be true.
Revised Task: G G (e A N f)

Behavior: Always, always, both {e} and {f} in the next timestep should be true.
Revised Task: G G e U (N N f)

Behavior: Always, always, {e} should be true until {f} is true in the timestep after the next.
Revised Task: G G (e U X f)

Behavior: Always, always, {e} should be true until {f} is true in the following timestep.
Revised Task: G(e A N f)

Behavior: Always, {e} and {f} in the next timestep should be true.
Revised Task: G G (e A G f)

Behavior: Always, always, {e} and {f} should always be true.
Revised Task: G G (e U G f)

Behavior: Always, always, {e} should be true until {f} always becomes true.
Revised Task: G G e U (N(f O e))

Behavior: Always, always, {e} should be true until either {f} or {e} is true in the next timestep.
  },
  "f U N b U d": {
    "expected behavior is {f}, {b} and {d} should be true sequentially and don't need to be adjacent.": "F(f A N(b A d))",
    "expected behavior is {f}, {b} and {d} should be true simultanously.": "F(f A b A d)",
    "expected behavior is {f} should be true, or {b} should not be true first, and then {b} or {d} should be true.": "F(f U (N b O d))",
    "expected behavior is finally {d} should be true, no matter what the values of {f} and {b} are.": "F(f U (b U d))",
    "expected behavior is more than one atomic proposition in {{f}, {b}, {d}} should be true.": "F(f O b O d)"
    Revised Task: G(e U N f)

Behavior: Eventually, {e} should be true until {f} is true in the next timestep. This should always hold.
Revised Task: G G e U f

Behavior: Always, always, {e} should be true until {f} becomes true.
Revised Task: G G (e O N f)

Behavior: Always, always, either {e} or {f} in the next timestep should be true.
Revised Task: G G (e A N f)

Behavior: Always, always, both {e} and {f} in the next timestep should be true.
Revised Task: G G e U (N N f)

Behavior: Always, always, {e} should be true until {f} is true in the timestep after the next.
Revised Task: G G (e U X f)

Behavior: Always, always, {e} should be true until {f} is true in the following timestep.
Revised Task: G(e A N f)

Behavior: Always, {e} and {f} in the next timestep should be true.
Revised Task: G G (e A G f)

Behavior: Always, always, {e} and {f} should always be true.
Revised Task: G G (e U G f)

Behavior: Always, always, {e} should be true until {f} always becomes true.
Revised Task: G G e U (N(f O e))

Behavior: Always, always, {e} should be true until either {f} or {e} is true in the next timestep.
  },
  "N c O f O a": {
    "expected behavior is {a}, {c} and {f} should be true sequentially and don't need to be adjacent.": "F(c O F(f O a))",
    "expected behavior is {f} should not be true, and then {a} or {c} should be true.": "F(c O (Nf O a))",
    "expected behavior is {a}, {c} and {f} should be true simultanously.": "F(a A c A f)",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {f}} should be true.": "F(a O c O f)",
    "expected behavior is {a}, {c} and {f} finally be true simultanously.": "G(a A c A f)"
    Revised Task: N (c O f O a)
Behavior: At least one of {c}, {f}, or {a} should be false.

Revised Task: N (c A f A a)
Behavior: All of {c}, {f}, and {a} should be false.

Revised Task: N (c U f U a)
Behavior: Eventually, all of {c}, {f}, and {a} should be false.

Revised Task: G(N (c O f O a))
Behavior: Always, at least one of {c}, {f}, or {a} should be false.

Revised Task: X(N (c O f O a))
Behavior: In the next timestep, at least one of {c}, {f}, or {a} should be false.

Revised Task: E(N (c O f O a))
Behavior: Eventually, at least one of {c}, {f}, or {a} should be false.

Revised Task: N (c O X(f) O a)
Behavior: At least one of {c}, {f} in the next timestep, or {a} should be false.

Revised Task: N (c O G(f) O a)
Behavior: At least one of {c}, {f} always, or {a} should be false.

Revised Task: N (c O E(f) O a)
Behavior: At least one of {c}, {f} eventually, or {a} should be false.

Revised Task: N (E(c) O f O a)
Behavior: Either {c} eventually, {f}, or {a} should be false.
  },
  "N c O c U a": {
    "expected behavior is {a} should be true and {c} should not be true. Such specification omits {a}.": "N c O c U (a O a)",
    "expected behavior is {a} should be true and {c} should not be true, and then {c} should become true.": "N c O (c U (a A X c))",
    "expected behavior is {a} and {c} should be true simultanously.": "F(N c A a)",
    "expected behavior is {a} should be true first, and then {c} should become true.": "F(N c O (a U X c))",
    "expected behavior is {a} and {c} should be true sequentially but don't need to be adjacent.": "F(N c O (a A X c))"
    Revised Task: N c U a

Behavior: The negation of {c} should be true until {a} becomes true.
Revised Task: N (c O a)

Behavior: Either {c} is false or {a} is true.
Revised Task: G(N c O c U a)

Behavior: It's always the case that the negation of {c} or {c} should be true until {a} becomes true.
Revised Task: N c O X a

Behavior: The negation of {c} or {a} in the next timestep should be true.
Revised Task: E(N c O c U a)

Behavior: Eventually, it should be the case that the negation of {c} or {c} should be true until {a} becomes true.
Revised Task: N c O c A a

Behavior: The negation of {c} or {c} and {a} should be true.
Revised Task: N c O c U E a

Behavior: The negation of {c} or {c} should be true until it's eventually the case that {a} becomes true.
Revised Task: N E c O c U a

Behavior: The negation of {c} eventually becoming true or {c} should be true until {a} becomes true.
Revised Task: N c O (c U a)

Behavior: The negation of {c} or {c} should be true until {a} becomes true.
Revised Task: N c O c U G a

Behavior: The negation of {c} or {c} should be true until it's always the case that {a} is true.
  },
  "G G a A N a": {
    "expected behavior is {a} should always be true, and no matter what the values of {a} are.": "G a",
    "expected behavior is {a} should be true first, and then {a} should not be true.": "G a A N F a",
    "expected behavior is {a} should be true first, but then {a} should not be true until the end of trajectory.": "G a A N G F a",
    "expected behavior is {a} should always be true, but eventually it will not be true.": "G a A F N a",
    "expected behavior is {a} should always be true, and then {a} will eventually be false.": "G a U F N a"
    Revised Task: G(G a A a)

Behavior: It is always true that it is always true that {a} is true and {a} is true (redundant expression of {a} always being true).
Revised Task: G(G a O N a)

Behavior: It is always true that it is always true that either {a} is true or {a} is not true (this is a tautology, always true regardless of {a}).
Revised Task: G(G a A X a)

Behavior: It is always true that it is always true that {a} is true and in the next timestep, {a} should still be true.
Revised Task: G(G a A G a)

Behavior: It is always true that it is always true that {a} is true and always remains true.
Revised Task: G E a A N a

Behavior: It is always true that eventually {a} is true and {a} is not true (contradictory, never true).
Revised Task: G a U (N a)

Behavior: It is always true that {a} is true until it is not true.
Revised Task: G(G a A E a)

Behavior: It is always true that it is always true that {a} is true and eventually {a} will be true (reinforcing the persistence of {a}).
Revised Task: G a A G N a

Behavior: It is always true that {a} is true and it is always true that {a} is not true (contradictory, never true).
Revised Task: G N G a

Behavior: It is always true that it is not always true that {a} is true (expresses intermittent truth of {a}).
Revised Task: N G G a

Behavior: It is not true that it is always true that it is always true that {a} is true (negation of the persistence of {a}).
  },
  "X G b A N f": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A X G N f",
    "expected behavior is {f} should not be true.": "X G b A F f",
    "expected behavior is {f} should always be true.": "X G b A G f",
    "expected behavior is to make {b} and {f} be true sequentially and don't need to be adjacent.": "X G (b A F(N f))",
    "expected behavior is to make {b} and {f} be true simultanously.": "X G (b A N f)"
    Revised Task: X G (b A N(f))
Behavior: It is always the case that {b} is true and {f} is not true, starting from the next timestep.

Revised Task: X (b A G N(f))
Behavior: Starting from the next timestep, {b} should be true and {f} should always be not true.

Revised Task: X G (b O N(f))
Behavior: It is always the case that either {b} is true or {f} is not true, starting from the next timestep.

Revised Task: G X (b A N(f))
Behavior: From every timestep, it will always be the case that in the next timestep, {b} is true and {f} is not true.

Revised Task: X G (b A f)
Behavior: It is always the case that both {b} and {f} are true, starting from the next timestep.

Revised Task: X G b A E N(f)
Behavior: Starting from the next timestep, it is always the case that {b} is true and eventually {f} will not be true.

Revised Task: X G (N(b) A N(f))
Behavior: It is always the case that both {b} and {f} are not true, starting from the next timestep.

Revised Task: X G (b U N(f))
Behavior: Starting from the next timestep, it is always the case that {b} is true until {f} is not true.

Revised Task: G (b A X N(f))
Behavior: It is always the case that {b} is true and in the next timestep, {f} is not true.

Revised Task: X G (b A U(f))
Behavior: Starting from the next timestep, it is always the case that {b} is true and {f} will eventually be true.
  },
  "E X c U N a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (X c U N a)",
    "expected behavior is to make {c} and {a} be true simultanously.": "E (X c A N a)",
    "expected behavior is to make {c} and {a} be true sequentially and don't need to be adjacent.": "E (X c U N F(a))",
    "expected behavior is to make {c}, {a} and {b} finally be true simultanously.": "E (X (c A N a))",
    "expected behavior is more than one atomic proposition in {{c}, {a}, {b}} should be true.": "E (X (c O N a))",
    "expected behavior is {c} shoule be true, or {c} should not be true first, and then {a} or {b} should be true.": "E (X (c O U(N a)))",
    "expected behavior is {c} and {a} should be true simultanously, and then {a} should always be true.": "E (X (c A G(N a)))",
    "expected behavior is finally {a} should be true, no matter what the values of {c} and {b} are.": "E (X c U a)",
    "expected behavior is {a} should always be true, or {c} and {b} be true, but subsequently {a} should be true.": "G(E X c U N a)"
    Revised Task: E X (c U N a)
Behavior: Eventually, it should be that in the next time step, either {c} becomes true or {a} remains false.

Revised Task: E X (c U a)
Behavior: Eventually, {c} should remain true until {a} becomes true in the next time step.

Revised Task: E (X c U a)
Behavior: Eventually, {c} should be true in the next timestep and remain true until {a} becomes true.

Revised Task: E X c U a
Behavior: Eventually, in the next time step, {c} should be true or remain true until {a} becomes true.

Revised Task: E (X c A N a)
Behavior: Eventually, {c} should be true in the next timestep and {a} should be false simultaneously.

Revised Task: E G (X c U N a)
Behavior: Eventually, it should always be the case that in the next timestep {c} becomes true or {a} remains false.

Revised Task: G E (X c U N a)
Behavior: Always, it will eventually be the case that in the next timestep {c} becomes true or {a} remains false.

Revised Task: E (X c U G N a)
Behavior: Eventually, {c} should be true in the next timestep and remain true until {a} always remains false.

Revised Task: N E X (c U N a)
Behavior: It is not the case that eventually, in the next timestep, {c} should be true or {a} should remain false.

Revised Task: E (N X c U N a)
Behavior: Eventually, it should be the case that in the next timestep, {c} is not true or {a} remains false until then.
  },
  "b A ( E d )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A ( E (d))",
    "expected behavior is {b} and {d} should be true simultanously.": "b A d",
    "expected behavior is to make {d} always be true.": "b A G(d)",
    "expected behavior is to make {b} and {d} be true sequentially and don't need to be adjacent.": "b A F(E (d))",
    "expected behavior is {b} should be true, or {d} should not be true first, and then {b} or {d} should be true.": "b O (E (d))"
    Revised Task: b A ( E (d A b) )

Behavior: {b} should be true and eventually {d} and {b} should be true again.
Revised Task: b A ( E (d O b) )

Behavior: {b} should be true and eventually either {d} or {b} should be true.
Revised Task: b A ( X d )

Behavior: {b} should be true and in the next timestep, {d} should be true.
Revised Task: b A ( G d )

Behavior: {b} should be true and {d} should always be true.
Revised Task: b A ( N E d )

Behavior: {b} should be true and it should not be the case that {d} eventually becomes true.
Revised Task: E (b A d)

Behavior: Eventually, both {b} and {d} should be true simultaneously.
Revised Task: b A ( E (d U b) )

Behavior: {b} should be true and eventually {d} should be true until {b} becomes true again.
Revised Task: b A (d)

Behavior: Both {b} and {d} should be true.
Revised Task: b O ( E d )

Behavior: Either {b} is true, or eventually {d} should be true.
Revised Task: G (b A ( E d ))

Behavior: It should always be the case that {b} is true and eventually {d} becomes true.





  },
  "E E c A E c": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c A E E c",
    "expected behavior is to make {c} be true infinitely.": "G(c A E E c)",
    "expected behavior is to make {c} be true infinitely in a finite amount of time.": "F(c A E E c)",
    "expected behavior is to make {c} be true sequentially and don't need to be adjacent.": "F(E c A E F(c))",
    "expected behavior is to make {c} be true simultanously.": "F(E c A c)"
    Revised Task: E G c A E c

Behavior: Both conditions {c} should always be true eventually.
Revised Task: E E c O E c

Behavior: Eventually, either of the conditions {c} should be true eventually.
Revised Task: E c A E c

Behavior: {c} should be true, and subsequently, {c} should be true eventually.
Revised Task: E E (c A c)

Behavior: Eventually, {c} and {c} (redundant, effectively {c}) should be true eventually.
Revised Task: E E c A G c

Behavior: Eventually, {c} should be true and {c} should always be true eventually.
Revised Task: E E (c O E c)

Behavior: Eventually, {c} should be true or {c} should be true eventually.
Revised Task: E E N c A E c

Behavior: Eventually, {c} should not be true and then {c} should be true eventually.
Revised Task: E E X c A E c

Behavior: Eventually, in the next timestep, {c} should be true and then {c} should be true eventually.
Revised Task: E E c A E (c A c)

Behavior: Eventually, {c} should be true and subsequently, both conditions {c} should be true eventually.
Revised Task: E E c U E c

Behavior: Eventually, {c} should be true until {c} is true eventually.
  },
  "E X c A E c": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c A E X c A E c",
    "expected behavior is {c} should always be true.": "G(c A E X c A E c)",
    "expected behavior is {c} should be true until eventually {c} should be true.": "F(c A E X c A E c)",
    "expected behavior is {c} should be true until eventually {c} should always be true.": "F(c A E X G(c A E c))",
    "expected behavior is {c} should be true until eventually {c} should be true and then {c} should be false.": "F(c A E X G(F(c A E c)))"
    Revised Task: E(X c O E c)

Behavior: Eventually, either the next state will have {c} true or {c} will eventually be true.
Revised Task: G(X c A E c)

Behavior: Always, the next state must have {c} true and eventually {c} will be true.
Revised Task: E X (c A E c)

Behavior: Eventually, in the next state, both {c} must be true and {c} must eventually be true.
Revised Task: E X c A G c

Behavior: Eventually, the next state must have {c} true and {c} must always be true thereafter.
Revised Task: E X c U E c

Behavior: Eventually, {c} must be true in the next state until {c} eventually becomes true.
Revised Task: E X (c O E c)

Behavior: Eventually, in the next state, either {c} must be true or {c} must eventually be true.
Revised Task: E X N c A E c

Behavior: Eventually, the next state must not have {c} true and eventually {c} must be true.
Revised Task: E X c A E N c

Behavior: Eventually, the next state must have {c} true and eventually {c} must not be true.
Revised Task: E N X c A E c

Behavior: Eventually, it must not be the case that in the next state {c} is true, and {c} must eventually be true.
Revised Task: E X c A E X c

Behavior: Eventually, the next state must have {c} true and eventually in the next state {c} must be true.
  },
  "G N ( N d )": {
    "expected behavior is {d} should always be true. Such specification omits {d}.": "G(d)",
    "expected behavior is {d} should always be false. Such specification omits {d}.": "G(~d)",
    "expected behavior is {d} should be true until some other atomic proposition happens. Such specification omits {d}.": "G(N d)",
    "expected behavior is {d} should be false until some other atomic proposition happens. Such specification omits {d}.": "G(N ~d)",
    "expected behavior is more than one atomic proposition in {{d}} should be true.": "G(d O ~d)"
    Revised Task: G N (d)
Behavior: {d} should not be true always.

Revised Task: G N (X N d)
Behavior: In the next time step, {d} should not be true, and this pattern should always be the case.

Revised Task: G (N d)
Behavior: {d} should always be not true.

Revised Task: G N (E N d)
Behavior: It should always be the case that there will eventually be a time when {d} is not true.

Revised Task: G N (N E d)
Behavior: It should always be the case that {d} is not true at some point in the future.

Revised Task: G (N d) A G (N d)
Behavior: {d} should always be not true, and this condition should always be maintained.

Revised Task: N G (N d)
Behavior: It is not always the case that {d} should not be true.

Revised Task: G N (N d) O G N (N d)
Behavior: Either it should always be the case that {d} is not true, or this condition should always hold.

Revised Task: G N (N d A N d)
Behavior: It should always be the case that both {d} is not true and {d} is not true simultaneously.

Revised Task: E G N (N d)
Behavior: Eventually, it should always be the case that {d} is not true.
  },
  "E a O d U a": {
    "expected behavior is {a} and {d} should be true simultanously.": "F(a A d U a)",
    "expected behavior is {a} should be true first, and then {d} or {a} should be true.": "F(a U (d O a))",
    "expected behavior is {a} should always be true, or {a} and {d} be true, but subsequently {a} should be true.": "G(a U (d U a))",
    "expected behavior is more than one atomic proposition in {{a}, {d}} should be true.": "F(a O d U a)",
    "expected behavior is {a} or {d} should be true first, and then {d} and {a} should be true simultanously.": "F(a O (d A a))"
    Revised Task: E (a O d) U a
Behavior: Eventually, either {a} or {d} should be true until {a} becomes true.

Revised Task: E a U (d O a)
Behavior: Eventually, {a} should be true until either {d} or {a} becomes true.

Revised Task: E a U d
Behavior: Eventually, {a} should be true until {d} becomes true.

Revised Task: E (a A d) U a
Behavior: Eventually, both {a} and {d} should be true until {a} becomes true.

Revised Task: E (a O X d) U a
Behavior: Eventually, either {a} or {d} in the next timestep should be true until {a} becomes true.

Revised Task: E a U (d A X a)
Behavior: Eventually, {a} should be true until {d} and {a} in the next timestep are true.

Revised Task: E (a O G d) U a
Behavior: Eventually, either {a} or {d} always being true should hold until {a} becomes true.

Revised Task: G (E a O d U a)
Behavior: It should always be the case that eventually either {a} or {d} should be true until {a} becomes true.

Revised Task: E (a O d) U (X a)
Behavior: Eventually, either {a} or {d} should be true until {a} in the next timestep becomes true.

Revised Task: N (E a O d U a)
Behavior: It is not the case that eventually either {a} or {d} should be true until {a} becomes true.
  },
  "X a O d U a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O d U a",
    "expected behavior is to make {a}, {d} be true sequentially and don't need to be adjacent.": "X a A F(d U a)",
    "expected behavior is {a}, {d} finally be true simultanously.": "F(a A d U a)",
    "expected behavior is more than one atomic proposition in {{a}, {d}} should be true.": "F(a O d U a)",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {a} or {d} should be true.": "X a O (d O X a)"
    Revised Task: X (a O d U a)
Behavior: Eventually, either {a} or {d} becomes true, and after that, {a} remains true.

Revised Task: X a O (d U a)
Behavior: Next, {a} will be true or eventually {d} will be true leading to a point where {a} becomes true.

Revised Task: X a O (d U E(a))
Behavior: Next, {a} will be true or eventually {d} will lead to a point where {a} will eventually be true.

Revised Task: X a O G(d U a)
Behavior: Next, {a} will be true or {d} will always lead to a situation where {a} becomes true.

Revised Task: X E(a O d U a)
Behavior: Next, it is eventually true that either {a} or {d} will lead to a situation where {a} becomes true.

Revised Task: E(X a O d U a)
Behavior: Eventually, the next state will have {a} true, or {d} will lead to a situation where {a} becomes true.

Revised Task: X a O d U G(a)
Behavior: Next, {a} is true, or eventually {d} leads to a situation where {a} will always be true.

Revised Task: X a O d U N(a)
Behavior: Next, {a} is true, or eventually {d} leads to a situation where {a} is not true.

Revised Task: X (a O d) U a
Behavior: Eventually, either {a} or {d} will be true in the next state, leading to a situation where {a} becomes true.

Revised Task: X a O d U (a A c)
Behavior: Next, {a} is true, or eventually {d} leads to a situation where both {a} and {c} become true.
  },
  "G G X d O c": {
    "expected behavior is {c} should always be true, {d} should always be true, but {c} or {d} should be true first.": "G (G X (d O c))",
    "expected behavior is {c} should be true first and then {d} should be true.": "G (G X (c U d))",
    "expected behavior is {d} should be true first and then {c} should be true.": "G (G X (d U c))",
    "expected behavior is finally {d} and {c} should be true simultanously.": "G (G X (d A c))",
    "expected behavior is {c} should be true, or {d} should not be true first, and then {d} or {c} should be true.": "G (G X (c O X(d)))",
    "expected behavior is more than one atomic proposition in {{c}, {d}} should be true.": "G (G X (c O d))"
    Revised Task: G G (d O c)

Behavior: Either {d} or {c} should always be true.
Revised Task: G G X (d A c)

Behavior: In the next timestep, both {d} and {c} should always be true.
Revised Task: G X d O G c

Behavior: Either {d} in the next timestep or {c} should always be true.
Revised Task: G G X (d O E c)

Behavior: In the next timestep, {d} should be true or {c} should eventually be true, and this pattern should always hold.
Revised Task: G G X N(d O c)

Behavior: In the next timestep, it should not be the case that either {d} or {c} is true, and this pattern should always hold.
Revised Task: G G X d U c

Behavior: In the next timestep, {d} should be true until {c} becomes true, and this pattern should always hold.
Revised Task: G (d O c)

Behavior: Either {d} or {c} should be true at all times.
Revised Task: E G X d O c

Behavior: It should eventually be the case that either {d} or {c} is true in the next timestep.
Revised Task: G G X (d O G c)

Behavior: In the next timestep, either {d} should be true or {c} should always be true, and this pattern should always hold.
Revised Task: G X (d O c) A G c

Behavior: In the next timestep, either {d} or {c} should be true and {c} should always be true thereafter.
  },
  "G N X c O c": {
    "expected behavior is {c} should always be true. Such specification omits {c}.": "G N c O c",
    "expected behavior is more than one atomic proposition in {c} should be true.": "G N (X c O c)",
    "expected behavior is {c} should be true or {c} should not be true first, and then {c} should be true.": "G N (X c U c)",
    "expected behavior is to make {c} be true sequentially and don't need to be adjacent.": "G N (X c A F(c))",
    "expected behavior is {c} should first be true, and then stay true until the end of the task.": "G N (c A X c)"
    Revised Task: G N (X c O c)
Behavior: It is always the case that either the next state of {c} or {c} itself should not be true.

Revised Task: G (N X c O c)
Behavior: It is always the case that in the next state, {c} should not be true or {c} should be true.

Revised Task: G N X (c O c)
Behavior: It is always the case that in the next state, {c} should not be true.

Revised Task: G (X c O N c)
Behavior: It is always the case that either the next state of {c} should be true or {c} should not be true.

Revised Task: G (N X c A c)
Behavior: It is always the case that in the next state, {c} should not be true and {c} should be true.

Revised Task: G N X E(c O c)
Behavior: It is always the case that in the next state, {c} should not eventually be true or {c} should not eventually be true.

Revised Task: G N (X E(c) O c)
Behavior: It is always the case that either the next state of {c} eventually being true should not be true or {c} should not be true.

Revised Task: G N X (E(c) O c)
Behavior: It is always the case that in the next state, either {c} eventually being true or {c} itself should not be true.

Revised Task: G (N X E(c) O c)
Behavior: It is always the case that either in the next state {c} should not eventually be true or {c} should be true.

Revised Task: G (N X c O E(c))
Behavior: It is always the case that either in the next state {c} should not be true or {c} should eventually be true.
  },
  "G a A b U b": {
    "expected behavior is to make {a} and {b} be true simultanously.": "F(a A b)",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent.": "F(a A F(b))",
    "expected behavior is finally {b} should be true, no matter what the values of {a} are.": "F(a U b)",
    "expected behavior is {a} should be true first, and then {b} should always be true.": "G(a A b)",
    "expected behavior is {b} should not be true first, and then {b} should always be true.": "G(a U b)"
    Revised Task: G(a A b U b)
Behavior: {a} and {b} should always be true, or until {b} becomes true.

Revised Task: G(a A b U c)
Behavior: {a} and {b} should always be true, or until {c} becomes true.

Revised Task: G(a O b U b)
Behavior: Either {a} or {b} should always be true, or until {b} becomes true.

Revised Task: G(a A b U X b)
Behavior: {a} and {b} should always be true, or until the next timestep after {b} becomes true.

Revised Task: G(a A E(b U b))
Behavior: {a} should always be true, and eventually, {b} should be true until {b} becomes true.

Revised Task: G(a A b U N b)
Behavior: {a} and {b} should always be true, or until {b} is not true.

Revised Task: G(a A (b A c) U b)
Behavior: {a} and both {b} and {c} should always be true, or until {b} becomes true.

Revised Task: G(N a A b U b)
Behavior: {a} should not always be true, and {b} should always be true, or until {b} becomes true.

Revised Task: G(a U b A b)
Behavior: {a} should be true, or until {b} is true and then {b} should always be true.

Revised Task: G(a A b U G b)
Behavior: {a} and {b} should always be true, or until {b} always becomes true.
  },
  "G ( N N b )": {
    "expected behavior is {b} should always be true. Such specification omits {b}.": "G(b O N N b)",
    "expected behavior is {b} should be true, but it may be false after it's true.": "G(b O F N b)",
    "expected behavior is {b} should be true, but it can be false after it's true at least one time.": "G(b O X N b)",
    "expected behavior is {b} should be true, and then {b} should always be true.": "G(b A G N b)",
    "expected behavior is {b} should be true, and then {b} should always be true until {b} is false.": "G(b A F N b)"
    Revised Task: G (b)

Behavior: {b} should always be true.
Revised Task: G (N b)

Behavior: {b} should never be true.
Revised Task: G (N N N b)

Behavior: {b} should always be false.
Revised Task: G (N (a O b))

Behavior: Neither {a} nor {b} should ever be true.
Revised Task: G (a U b)

Behavior: Eventually, {b} should be true and remain so; until then, {a} should be true.
Revised Task: E (N N b)

Behavior: Eventually, {b} should be true.
Revised Task: N G (N b)

Behavior: There should be at least one instance where {b} is true.
Revised Task: G (N b U c)

Behavior: Until {c} becomes true, {b} should never be true. Once {c} is true, this condition no longer applies.
Revised Task: X G (N N b)

Behavior: Starting from the next time step, {b} should always be true.
Revised Task: G (N N a U b)

Behavior: Eventually, {b} should be true and remain so; until then, {a} should always be false.
  },
  "X N a U X a": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "a U X a",
    "expected behavior is {a} should always be true, and {a} should be true before the next state.": "X N a U a",
    "expected behavior is {a} should always be true and there is no time limit.": "G(a U X a)",
    "expected behavior is {a} should always be true and the next state should be {a}.": "X N a U N a",
    "expected behavior is {a} should always be true and the next state should be true before some certain time.": "X N a U F(X a)"
    Revised Task: X a U X a

Behavior: The value of {a} in the next timestep should be true until {a} is true in the next timestep again.
Revised Task: X N a U a

Behavior: The negation of {a} in the next timestep should be true until {a} becomes true.
Revised Task: X N a U X N a

Behavior: The negation of {a} in the next timestep should be true until the negation of {a} is true in the next timestep again.
Revised Task: G(X N a U X a)

Behavior: It should always be the case that the negation of {a} in the next timestep is true until {a} is true in the next timestep.
Revised Task: X N a U X E(a)

Behavior: The negation of {a} in the next timestep should be true until eventually {a} becomes true in a future timestep.
Revised Task: X(N a A X a)

Behavior: In the next timestep, both the negation of {a} and {a} in the subsequent timestep should be true.
Revised Task: X N (a U X a)

Behavior: In the next timestep, it should be the negation of the statement that {a} is true until {a} is true in the next timestep.
Revised Task: E(X N a U X a)

Behavior: Eventually, it should be the case that the negation of {a} in the next timestep is true until {a} is true in the next timestep.
Revised Task: X N a U X(O a)

Behavior: The negation of {a} in the next timestep should be true until either {a} or some other condition is true in the next timestep.
Revised Task: X N a O X a

Behavior: Either the negation of {a} in the next timestep or {a} in the next timestep should be true.
  },
  "N N a U N e": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (N e)",
    "expected behavior is {a} and {e} should be true sequentially and don't need to be adjacent.": "N N a U F(N e)",
    "expected behavior is to make {a} and {e} be true simultanously.": "N N (a A e)",
    "expected behavior is {a} should not be true, or {a} should not be true first, and then {e} should be true.": "N N (O a U e)",
    "expected behavior is finally {e} should be true, no matter what the value of {a} is.": "N N (a U e)"
    Revised Task: N a U N e

Behavior: {a} should not be true until {e} is not true.
Revised Task: N N a U e

Behavior: It should not be the case that it should not be the case that {a} is true until {e} is true.
Revised Task: N N a A N e

Behavior: It should not be the case that it should not be the case that {a} is true and it should not be the case that {e} is true.
Revised Task: N N a U N N e

Behavior: It should not be the case that it should not be the case that {a} is true until it should not be the case that it should not be the case that {e} is true.
Revised Task: N N a O N e

Behavior: It should not be the case that it should not be the case that {a} is true or it should not be the case that {e} is true.
Revised Task: N N X a U N e

Behavior: It should not be the case that it should not be the case that in the next timestep {a} is true until {e} is not true.
Revised Task: N N a U N E e

Behavior: It should not be the case that it should not be the case that {a} is true until it should not be the case that {e} eventually becomes true.
Revised Task: N N G a U N e

Behavior: It should not be the case that it should not be the case that {a} is always true until {e} is not true.
Revised Task: N N a U N G e

Behavior: It should not be the case that it should not be the case that {a} is true until it should not be the case that {e} is always true.
Revised Task: N N a U N (b A e)

Behavior: It should not be the case that it should not be the case that {a} is true until it should not be the case that {b} and {e} are both true.
  },
  "X ( N E b )": {
    "expected behavior is {b} should be true. Such specification omits {b}.": "X(b U N E b)",
    "expected behavior is to make {b} be true before {E}.": "X(b A N E b)",
    "expected behavior is to make {b} and {E} be true sequentially and don't need to be adjacent.": "X(b A F(N E b))",
    "expected behavior is {b} should be true, or {E} should not be true first, and then {b} or {E} should be true.": "X(b O N X(E b))",
    "expected behavior is {b} should always be true, or {E} should not be true first, and then {b} should be true.": "G(b U N X(E b))"
    Revised Task: X ( N E (b A a))

Behavior: In the next time step, it is required that eventually both {b} and {a} should be true, but not necessarily simultaneously.
Revised Task: X ( E N b)

Behavior: In the next time step, eventually, {b} should not be true.
Revised Task: X ( N G b)

Behavior: In the next time step, it should always be the case that {b} is not true.
Revised Task: X ( N E (b O a))

Behavior: In the next time step, eventually, either {b} or {a} should be true, or both.
Revised Task: N X E b

Behavior: It is not the case that in the next time step, eventually, {b} should be true.
Revised Task: X ( N E (b U a))

Behavior: In the next time step, eventually, {b} should be true until {a} becomes true.
Revised Task: X ( E b)

Behavior: In the next time step, eventually, {b} should be true.
Revised Task: G X ( N E b)

Behavior: Always in the next time step, it should be the case that eventually {b} is not true.
Revised Task: X ( N U b)

Behavior: In the next time step, {b} should not be true until some condition is met (condition not specified).
Revised Task: X ( N E (b A G a))

Behavior: In the next time step, eventually, {b} should be true and from that point onwards, {a} should always be true.
  },
  "X ( N X b )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U X ( N X b )",
    "expected behavior is to make {b} be true eventually.": "F(X ( N X b ))",
    "expected behavior is {b} should be true infinitely often.": "G(X ( N X b ))",
    "expected behavior is {b} should be true eventually and always be true after a certain time.": "F(G(X ( N X b )))",
    "expected behavior is to make {b} be true eventually and {b} should be true at least once.": "F(X ( N b ))"
    Revised Task: X ( N b )

Behavior: Eventually, {b} must be false in the next timestep.
Revised Task: X ( N X (b A a) )

Behavior: Eventually, both {b} and {a} must be false in the next timestep.
Revised Task: X ( X b )

Behavior: {b} should be true in two timesteps.
Revised Task: X ( N X (b O a) )

Behavior: Eventually, either {b} or {a} must be false in the next timestep.
Revised Task: G ( N X b )

Behavior: Always, {b} should be false in the next timestep.
Revised Task: X ( E ( N X b ) )

Behavior: Eventually, it should be the case that {b} must be false in the next timestep.
Revised Task: N ( X ( N X b ) )

Behavior: It is not the case that {b} will be false in the next timestep.
Revised Task: X ( U (b, N X b) )

Behavior: Eventually, {b} should remain true until it must be false in the next timestep.
Revised Task: E ( X ( N X b ) )

Behavior: Eventually, {b} must be false in the next timestep.
Revised Task: X ( N X (b U a) )

Behavior: Eventually, {b} must remain false until {a} becomes true in the next timestep.





  },
  "N f A e O e": {
    "expected behavior is {f} should be false, and then both {e} should be true. Such specification omits {f}.": "N f A (e A e)",
    "expected behavior is {e} should be false first, and then {e} should be true.": "N f O e A e",
    "expected behavior is {f} should be false first, and then both {e} should be true.": "N f O (e A e)",
    "expected behavior is first {f} and {e} should be false, and then {e} should be true.": "N (f A e) A e",
    "expected behavior is first {f} should be false or {e} should be true, and then both {e} should be true.": "N (f O e) A e"
    Revised Task: N f A (e O e)

Behavior: {f} should be false and {e} or {e} should be true.
Revised Task: N (f A e) O e

Behavior: Either {f} and {e} are both false, or {e} should be true.
Revised Task: N f A (X e)

Behavior: {f} should be false and in the next timestep, {e} should be true.
Revised Task: N (f O e) A e

Behavior: Either {f} is false or {e} is true, and {e} must be true.
Revised Task: N f A E e

Behavior: {f} should be false and eventually, {e} should be true.
Revised Task: N f O (e A e)

Behavior: {f} should be false or both instances of {e} should be true.
Revised Task: G (N f A e)

Behavior: Always, {f} should be false and {e} should be true.
Revised Task: E (N f A e)

Behavior: Eventually, {f} should be false and {e} should be true.
Revised Task: N (f U e) A e

Behavior: {f} should be false until {e} becomes true and {e} should be true.
Revised Task: N f A (G e)

Behavior: {f} should be false and {e} should always be true.





  },
  "N f A e U e": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f A e U e",
    "expected behavior is {e} should be true sequentially and not adjacent.": "N f A(e U F(e))",
    "expected behavior is {e} should be always true.": "N f A G(e)",
    "expected behavior is more than one atomic proposition in {{f}, {e}} should be true.": "N(f O e) U e",
    "expected behavior is {f} or {e} should be true first, and then {e} should be true.": "N f A (e O X(e))"
    Revised Task: N(f A e U e)

Behavior: {f} and {e} should be simultaneously false initially, then {e} must be true continuously.
Revised Task: N f A G(e)

Behavior: {f} must be false initially, and {e} should always be true.
Revised Task: N f U e

Behavior: {f} should be false until {e} becomes true.
Revised Task: N f A E(e)

Behavior: {f} must be false initially, and eventually, {e} should be true.
Revised Task: G(N f A e)

Behavior: {f} must be continuously false and {e} true always.
Revised Task: N f O e U e

Behavior: {f} must be false or {e} true initially, until eventually {e} is true.
Revised Task: N(f A X e)

Behavior: {f} must be false and in the next timestep, {e} should be true.
Revised Task: E(N f A e)

Behavior: Eventually, {f} must be false and {e} true simultaneously.
Revised Task: N f A (e U X e)

Behavior: {f} must be false initially, and {e} should be true until in the next timestep {e} is true again.
Revised Task: N f A (e O G e)

Behavior: {f} must be false initially, and {e} should be true or always be true subsequently.
  },
  "( N a O N a )": {
    "expected behavior is to make {a} be true first. Such specification omits {a}.": "a O N(a)",
    "expected behavior is to make {a} be true and false alternatively.": "(T a O N a)",
    "expected behavior is to make {a} be true for a certain number of times. Such specification omits the number of times {a} should be true.": "(T a O (T a O (T a O N a)))",
    "expected behavior is to make {a} be true for a certain number of times in succession. Such specification omits the in succession part.": "(T a U (T a U (T a U N a)))",
    "expected behavior is to make {a} be true and then false for a certain number of times, and then finally {a} should be true. Such specification omits the number of times {a} should be true and false.": "(T a U (N a U (T a U N a)))"
    Revised Task: (a O N a)
Behavior: Either {a} should be true or {a} should not be true.

Revised Task: (N a O a)
Behavior: Either {a} should not be true or {a} should be true.

Revised Task: (N a A N a)
Behavior: {a} should not be true and should remain false.

Revised Task: (N a A a)
Behavior: A contradiction, where {a} cannot be both true and false at the same time.

Revised Task: (N a)
Behavior: {a} should not be true.

Revised Task: (a O a)
Behavior: {a} should be true.

Revised Task: (N (a O a))
Behavior: It's not the case that {a} should be true.

Revised Task: (N a U a)
Behavior: {a} should not be true until it becomes true.

Revised Task: (a U N a)
Behavior: {a} should be true until it becomes false.

Revised Task: (N a X a)
Behavior: {a} should not be true, but in the next timestep, it should be true.
  },
  "G X a U ( e )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U ( e )",
    "expected behavior is {a} and {e} should be true simultanously.": "G(a A e)",
    "expected behavior is {a} should be true first, and then {e} should be true.": "G(a U e)",
    "expected behavior is {a} and {e} should be true sequentially and don't need to be adjacent.": "G(a A F(e))",
    "expected behavior is {a} should always be true, or {e} should not be true first, and then {a} or {e} should be true.": "F(a O X(e))"
    Revised Task: G X (a U e)

Behavior: {a} should hold true until {e} becomes true, and this pattern should always be true in the next timestep.
Revised Task: G X a U (X e)

Behavior: {a} should hold true until the next timestep after {e} becomes true, and this pattern should always be true in the next timestep.
Revised Task: G X (a O e)

Behavior: Either {a} or {e} should be true, and this pattern should always be true in the next timestep.
Revised Task: G X a A (e)

Behavior: Both {a} and {e} should be true, and this pattern should always be true in the next timestep.
Revised Task: G X a U (N e)

Behavior: {a} should hold true until {e} becomes false, and this pattern should always be true in the next timestep.
Revised Task: G X (a U E(e))

Behavior: {a} should hold true until {e} eventually becomes true, and this pattern should always be true in the next timestep.
Revised Task: G X (N a U e)

Behavior: {a} should be false until {e} becomes true, and this pattern should always be true in the next timestep.
Revised Task: G X (a U G(e))

Behavior: {a} should hold true until {e} always becomes true, and this pattern should always be true in the next timestep.
Revised Task: X a U (e)

Behavior: {a} should hold true until {e} becomes true, starting from the next timestep.
Revised Task: G X a U (b U e)

Behavior: {a} should hold true until either {b} or {e} becomes true, and this pattern should always be true in the next timestep.
  },
  "N e U N d U b": {
    "expected behavior is {e} and {d} should be true simultanously.": "N (e A d) U b",
    "expected behavior is {b} should be true, or {e} and {d} should be true simultanously.": "N e U (N d U b)",
    "expected behavior is {b} should be true first, and then {e} or {d} should be true.": "N (e U d) U b",
    "expected behavior is {e} and {d} should be true sequentially, and don't need to be adjacent.": "N (e A F(d)) U b",
    "expected behavior is {e}, {d} and {b} should be true sequentially, and don't need to be adjacent.": "N (e A F(d A F(b)))"
    Revised Task: N e U N (d A b)
Behavior: The negation of {e} should hold until both {d} and {b} are true.

Revised Task: N e U (N d O b)
Behavior: The negation of {e} should hold until either the negation of {d} or {b} becomes true.

Revised Task: G(N e U b)
Behavior: It should always be the case that the negation of {e} holds until {b} becomes true.

Revised Task: E(N e U b)
Behavior: Eventually, it should be the case that the negation of {e} holds until {b} becomes true.

Revised Task: N e U X(N d U b)
Behavior: The negation of {e} should hold until in the next timestep, the negation of {d} holds until {b} becomes true.

Revised Task: N e O N d U b
Behavior: Either the negation of {e} or the negation of {d} should be true until {b} becomes true.

Revised Task: N e U (N d A X b)
Behavior: The negation of {e} should hold until both the negation of {d} and {b} in the next timestep are true.

Revised Task: N e A N d U b
Behavior: Both the negation of {e} and the negation of {d} should be true until {b} becomes true.

Revised Task: N (e O d) U b
Behavior: The negation of either {e} or {d} should hold until {b} becomes true.

Revised Task: E(N e U N d) U b
Behavior: Eventually, it should be the case that the negation of {e} holds until the negation of {d} becomes true, and this should continue until {b} becomes true.
  },
  "N N e U b O d": {
    "expected behavior is to make {e}, {b} and {d} be true sequentially and don't need to be adjacent.": "N N F(e A F(b A F(d)))",
    "expected behavior is to make {e} then {b} and {d} be true simultanously.": "N N F(e A (b A d))",
    "expected behavior is to make {e}, {b} and {d} finally be true simultanously.": "N N F(e A b A d)",
    "expected behavior is more than one atomic proposition in {{e}, {b}, {d}} should be true.": "N N F(e O b O d)",
    "expected behavior is {e}, {b} and {d} should not be true simultanously.": "N N F((e O b) O d)"
    Revised Task: N e U (b O d)

Behavior: Negate {e} until {b} or {d} becomes true.
Revised Task: N N (e A b O d)

Behavior: Always negate {e} and {b}, or {d} should eventually be true.
Revised Task: N N e U (b A X d)

Behavior: Negate {e} until {b} and {d} in the next timestep are true.
Revised Task: N N e U (b A G d)

Behavior: Negate {e} until {b} and {d} always in the future are true.
Revised Task: N N E(e U b O d)

Behavior: Negate the eventuality of {e} until either {b} or {d} becomes true.
Revised Task: N (e U b) O d

Behavior: Negate {e} until {b} becomes true, or {d} should be true.
Revised Task: N e U (N b O d)

Behavior: Negate {e} until the negation of {b} or {d} is true.
Revised Task: N e U (b O X d)

Behavior: Negate {e} until either {b} becomes true or {d} in the next timestep.
Revised Task: N N e U (b A d)

Behavior: Always negate {e} until both {b} and {d} are true simultaneously.
Revised Task: N N e U X(b O d)

Behavior: Negate {e} until the next timestep where either {b} or {d} is true.
  },
  "N G X f U N e": {
    "expected behavior is {f} should be true first, then {e} should be true. Such specification omits {f}.": "G X f U N e",
    "expected behavior is to make {f} and {e} be true simultanously.": "N G (f A e)",
    "expected behavior is to make {f} and {e} be true sequentially and don't need to be adjacent.": "N G (f U N e)",
    "expected behavior is to make {f}, {e} finally be true simultanously.": "N G (f A e)",
    "expected behavior is more than one atomic proposition in {{f}, {e}} should be true.": "N G (f O e)"
    Revised Task: N G (X f U N e)

Behavior: {f} should be true in the next time step until {e} becomes false, regardless of the current state.
Revised Task: N G X (f U e)

Behavior: Starting from the next time step, {f} should be true until {e} becomes true, and this pattern should always hold.
Revised Task: N G X (f A N e)

Behavior: In the next time step and always thereafter, {f} should be true and {e} should be false.
Revised Task: G X (f U N e)

Behavior: From the next time step onward, {f} should be true until {e} becomes false, and this should always be the case.
Revised Task: N (G X f) U N e

Behavior: {f} should be true in the next time step and always thereafter, or until {e} becomes false.
Revised Task: N G X f U e

Behavior: {f} must be true in the next time step and always thereafter, until {e} becomes true.
Revised Task: N G (f U X N e)

Behavior: {f} should be true until in the next time step {e} becomes false, and this pattern should always hold.
Revised Task: N G (f O N e)

Behavior: Always hold that either {f} is true or {e} is false.
Revised Task: N G X (f U E e)

Behavior: From the next time step onward, {f} should be true until {e} eventually becomes true, and this should always be the case.
Revised Task: N E (X f U N e)

Behavior: Eventually, starting from the next time step, {f} should be true until {e} becomes false.
  },
  "N G X f U d": {
    "expected behavior is {f} and {d} should be true simultanously.": "N G (X f A d)",
    "expected behavior is {f} and {d} should be true sequentially and don't need to be adjacent.": "N G (X f A F(d))",
    "expected behavior is {f} should be true first, or {f} should not be true, and then {f} or {d} should be true.": "N G (X f O X(d))",
    "expected behavior is finally {d} should be true, no matter what the values of {f} are.": "N G (X f U d)",
    "expected behavior is {d} should always be true, or {f} should be true first, and then {d} should be true.": "N G (X f A G(d))"
    Revised Task: G X f U d

Behavior: {f} should be true at the next timestep and remain true until {d} becomes true.
Revised Task: N G (f U d)

Behavior: It is not the case that {f} will always be true until {d} becomes true.
Revised Task: N G X (f A d)

Behavior: It is not the case that in the next timestep, both {f} and {d} will be true.
Revised Task: N G X E(f U d)

Behavior: It is not the case that {f} will be true at some point in the future and remain true until {d} becomes true.
Revised Task: N G (f O d)

Behavior: It is not the case that {f} or {d} will always be true.
Revised Task: N G X f U (E d)

Behavior: It is not the case that {f} will be true in the next timestep and remain true until {d} eventually becomes true.
Revised Task: N (f U d)

Behavior: It is not the case that {f} should be true until {d} becomes true.
Revised Task: N G (X f U X d)

Behavior: It is not the case that in the next timestep, {f} will start being true and remain so until {d} is true in a subsequent timestep.
Revised Task: N G E(f U d)

Behavior: It is not the case that eventually {f} will be true and remain true until {d} becomes true.
Revised Task: N G X (f U G d)

Behavior: It is not the case that {f} will be true in the next timestep and remain true until {d} always becomes true.
  },
  "e O N G d A b": {
    "expected behavior is {e} and {d} should be true simultanously.": "e A d O N G b",
    "expected behavior is {e} and {d} should be true sequentially and don't need to be adjacent.": "e O N G d A F(b)",
    "expected behavior is {e}, {d} and {b} finally be true simultanously.": "e A d A b",
    "expected behavior is more than one atomic proposition in {{e}, {d}, {b}} should be true.": "e O N G (d O b)",
    "expected behavior is {e} shoule be true, or {e} should not be true first, and then {e} or {b} should be true.": "e O N G (d O X(b))"
    Revised Task: e O (N G d) A b
Behavior: Either {e} is true, or {d} is always false. In either case, {b} must also be true.

Revised Task: e O N(G d A b)
Behavior: Either {e} is true, or it's not always the case that both {d} and {b} are true.

Revised Task: E(e O G d A b)
Behavior: Eventually, it should be the case that either {e} is true or {d} is always true and {b} is true.

Revised Task: e O N X d A b
Behavior: Either {e} is true, or {d} is not true in the next timestep, but {b} must be true.

Revised Task: e O N G(E d A b)
Behavior: Either {e} is true, or it is always the case that eventually {d} and {b} are true simultaneously.

Revised Task: e A N G d O b
Behavior: Both {e} is true and it is always the case that {d} is false or {b} is true.

Revised Task: e O N G(X d A b)
Behavior: Either {e} is true, or it is always the case that {d} is true in the next timestep and {b} is true.

Revised Task: e O U G d A b
Behavior: Either {e} is true, or {d} is true until it is always true and {b} is true.

Revised Task: E(e O N G d) A b
Behavior: Eventually, it must be the case that either {e} is true or {d} is always false, and in either case, {b} must be true.

Revised Task: G(e O N d A b)
Behavior: It is always the case that either {e} is true or {d} is false, and {b} must be true.






  },
  "e U N G d A b": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (N G (d A b))",
    "expected behavior is to make {d} and {b} be true simultanously.": "e U (N G (d U b))",
    "expected behavior is to make {d} and {b} be true sequentially and don't need to be adjacent.": "e U (N G (d A F(b)))",
    "expected behavior is to make {e}, {d} and {b} be true sequentially and don't need to be adjacent.": "F(e A F(N G (d A F(b))))",
    "expected behavior is {e}, {d} and {b} should eventually be true simultanously.": "F(e A N G (d A b))",
    "expected behavior is more than one atomic proposition in {{e}, {d}, {b}} should be true.": "F(e O N G (d O b))",
    "expected behavior is {d} should be true, or {d} should not be true first, and then {d} or {b} should be true.": "e U (N G (d O X(b)))",
    "expected behavior is {d} and {b} should be true simultanously, and then {b} should always be true.": "e U (N G (d A G(b)))",
    "expected behavior is finally {b} should be true, no matter what the values of {e} and {d} are.": "e U (N G (d U b))",
    "expected behavior is {b} should always be true, or {e} and {d} be true, but subsequently {b} should be true.": "G(e U (N G (d U b)))"
    Revised Task: E U N (G d A b)

Behavior: The sequence should eventually reach a point where from that point onward, both {d} and {b} are true, the sequence before this point is not concerned.
Revised Task: E U N G (d O b)

Behavior: Eventually, there should be a point from which either {d} or {b} is always true.
Revised Task: E U G (d A b)

Behavior: Eventually, there should be a point from which both {d} and {b} are always true.
Revised Task: E U (N d A X b)

Behavior: Eventually, there should be a point where {d} is true in the next timestep and {b} is true in the timestep after that.
Revised Task: E U (N d O b)

Behavior: Eventually, there should be a point where either {d} is true in the next timestep or {b} is true.
Revised Task: E U N (X d A b)

Behavior: The sequence should eventually reach a point where in the next timestep, both {d} and {b} are true.
Revised Task: E U (N G d O b)

Behavior: Eventually, there should be a point where either {d} is always true from the next timestep onward or {b} is true.
Revised Task: E U (N d A G b)

Behavior: Eventually, there should be a point where {d} is true in the next timestep and from then on, {b} is always true.
Revised Task: N E U G (d A b)

Behavior: It should not be the case that the sequence eventually reaches a point where from that point onward, both {d} and {b} are always true.
Revised Task: G E U N (d A b)

Behavior: It should always be the case that eventually, there will be a point where both {d} and {b} are true in the next timestep.
  },
  "b O b U ( d )": {
    "expected behavior is to make {b} and {d} be true simultanously.": "b A b U ( d )",
    "expected behavior is {b} should not be true first, and then {b} or {d} should be true.": "b O X(b U ( d ))",
    "expected behavior is {d} should always be true, no matter what the value of {b} is.": "F(b U ( d ))",
    "expected behavior is {d} should always be true, or {b} should be true, but subsequently {d} should be true.": "G(b U ( d ))",
    "expected behavior is to make {b} and {d} be true sequentially and don't need to be adjacent.": "F(b A F( d ))"
    Revised Task: b O b U (d)
Behavior: Either {b} should be true or {d} should eventually be true.

Revised Task: b O b A (d)
Behavior: Both {b} and {d} should be true eventually.

Revised Task: b O b U (X(d))
Behavior: Either {b} should be true or {d} should be true in the next timestep.

Revised Task: b O N(b U (d))
Behavior: Either {b} should be true or it should not be true until {d} becomes true.

Revised Task: b O b U (G(d))
Behavior: Either {b} should be true or {d} should always be true from some point onward.

Revised Task: E(b O b U (d))
Behavior: It's required that either {b} should eventually be true or {d} should eventually be true.

Revised Task: G(b O b U (d))
Behavior: It's always the case that either {b} should be true or {d} should eventually be true.

Revised Task: b O b U (E(d))
Behavior: Either {b} should be true or {d} should eventually be true at some point.

Revised Task: b O b U (N(d))
Behavior: Either {b} should be true or {d} should not be true.

Revised Task: b O (b U d)
Behavior: Either {b} should be true or {b} should be true until {d} becomes true.
  },
  "G e U ( N e )": {
    "expected behavior is {e} should always be true. Such specification omits {e}.": "G(e U N(e))",
    "expected behavior is {e} shoule be true, or {e} should not be true first, and then {e} should be true.": "G(e U O(e))",
    "expected behavior is to make {e} first be false and then be true.": "F(e U N(e))",
    "expected behavior is finally {e} should be true, no matter what the value of {e} is before.": "F(e U G(e))",
    "expected behavior is more than one atomic proposition in {{e}} should be true.": "F(e O e)"
    Revised Task: G e U (e)
Behavior: {e} should always be true eventually.

Revised Task: G e U (N (e A e))
Behavior: {e} should always be true eventually, and in the next timestep, {e} must be true simultaneously with itself.

Revised Task: G e U (O e)
Behavior: {e} should always be true eventually, or {e} can be false for some time before becoming true.

Revised Task: G e U (X e)
Behavior: {e} should always be true eventually, and in the next timestep, {e} should be true.

Revised Task: G e U (G e)
Behavior: {e} should always be true eventually, and then {e} should always be true.

Revised Task: G e U (E e)
Behavior: {e} should always be true eventually, and at some point, {e} must become true.

Revised Task: G e U (U e)
Behavior: {e} should always be true eventually, and {e} should remain true until it becomes false.

Revised Task: G (e O e)
Behavior: {e} should always be true, or it can be false at times.

Revised Task: G (e A e)
Behavior: {e} should always be true, and it must be true simultaneously with itself.

Revised Task: N (G e U e)
Behavior: It is not the case that {e} should always be true eventually. Instead, {e} may never become true.
  },
  "( c ) A X N d": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c A X N d",
    "expected behavior is {d} should be false then {c} should be true. Such specification omits {d}.": "c A X (N d)",
    "expected behavior is to make {c} and {d} be true sequentially.": "F(c A X (N d))",
    "expected behavior is to make {c} and {d} be true simultanously.": "F(c A (X N d))",
    "expected behavior is to make {c} and {d} be true sequentially and don't need to be adjacent.": "F(c A X F(N d))"
    Revised Task: (c) A X (N d)

Behavior: The current value of {c} should be true and in the next timestep, {d} should not be true.
Revised Task: (c) O X N d

Behavior: Either the current value of {c} should be true, or in the next timestep, {d} should not be true.
Revised Task: (c) A G N d

Behavior: The current value of {c} should be true and {d} should always not be true.
Revised Task: (c) A X E d

Behavior: The current value of {c} should be true and eventually, {d} should be true.
Revised Task: (c) U X N d

Behavior: Eventually, {c} should be true and, in the next timestep, {d} should not be true.
Revised Task: N(c) A X N d

Behavior: The current value of {c} should not be true and in the next timestep, {d} should not be true.
Revised Task: E(c A X N d)

Behavior: Eventually, {c} should be true and in the next timestep, {d} should not be true.
Revised Task: (c) A X G d

Behavior: The current value of {c} should be true and from the next timestep onward, {d} should always be true.
Revised Task: (c) A X d

Behavior: The current value of {c} should be true and in the next timestep, {d} should be true.
Revised Task: (c) A X N (c A d)

Behavior: The current value of {c} should be true and in the next timestep, neither {c} nor {d} should be true.
  },
  "N N e O N E a": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e O N N E a",
    "expected behavior is {e} should be true and then {a} should be true.": "N N e O E a",
    "expected behavior is {e} and {a} should be true simultanously.": "N N e A E a",
    "expected behavior is {e} and {a} should be true sequentially and don't need to be adjacent.": "N N e O F(E a)",
    "expected behavior is {e}, {a} and {E} finally be true simultanously.": "N N e A E G(a)"
    Revised Task: N N E O N E a
Behavior: Eventually, it will always be the case that not {a} holds true.

Revised Task: N N E O E a
Behavior: Eventually, it will be the case that {a} eventually holds true.

Revised Task: N E O N E a
Behavior: It is not the case that eventually, it always holds true that {a} will eventually be true.

Revised Task: N N E O N a
Behavior: Eventually, it will always be the case that {a} is not true.

Revised Task: N N e O E a
Behavior: It is not the case that, not {a} will always be eventually true.

Revised Task: N N e O N O a
Behavior: It is not the case that, not in the next step, {a} will always be true.

Revised Task: N N e O N A a
Behavior: It is not the case that, not {a} will always and continuously be true.

Revised Task: N E N e O N E a
Behavior: Not eventually, it is not the case that eventually, it will always be that not {a} holds true.

Revised Task: N N e U N E a
Behavior: It is not the case that, until it is not the case that {a} eventually holds true.

Revised Task: N N O E O N E a
Behavior: It is not the case that, either eventually it will always be that not {a} holds true or not.
  },
  "E ( b ) O N c": {
    "expected behavior is {b} should be true and then {c} should not be true. Such specification omits {c}.": "E ( b ) O N(c)",
    "expected behavior is to make {b} and {c} be true simultanously.": "E ( b A c )",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "E ( b A E(c))",
    "expected behavior is {b} and {c} finally be true simultanously.": "F(b A c)",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "F(b O c)",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {c} should be true.": "E ( b O E(c))",
    "expected behavior is {b} and {c} should be true simultanously, and then {c} should always be true.": "F(b A G(c))",
    "expected behavior is finally {c} should be true, no matter what the value of {b} is.": "G(b U c)",
    "expected behavior is {c} should always be true, or {b} be true, but subsequently {c} should be true.": "G(b U E(c))"
    Revised Task: E ( b O N c )
Behavior: Either {b} should eventually be true, or {c} should not be true in the next timestep.

Revised Task: E ( b A N c )
Behavior: {b} should eventually be true and {c} should not be true in the next timestep.

Revised Task: E ( N b ) O N c
Behavior: Either {b} should not eventually be true, or {c} should not be true in the next timestep.

Revised Task: G ( b ) O N c
Behavior: Either {b} should always be true, or {c} should not be true in the next timestep.

Revised Task: E ( X b ) O N c
Behavior: Either {b} should be true in the next timestep eventually, or {c} should not be true in the next timestep.

Revised Task: E ( b ) O G c
Behavior: Either {b} should eventually be true, or {c} should always be true.

Revised Task: E ( b ) O X c
Behavior: Either {b} should eventually be true, or {c} should be true in the next timestep.

Revised Task: N E ( b ) O N c
Behavior: It should not be the case that either {b} eventually becomes true or {c} is not true in the next timestep.

Revised Task: E ( b ) O E c
Behavior: Either {b} should eventually be true, or {c} should eventually be true.

Revised Task: E ( b U c )
Behavior: {b} should be true until {c} becomes true.
  },
  "N f A b A G a": {
    "expected behavior is {f}, {b} and {a} should be true sequentially and don't need to be adjacent.": "N(f A F(b A G(a)))",
    "expected behavior is {f}, {b} and {a} should be true simultanously.": "N(f A b A a)",
    "expected behavior is more than one atomic proposition in {{f}, {b}, {a}} should be true.": "N(f O b O a)",
    "expected behavior is {f} and {b} should be true simultanously, and then {a} should always be true.": "N(f A b A G(a))",
    "expected behavior is finally {a} should be true, no matter what the values of {f} and {b} are.": "N(f U (b U G(a)))"
    Revised Task 1: G(N f A b A a)
Behavior: The negation of {f}, {b}, and {a} should always be true.

Revised Task 2: N f A b A E a
Behavior: The negation of {f} and {b} should be true, and eventually {a} should be true.

Revised Task 3: N f O b A G a
Behavior: Either {f} is false or {b} is true, and {a} should always be true.

Revised Task 4: N f A E(b A G a)
Behavior: The negation of {f} should be true, and eventually {b} and {a} should be always true.

Revised Task 5: N(f A b) A G a
Behavior: The negation of both {f} and {b} should be true, and {a} should always be true.

Revised Task 6: N f A b U G a
Behavior: The negation of {f} and {b} should be true until {a} always becomes true.

Revised Task 7: N E(f A b) A G a
Behavior: Eventually, both {f} and {b} should be false, and {a} should always be true.

Revised Task 8: N f A (b A X a)
Behavior: The negation of {f} and {b} should be true, and in the next timestep, {a} should be true.

Revised Task 9: N f A b A X G a
Behavior: The negation of {f} and {b} should be true, and in the next timestep, {a} should always be true.

Revised Task 10: N f A (b O G a)
Behavior: The negation of {f} should be true, and either {b} is true or {a} should always be true.
  },
  "X ( X e U a )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (X a)",
    "expected behavior is {a} should be true first and then {e} should be true.": "X (a U (X e))",
    "expected behavior is {a} and {e} should be true simultanously.": "X (a A X e)",
    "expected behavior is {a} and {e} should be true sequentially and don't need to be adjacent.": "X (a A F(X e))",
    "expected behavior is to make {a}, {e} finally be true simultanously.": "F(X a A X e)"
    Revised Task: X (X e U (a A b))

Behavior: {e} should be followed by a timestep where both {a} and {b} are true.
Revised Task: X (X (e O a))

Behavior: Either {e} or {a} should be true in the next timestep.
Revised Task: X (X N(e) U a)

Behavior: {e} should not be true until {a} becomes true in a future timestep.
Revised Task: X (X e U N(a))

Behavior: {e} should be true until a timestep where {a} is not true.
Revised Task: X (X e A a)

Behavior: Both {e} and {a} should be true in the next timestep.
Revised Task: X (X E(e) U a)

Behavior: {e} should be true at some point, followed by a timestep where {a} is true.
Revised Task: X (X e U G(a))

Behavior: {e} should be true until {a} becomes true and remains true indefinitely.
Revised Task: G(X e U a)

Behavior: It should always be the case that {e} is followed by a timestep where {a} is true.
Revised Task: X (X e U X(a))

Behavior: {e} should be true until a timestep where {a} will be true in the next timestep.
Revised Task: E(X e U a)

Behavior: It should eventually be the case that {e} is followed by a timestep where {a} is true.
  },
  "N e U E d O c": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U E(d O c)",
    "expected behavior is to make {d} and {c} be true simultanously.": "N e U E(d A c)",
    "expected behavior is to make {d} and {c} be true sequentially and don't need to be adjacent.": "N e U E(d A F(c))",
    "expected behavior is to make {e}, {d} and {c} be true sequentially and don't need to be adjacent.": "N e A F(E(d A F(c)))",
    "expected behavior is {e}, {d} and {c} finally be true simultanously.": "N (e A d A c)",
    "expected behavior is more than one atomic proposition in {{e}, {d}, {c}} should be true.": "N (e O d O c)",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} or {c} should be true.": "N e U E(d O X(c))",
    "expected behavior is {d} and {c} should be true simultanously, and then {c} should always be true.": "N e U E(d A G(c))",
    "expected behavior is finally {c} should be true, no matter what the values of {e} and {d} are.": "N e U (E d U c)",
    "expected behavior is {c} should always be true, or {e} and {d} be true, but subsequently {c} should be true.": "G(N e U (E d U c))"
    Revised Task: N e U E (d A c)
Behavior: {e} should be true until either {d} and {c} are true simultaneously.

Revised Task: N e U E (d O X(c))
Behavior: {e} should be true until either {d} is true or {c} becomes true in the next timestep.

Revised Task: N e U E (G(d) O c)
Behavior: {e} should be true until either {d} is always true or {c} becomes true.

Revised Task: N e U (E d A c)
Behavior: {e} should be true until both {d} eventually becomes true and {c} is true.

Revised Task: N (e A E d) U c
Behavior: {e} and {d} eventually being true should hold until {c} becomes true.

Revised Task: N e U (d O G(c))
Behavior: {e} should be true until {d} becomes true or {c} is always true.

Revised Task: N e A E (d U c)
Behavior: {e} should be false, and eventually {d} should be true until {c} becomes true.

Revised Task: N e U (d A X c)
Behavior: {e} should be true until {d} becomes true and, in the next timestep, {c} should be true.

Revised Task: G(e U E (d O c))
Behavior: It should always be the case that {e} remains true until either {d} or {c} eventually becomes true.

Revised Task: N (e U b) U E (d O c)
Behavior: {e} should be true until {b} becomes true, and this condition should hold until either {d} or {c} eventually becomes true.






  },
  "N e U X d O d": {
    "expected behavior is {e} should be false first. Such specification omits {e}.": "N e U X (d O d)",
    "expected behavior is {d} should be true and false in sequence.": "N e U X (d U d)",
    "expected behavior is {d} should be true, and then {d} should always be true.": "N e U X G(d)",
    "expected behavior is {d} should be false, and then {d} should always be false.": "N e U X F(d)",
    "expected behavior is {e} should be false, and then {d} should be true.": "N e A X (d O d)"
    Revised Task: N e U X (d O d)
Behavior: {e} should be false until the next timestep, when {d} should be true.

Revised Task: N e U (X d O G d)
Behavior: {e} should be false until the next timestep, when {d} should be true, and then {d} should always be true.

Revised Task: N e U (X d A d)
Behavior: {e} should be false until the next timestep, when {d} should be true and remain true.

Revised Task: N e U (E d O d)
Behavior: {e} should be false until either {d} eventually becomes true or is true at that point.

Revised Task: N E(e U X d)
Behavior: It's not required for {e} to be false until the next timestep, where {d} should be true.

Revised Task: G(e U X d O d)
Behavior: {e} should be true always until the next timestep, when {d} should be true.

Revised Task: N e U X (d A d)
Behavior: {e} should be false until the next timestep, when {d} should be true and continue to be true.

Revised Task: N (e A e) U X d
Behavior: {e} should be false and continue to be false until the next timestep, when {d} should be true.

Revised Task: N e U X (d A N d)
Behavior: {e} should be false until the next timestep, when {d} should be true and not false.

Revised Task: E(N e U X d)
Behavior: Eventually, it should be the case that {e} is false until the next timestep, when {d} should be true.






  },
  "( N e A X d )": {
    "expected behavior is {e} should be false first, and then {d} should be true. Such specification omits {e}.": "F(e A X(d))",
    "expected behavior is {e} should be false first, and then {d} should be true simultanously.": "F(e A d)",
    "expected behavior is {e} should be false first, and then {d} should be true sequentially and don't need to be adjacent.": "F(e A F(X(d)))",
    "expected behavior is more than one atomic proposition in {{e}, {d}} should be true.": "F(e O X(d))",
    "expected behavior is {e} should not be true first, and then {e} or {d} should be true.": "F(N(e) A X(d))"
    Revised Task: NeAX(d)
Behavior: The opposite of {e} should be true, and in the next timestep {d} should be true.

Revised Task: G(NeAXd)
Behavior: Always, the opposite of {e} should be true, and in the next timestep {d} should be true.

Revised Task: NeOXd
Behavior: Either the opposite of {e} or {d} in the next timestep should be true.

Revised Task: E(NeAXd)
Behavior: Eventually, the opposite of {e} should be true, and in the next timestep {d} should be true.

Revised Task: NeAGd
Behavior: The opposite of {e} should be true, and {d} should always be true afterwards.

Revised Task: NeAX(Nd)
Behavior: The opposite of {e} should be true, and in the next timestep the opposite of {d} should be true.

Revised Task: N(eAXd)
Behavior: The opposite of the scenario where {e} is true and {d} is true in the next timestep.

Revised Task: E(NeAEd)
Behavior: Eventually, the opposite of {e} should be true, and {d} should eventually be true.

Revised Task: NeAEd
Behavior: The opposite of {e} should be true, and eventually {d} should be true.

Revised Task: G(NeOd)
Behavior: Always, either the opposite of {e} or {d} should be true.
  },
  "E E ( c ) U d": {
    "expected behavior is {c}, {d} should be true simultanously.": "F (c A d)",
    "expected behavior is {d} should be true no matter what the values of {c} are.": "E (c U d)",
    "expected behavior is {c} should always be true, or {c} or {d} should be true.": "F (c O X (d))",
    "expected behavior is more than one atomic proposition in {{c}, {d}} should be true.": "F (c O d)",
    "expected behavior is {c} and {d} should be true sequentially and don't need to be adjacent.": "F(E(c) A F(d))"
    Revised Task: E (c U d)

Behavior: Eventually, {c} should be true until {d} becomes true.
Revised Task: E (E (c) A d)

Behavior: Eventually, both {c} and {d} should be true, but not necessarily at the same time.
Revised Task: G (c U d)

Behavior: Always, {c} should be true until {d} becomes true.
Revised Task: E (c O d)

Behavior: Eventually, either {c} or {d} should be true.
Revised Task: E (c U E(d))

Behavior: Eventually, {c} should be true until {d} becomes true at some point in the future.
Revised Task: E E (c A d)

Behavior: Eventually, {c} and {d} should be true simultaneously.
Revised Task: E (N(c) U d)

Behavior: Eventually, {c} should not be true until {d} becomes true.
Revised Task: E (X(c) U d)

Behavior: Eventually, {c} should be true in the next timestep until {d} becomes true.
Revised Task: E (c U X(d))

Behavior: Eventually, {c} should be true until {d} becomes true in the next timestep.
Revised Task: E (c U G(d))

Behavior: Eventually, {c} should be true until {d} always remains true.
  },
  "b O E N a U d": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (b O E N d)",
    "expected behavior is {b} should not be true. Such specification omits {b}.": "F(a U (b O E N d))",
    "expected behavior is to make {a}, {b} and {d} be true sequentially and don't need to be adjacent.": "F(a A F(b O E N d))",
    "expected behavior is {a}, {b} and {d} finally be true simultanously.": "F(a A b A d)",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {d}} should be true.": "F(a O b O d)"
    Revised Task: E(b O N(a U d))
Behavior: Eventually, either {b} should be true, or it should be the case that not {a} holds until {d} becomes true.

Revised Task: b O E(a U d)
Behavior: Either {b} should be true, or eventually {a} should hold until {d} becomes true.

Revised Task: b O E(G N a U d)
Behavior: Either {b} should be true, or eventually it should always be the case that not {a} until {d} becomes true.

Revised Task: G(b O E N a U d)
Behavior: It should always be the case that either {b} is true, or eventually not {a} holds until {d} becomes true.

Revised Task: b O E N(a A d)
Behavior: Either {b} should be true, or eventually it should not be the case that both {a} and {d} are true.

Revised Task: b O E X(a U d)
Behavior: Either {b} should be true, or eventually, in the next time step, {a} should hold until {d} becomes true.

Revised Task: E(b U (N a O d))
Behavior: Eventually, {b} should hold until either not {a} or {d} becomes true.

Revised Task: b O E(a O d)
Behavior: Either {b} should be true, or eventually, either {a} or {d} should be true.

Revised Task: b O E N(a U X d)
Behavior: Either {b} should be true, or eventually, it should not be the case that {a} holds until in the next time step {d} becomes true.

Revised Task: b O E(a U G d)
Behavior: Either {b} should be true, or eventually, {a} should hold until {d} becomes always true.
  },
  "( G X a A a )": {
    "expected behavior is the next state of {a} should be true. Such specification omits {a}.": "G(X(a) A a)",
    "expected behavior is {a} should always be true or {a} should be true at least once.": "G(a)",
    "expected behavior is {a} should be true in the next two states.": "G(X(X(a)) A a)",
    "expected behavior is {a} should be true in the next three states.": "G(X(X(X(a))) A a)",
    "expected behavior is {a} should be true in the next four states.": "G(X(X(X(X(a)))) A a)"
    Revised Task: G(X(aAa))

Behavior: {a} should be true in the next timestep and should always remain true thereafter.
Revised Task: G(X(aOa))

Behavior: It is always true that in the next timestep, either {a} is true or {a} is true (which effectively means {a} must be true in the next timestep).
Revised Task: 
G(X(a)Aa)

Behavior: {a} must always be true in the next timestep, and {a} must also be true at all times.
Revised Task: 
G(X(a)Oa)

Behavior: It is always true that either {a} is true in the next timestep or {a} is currently true.
Revised Task: 
G(XNa)

Behavior: {a} should always be false in the next timestep.
Revised Task: 
G(Xa)

Behavior: {a} must always be true in the next timestep.
Revised Task: 
G(NXa)

Behavior: It is always true that in the next timestep, {a} is not true.
Revised Task: 
NG(Xa)

Behavior: It is not always the case that {a} is true in the next timestep.
Revised Task: 
G(XE(a))

Behavior: It is always true that in the next timestep, {a} will eventually be true.
Revised Task: 
G(XG(a))

Behavior: It is always true that in the next timestep, {a} will always be true.
  },
  "( G X a O a )": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "G(X a O a)",
    "expected behavior is {a} should hold until some point. Such specification omits {a}.": "G(X(a O a))",
    "expected behavior is {a} should always be true, or {a} should not be true first, and then {a} should be true. Such specification omits {a}.": "G(X(a U a))",
    "expected behavior is more than one atomic proposition in {a} should be true. Such specification omits {a}.": "G(X(a A a))",
    "expected behavior is finally {a} should be true, no matter what the values of {a} are. Such specification omits {a}.": "G(X(a W a))"
    Revised Task: G(X(a) O a)
Behavior: Either {a} is always true, or it becomes true in the next timestep and continues to be true.

Revised Task: G(a O X a)
Behavior: {a} should always be true or become true in the next timestep.

Revised Task: G(X a A a)
Behavior: {a} should be true in the next timestep and also be true in the current timestep, continuously.

Revised Task: X(G a O a)
Behavior: Starting from the next timestep, {a} should always be true or be true in that timestep.

Revised Task: G(X a)
Behavior: {a} should always be true in the next timestep.

Revised Task: G(a O G a)
Behavior: {a} should be always true or it should always be true starting from any timestep.

Revised Task: G(a O E a)
Behavior: {a} should always be true or eventually become true at some point.

Revised Task: G(X a O G a)
Behavior: {a} should be true in the next timestep or always be true continuously.

Revised Task: G(E a O a)
Behavior: {a} should eventually become true or be true continuously.

Revised Task: E(G a O a)
Behavior: Eventually, {a} should always be true or be true at that particular moment.
  },
  "G N e A ( d )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "G(e A (d))",
    "expected behavior is to make {d} be true simultanously.": "G(e U (d))",
    "expected behavior is to make {e} and {d} be true sequentially and don't need to be adjacent.": "G(e A F(d))",
    "expected behavior is to make {e}, {d} finally be true simultanously.": "G(e A G(d))",
    "expected behavior is more than one atomic proposition in {{e}, {d}} should be true.": "G(e O d)",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} should be true.": "G(e U (N d))"
    Revised Task: G N (e A d)
Behavior: Always hold that not both {e} and {d} are true.

Revised Task: G(e A d)
Behavior: Always hold that both {e} and {d} are true.

Revised Task: G N e A G d
Behavior: Always hold that {e} is not true and {d} is always true.

Revised Task: N G (e A d)
Behavior: It is not the case that {e} and {d} are always true.

Revised Task: G N e O d
Behavior: Always hold that either {e} is not true or {d} is true.

Revised Task: G N E(e A d)
Behavior: Always hold that it is not eventually true that both {e} and {d} are true.

Revised Task: G N e U d
Behavior: Always hold that {e} is not true until {d} becomes true.

Revised Task: G(e U d)
Behavior: Always hold that {e} is true until {d} becomes true.

Revised Task: G N (e U d)
Behavior: Always hold that it is not true that {e} is true until {d} becomes true.

Revised Task: G (N e A X d)
Behavior: Always hold that {e} is not true and in the next timestep, {d} is true.
  },
  "N E X N ( a )": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "E X N ( a )",
    "expected behavior is {a} should eventually be true. Such specification omits {a}.": "N E X ( a )",
    "expected behavior is to make {a} be true simultanously.": "N E ( a )",
    "expected behavior is to make {a} be true sequentially and don't need to be adjacent.": "N E F X ( a )",
    "expected behavior is to make {a} finally be true.": "G E X N ( a )"
    Revised Task: N E (X N (a))
Behavior: Eventually, there will be a timestep where it is not true that in the next step, {a} is false.

Revised Task: N E (X (a))
Behavior: Eventually, there will be a timestep where it is not true that {a} is true in the next step.

Revised Task: E X N (a)
Behavior: Eventually, there will be a timestep where {a} is not true in the next step.

Revised Task: E N X (a)
Behavior: Eventually, it will not be true that {a} is true in the next timestep.

Revised Task: N E (N (a))
Behavior: Eventually, there will be a timestep where it is not true that {a} is false.

Revised Task: G N E X N (a)
Behavior: Always, it will not be the case that eventually in the next timestep, {a} is false.

Revised Task: N E X (N (a))
Behavior: Eventually, there will be a timestep where in the next step, it is not true that {a} is false.

Revised Task: N G X N (a)
Behavior: It will never be the case that always in the next timestep, {a} is false.

Revised Task: N E X (a O N(a))
Behavior: Eventually, there will be a timestep where in the next step, either {a} is true or {a} is false.

Revised Task: E X (a U N(a))
Behavior: Eventually, there will be a timestep where {a} is true until it is not true in the next step.






  },
  "N E N N ( a )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "N E N N (a)",
    "expected behavior is {a} should be true finally. Such specification omits {a}.": "N E N N (F(a))",
    "expected behavior is {a} should be true forever. Such specification omits {a}.": "N E N N (G(a))",
    "expected behavior is {a} should be true eventually. Such specification omits {a}.": "N E N N (F(a) U a)",
    "expected behavior is {a} should be true eventually and repeatedly. Such specification omits {a}.": "N E N N (F(a) U G(a))"
    Revised Task: N E (a)
Behavior: {a} should not eventually be true.

Revised Task: E N (a)
Behavior: It should eventually be the case that {a} is not true.

Revised Task: N E N (a A a)
Behavior: It should not be the case that {a} and {a} will not eventually be true.

Revised Task: E N N N (a)
Behavior: It should eventually be the case that {a} will not be false.

Revised Task: N E (a O a)
Behavior: It should not be the case that {a} or {a} will eventually be true.

Revised Task: E (N a A N a)
Behavior: It should eventually be the case that {a} is not true and {a} is not true.

Revised Task: E (a U N a)
Behavior: {a} should be true until it is not true.

Revised Task: N E (X N a)
Behavior: It should not be the case that in the next timestep, {a} will not be true.

Revised Task: E (G N a)
Behavior: It should eventually be the case that {a} is always not true.

Revised Task: G E N N (a)
Behavior: It should always be the case that {a} will not eventually not be true.
  },
  "N N X N e U b": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "N N X e U (N b)",
    "expected behavior is {e} and {b} should be true simultanously.": "N N X (e A b)",
    "expected behavior is to make {e} and {b} be true sequentially and don't need to be adjacent.": "N N X (e A F(b))",
    "expected behavior is to make {e}, {b} and {N} be true sequentially and don't need to be adjacent.": "N N X (e A F(b A F(N)))",
    "expected behavior is {e}, {b} and {N} finally be true simultanously.": "N N X (e A b A N)"
    Revised Task: N N X N (e U b)
Behavior: {e} should be true until {b} becomes true, and this condition must hold from the next timestep, repeatedly.

Revised Task: N N X (e U b)
Behavior: {e} should be true until {b} becomes true, starting from the next timestep.

Revised Task: N N X N e A b
Behavior: {e} and {b} should both be true, starting from the next timestep and this condition should repeat.

Revised Task: N N X N G(e U b)
Behavior: {e} should be true until {b} becomes true, and this condition must always hold, starting from the next timestep.

Revised Task: N X N e U b
Behavior: Starting from the next timestep, {e} should be true until {b} becomes true, and this condition should repeat from the following timestep.

Revised Task: N N X N e O b
Behavior: Either {e} or {b} should be true, starting from the next timestep and this condition should repeat.

Revised Task: N N X U(e, b)
Behavior: {e} should be true until {b} becomes true, starting from the next timestep.

Revised Task: N N X E(e U b)
Behavior: It is expected that eventually, {e} will be true until {b} becomes true, starting from the next timestep.

Revised Task: N N G(e U b)
Behavior: {e} should be true until {b} becomes true, and this condition must always hold.

Revised Task: N N X N E(e U b)
Behavior: Eventually, {e} should be true until {b} becomes true, and this condition must hold repeatedly from the next timestep.
  },
  "N N X G e U f": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (N N X G f)",
    "expected behavior is to make {e} and {f} be true simultanously.": "N N X (G e A f)",
    "expected behavior is to make {e} and {f} be true sequentially and don't need to be adjacent.": "N N X (G e U f)",
    "expected behavior is to make {e}, {f} and other atomic propositions finally be true simultanously.": "N N X (G e A f A ...)",
    "expected behavior is more than one atomic proposition in {{e}, {f}} should be true.": "N N X (G (e O f))"
    Revised Task: N N G e U f
Behavior: The negation of the negation of the proposition that {e} should be true until {f} becomes true, in all future states.

Revised Task: N X G e U f
Behavior: The negation of the proposition that in the next state, {e} should always be true until {f} becomes true.

Revised Task: N N X e U f
Behavior: The negation of the negation of the proposition that in the next state, {e} should be true until {f} becomes true.

Revised Task: N N X G (e A f)
Behavior: The negation of the negation of the proposition that in the next state, {e} and {f} should always be true.

Revised Task: N X G (e O f)
Behavior: The negation of the proposition that in the next state, either {e} or {f} should always be true.

Revised Task: N N G (e A f)
Behavior: The negation of the negation of the proposition that {e} and {f} should always be true.

Revised Task: X G (e U N f)
Behavior: In the next state, it should always be the case that {e} remains true until {f} is false.

Revised Task: N X (e U G f)
Behavior: The negation of the proposition that in the next state, {e} should be true until {f} is always true thereafter.

Revised Task: G N (e U f)
Behavior: Always, the negation of the proposition that {e} should be true until {f} becomes true.

Revised Task: N G N (e U f)
Behavior: The negation of the proposition that always, the negation of the proposition that {e} should be true until {f} becomes true.
  },
  "G N b A c U a": {
    "expected behavior is {a} should be true, or {b} and {c} should be true simultanously.": "G N (b A c U a)",
    "expected behavior is {a}, {b} and {c} should be true sequentially and don't need to be adjacent.": "G N (b A F(c U a))",
    "expected behavior is {a}, {b} and {c} finally be true simultanously.": "G N (b A c A a)",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be true.": "G N (b O c O a)",
    "expected behavior is finally {a} should be true, no matter what the values of {b} and {c} are.": "G N (b U c U a)"
    Revised Task: G N b A (c U a)
    Behavior: {b} should always be false and {c} should be true until {a} becomes true.

    Revised Task: G(b A c U a)
    Behavior: {b} and {c} should be true until {a} becomes true, and this should always be the case.

    Revised Task: G N (b O c U a)
    Behavior: Either {b} or {c} should always be false until {a} becomes true.

    Revised Task: G N b A G(c U a)
    Behavior: {b} should always be false and {c} should always be true until {a} becomes true.

    Revised Task: G N (b U c U a)
    Behavior: Always, either {b} becomes true or, failing that, {c} becomes true until {a} becomes true.

    Revised Task: G N b A c A a
    Behavior: Always, {b} should be false and both {c} and {a} should be true simultaneously.

    Revised Task: G N b A X(c U a)
    Behavior: {b} should always be false and in the next time step, {c} should be true until {a} becomes true.

    Revised Task: G N E(b A c U a)
    Behavior: Always, it should eventually be the case that {b} is false, and {c} is true until {a} becomes true.

    Revised Task: G N b A E(c U a)
    Behavior: {b} should always be false, and eventually, {c} should be true until {a} becomes true.

    Revised Task: N G(b A c U a)
    Behavior: It is not always the case that {b} and {c} are true until {a} becomes true.
  },
  "( N N a O d )": {
    "expected behavior is {a} should be true first and then {d} should be true. Such specification omits {d}.": "( N N a O (d))",
    "expected behavior is to make {a} and {d} be true simultanously.": "( N N (a A d))",
    "expected behavior is to make {a} and {d} be true sequentially and don't need to be adjacent.": "( N N (a A F(d)))",
    "expected behavior is to make {a}, {d} finally be true simultanously.": "( N N (a U d))",
    "expected behavior is more than one atomic proposition in {{a}, {d}} should be true.": "( N N (a O d))",
    "expected behavior is {a} shoule be true, or {a} should not be true first, and then {a} or {d} should be true.": "( N N (a O X(d)))",
    "expected behavior is {a} and {d} should be true simultanously, and then {d} should always be true.": "( N N (a A G(d)))",
    "expected behavior is finally {d} should be true, no matter what the value of {a} is.": "( N N (a U c))",
    "expected behavior is {d} should always be true, or {a} be true, but subsequently {d} should be true.": "G(N N (a U d))"
    Revised Task: (N N a A d)
    Behavior: Both {a} and {d} should not be true.

    Revised Task: (N a O N d)
    Behavior: Either {a} should not be true, or {d} should not be true.

    Revised Task: (N N a U d)
    Behavior: {a} should not be true until {d} is true.

    Revised Task: (N N a O X d)
    Behavior: Either {a} should not be true, or {d} should not be true in the next time step.

    Revised Task: (N E a O d)
    Behavior: Either {a} should eventually not be true, or {d} should be true.

    Revised Task: (N N a O G d)
    Behavior: Either {a} should not be true, or {d} should always be true.

    Revised Task: (a O N d)
    Behavior: Either {a} should be true, or {d} should not be true.

    Revised Task: (E N a O d)
    Behavior: Either {a} should eventually not be true, or {d} should be true.

    Revised Task: (N N a O E d)
    Behavior: Either {a} should not be true, or {d} should eventually be true.

    Revised Task: (N a U N d)
    Behavior: {a} should not be true until {d} is not true.
  },
  "G X N X c U d": {
    "expected behavior is {d} should be true no matter what the values of {c} are.": "G F(c U d)",
    "expected behavior is {c} should be true first, and then {d} should be true.": "G X c U d",
    "expected behavior is either {c} or {d} should be true.": "G X N c O d",
    "expected behavior is {c} should be true first, and then {d} should always be true.": "G X c A G d",
    "expected behavior is {d} should be true no matter what the values of {c} are, and then {c} should always be true.": "G F(c A G d)"
    Revised Task: G X (c U d)
    Behavior: In every timestep, the next step should satisfy that {c} remains true until {d} becomes true.

    Revised Task: G N X c U d
    Behavior: Always, it is not the case that in the next timestep {c} is true, until {d} becomes true.

    Revised Task: G X (N c U d)
    Behavior: Always, the next step should satisfy that {c} is not true until {d} becomes true.

    Revised Task: G X (c A d)
    Behavior: Always, in the next timestep both {c} and {d} should be true.

    Revised Task: E X N X c U d
    Behavior: Eventually, the next step should satisfy that {c} is not true in the subsequent timestep, until {d} becomes true.

    Revised Task: G X N X (c O d)
    Behavior: Always, the next step should satisfy that in the subsequent timestep either {c} or {d} is not true.

    Revised Task: G X X c U d
    Behavior: Always, in the next of the next timestep, {c} should remain true until {d} becomes true.

    Revised Task: G X N X c A d
    Behavior: Always, the next step should satisfy that {c} is not true in the subsequent timestep and {d} should be true.

    Revised Task: G X N X E(c U d)
    Behavior: Always, the next step should satisfy that it is not the case that eventually {c} remains true until {d} becomes true.

    Revised Task: G X N X c U N d
    Behavior: Always, the next step should satisfy that {c} remains true until {d} is not true.
  },
  // "G N N X a U a": {
  //   "expected behavior is {a} should always be true. Such specification omits {a}.": "G a U a",
  //   "expected behavior is {a} should be true at least once. Such specification omits {a}.": "G X a U a",
  //   "expected behavior is {a} should be true at least twice. Such specification omits {a}.": "G N X a U a",
  //   "expected behavior is {a} should be true at least three times. Such specification omits {a}.": "G N N X a U a",
  //   "expected behavior is {a} should be true at least four times. Such specification omits {a}.": "G N N N X a U a"
  // },
  "( N ( N f ) )": {
    "expected behavior is to make {f} be eventually true. Such specification omits {f}.": "N( N(f) )",
    "expected behavior is to make {f} be always true. Such specification omits {f}.": "G(N(f))",
    "expected behavior is to make {f} be true until the next state. Such specification omits {f}.": "X(N(f))",
    "expected behavior is to make {f} at least once be true. Such specification omits {f}.": "F(N(f))",
    "expected behavior is to make {f} eventually be true but don't need to be the next state. Such specification omits {f}.": "N(X(f))"
    Revised Task: N ( f )
    Behavior: {f} should not be true.

    Revised Task: N ( N ( N f ) )
    Behavior: {f} should be true.

    Revised Task: G ( N f )
    Behavior: {f} should never be true.

    Revised Task: E ( N f )
    Behavior: {f} should not be true at least once.

    Revised Task: N ( G f )
    Behavior: {f} should always be true.

    Revised Task: N ( X f )
    Behavior: {f} should not be true in the next timestep.

    Revised Task: N ( E f )
    Behavior: {f} should eventually be true.

    Revised Task: X ( N f )
    Behavior: In the next timestep, {f} should not be true.

    Revised Task: U ( N f )
    Behavior: Until a certain point, {f} should not be true.

    Revised Task: N ( f A N f )
    Behavior: {f} should not be true and should not remain true.
  },
  "( e ) U E N a": {
    "expected behavior is {a} should be true. Such specification omits {a}.": "(e) U (E N a)",
    "expected behavior is to make {e} and {a} be true simultanously.": "(e A a) U E N a",
    "expected behavior is to make {e} and {a} be true sequentially and don't need to be adjacent.": "(e U F(a)) U E N a",
    "expected behavior is {e}, {a} and {E N a} finally be true simultanously.": "(e A a A E N a) U E N a",
    "expected behavior is more than one atomic proposition in {{e}, {a}, {E N a}} should be true.": "(e O a O E N a) U E N a"
    Revised Task: (e) U N a
    Behavior: {e} should be true until {a} becomes true in the next timestep.

    Revised Task: E( e U (N a))
    Behavior: Eventually, {e} should be true until {a} becomes true in the next timestep.

    Revised Task: (e) U E(a)
    Behavior: {e} should be true until {a} eventually becomes true.

    Revised Task: G( e U E a)
    Behavior: {e} should always be true until {a} eventually becomes true.

    Revised Task: E(e U a)
    Behavior: Eventually, {e} should be true until {a} becomes true.

    Revised Task: (e A E a)
    Behavior: {e} and {a} eventually being true simultaneously.

    Revised Task: E(e O a)
    Behavior: Eventually, either {e} or {a} should be true.

    Revised Task: (e) U (N E a)
    Behavior: {e} should be true until {a} becomes true eventually in the next timestep.

    Revised Task: E( e U (a O e))
    Behavior: Eventually, {e} should be true until either {a} or {e} becomes true.

    Revised Task: E(N e U a)
    Behavior: Eventually, {e} being true in the next timestep should be true until {a} becomes true.
  },
  "( b ) A E N f": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A E N f",
    "expected behavior is to make {f} be true eventually.": "(b A E N f) U f",
    "expected behavior is to make {f} be true infinitely often.": "(b A E N f) G f",
    "expected behavior is to make {f} be true only once.": "b A (E N f A (E N X f))",
    "expected behavior is to make {f} be true infinitely often and also true eventually.": "(b A E N f) U (G f)"
    Revised Task: E (b A N f)
    Behavior: Eventually, {b} should be true and in the next timestep, {f} should not be true.

    Revised Task: (b) A G N f
    Behavior: {b} should be true and always in the next timestep, {f} should not be true.

    Revised Task: E (b A G f)
    Behavior: Eventually, {b} should be true and {f} should always be true thereafter.

    Revised Task: E (b O E f)
    Behavior: Eventually, either {b} or {f} should eventually be true.

    Revised Task: (b) A X N f
    Behavior: {b} should be true and in the next timestep, {f} should not be true.

    Revised Task: G (b A N f)
    Behavior: Always, {b} should be true and simultaneously, {f} should not be true.

    Revised Task: (b) A E X f
    Behavior: {b} should be true and eventually, {f} should be true in the next timestep.

    Revised Task: E (b U N f)
    Behavior: Eventually, {b} should be true until {f} is not true.

    Revised Task: (b) U E N f
    Behavior: {b} should be true until it is eventually the case that {f} is not true.

    Revised Task: E (b A U f)
    Behavior: Eventually, {b} should be true and {f} should be true until a certain condition is met.
  },
  "( E G f U d )": {
    "expected behavior is {f} should be true all the time. Such specification omits {f}.": "G(f U (E G d))",
    "expected behavior is {d} should be true until {f} is true. Such specification omits {f}.": "G(f U (E d))",
    "expected behavior is to make {f} and {d} be true simultanously.": "(E G (f A d))",
    "expected behavior is to make {f} and {d} be true sequentially and don't need to be adjacent.": "(E G (f A F(d)))",
    "expected behavior is to make {f}, {d} finally be true simultanously.": "G(f A d)"
    Revised Task: E(G f A d)
    Behavior: Eventually, both {f} should always be true and {d} should be true simultaneously.

Revised Task: E(G f O d)
    Behavior: Eventually, either {f} should always be true or {d} should be true.

Revised Task: G(E f U d)
    Behavior: Always, it should eventually be the case that {f} is true until {d} becomes true.

Revised Task: E(G f U X d)
    Behavior: Eventually, {f} should always be true until {d} is true in the next timestep.

Revised Task: E(G f U N d)
    Behavior: Eventually, {f} should always be true until {d} is not true.

Revised Task: G(f U d)
    Behavior: Always, {f} should be true until {d} becomes true.

Revised Task: E(X f U d)
    Behavior: Eventually, {f} should be true in the next timestep until {d} becomes true.

Revised Task: E(G N f U d)
    Behavior: Eventually, it should always be the case that {f} is not true until {d} becomes true.

Revised Task: E(G f U E d)
    Behavior: Eventually, {f} should always be true until {d} eventually becomes true.

Revised Task: E(f A G d)
    Behavior: Eventually, {f} should be true and {d} should always be true.
  },
  "( E E c ) A f": {
    "expected behavior is {c} should be true only when {f} is true. Such specification omits {f}.": "( E E c ) A F(f)",
    "expected behavior is to make {c} and {f} be true simultanously.": "( E E c ) A f A c",
    "expected behavior is to make {c} and {f} be true sequentially and don't need to be adjacent.": "( E E c ) A F(f A c)",
    "expected behavior is {c} should always be true, or {f} should be true first and then {c} should be true.": "G(c U (f U c))",
    "expected behavior is {c} and {f} should be true simultanously, and then {f} should always be true.": "( E E c ) A F(f A G(c))"
    Revised Task: ( E c ) A f
    Behavior: Eventually, {c} should be true and {f} should be true.

    Revised Task: ( E E (c A f) )
    Behavior: Eventually, it is the case that eventually both {c} and {f} are true.

    Revised Task: ( E N c ) A f
    Behavior: Eventually, {c} should not be true, and {f} should be true.

    Revised Task: ( E E c ) O f
    Behavior: Either eventually, it is the case that {c} is true, or {f} is true.

    Revised Task: G( E E c ) A f
    Behavior: It is always the case that eventually, {c} will be true and {f} should be true.

    Revised Task: ( E E c ) A G f
    Behavior: Eventually, {c} should be true, and {f} should always be true.

    Revised Task: ( E E c ) A X f
    Behavior: Eventually, {c} should be true, and in the next timestep, {f} should be true.

    Revised Task: ( E U c ) A f
    Behavior: {c} should eventually be true and remain true until a certain condition is met, and {f} should be true.

    Revised Task: ( E E c ) A ( E f )
    Behavior: Eventually, {c} should be true, and eventually, {f} should also be true.

    Revised Task: ( E (c O f) )
    Behavior: Eventually, either {c} or {f} should be true.
  },
  "G c A ( G f )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c A (G f)",
    "expected behavior is to make {f} be true.": "G(c A f)",
    "expected behavior is {c} and {f} should be true simultanously.": "G(c A f)",
    "expected behavior is to make {f} be true first, and then {c} should be true.": "F(f A G c)",
    "expected behavior is more than one atomic proposition in {{c}, {f}} should be true.": "F(c A f)",
    "expected behavior is {c} and {f} should be true sequentially and don't need to be adjacent.": "G(F(c A f))",
    "expected behavior is {f} should always be true, or {c} be true, but subsequently {f} should be true.": "G(c U f)"
    Revised Task: G(c A G(f))
    Behavior: Both {c} and {f} should always be true.

Revised Task: G(c A f)
    Behavior: {c} should always be true, and {f} should eventually be true.

Revised Task: G(c O G(f))
    Behavior: Either {c} is always true, or {f} is always true.

Revised Task: G(c U G(f))
    Behavior: {c} should be true until {f} is always true.

Revised Task: G(c A X(f))
    Behavior: {c} should always be true, and in the next timestep, {f} should be true.

Revised Task: G(c A E(f))
    Behavior: {c} should always be true, and {f} should eventually be true.

Revised Task: G(c A (N f))
    Behavior: {c} should always be true, and {f} should never be true.

Revised Task: E(c A G(f))
    Behavior: Eventually, {c} will be true and {f} will always be true from that point on.

Revised Task: G(c A (f A g))
    Behavior: {c} should always be true, and eventually both {f} and {g} should be true.

Revised Task: G(E(c) A G(f))
    Behavior: {c} should eventually be true, and {f} should always be true.
  },
  "N ( a U N c )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U N(c)",
    "expected behavior is {c} should be true first. Such specification omits {c}.": "F(a U N(c))",
    "expected behavior is {a} and {c} should be true simultanously.": "F(a A N(c))",
    "expected behavior is {a} should not be true, and then {c} should be true.": "N(a U c)",
    "expected behavior is more than one atomic proposition in {{a}, {c}} should be true.": "F(a O N(c))"
    Revised Task: N (a U c)
    Behavior: In the next timestep, aa should be true until cc becomes true.

Revised Task: G (a U N c)
    Behavior: Always, aa should be true until cc is not true in the next timestep.

Revised Task: N (a O N c)
    Behavior: In the next timestep, either aa or cc not being true in the next timestep should occur.

Revised Task: E (a U N c)
    Behavior: Eventually, aa should be true until cc is not true in the next timestep.

Revised Task: N (a U X c)
    Behavior: In the next timestep, aa should be true until cc becomes true in the timestep after that.

Revised Task: N (a A N c)
    Behavior: In the next timestep, both aa should be true and cc should not be true.

Revised Task: N (N a U N c)
    Behavior: In the next timestep, aa should not be true until cc is not true in the next timestep.

Revised Task: N (a U G c)
    Behavior: In the next timestep, aa should be true until cc is always true.

Revised Task: N (a U E c)
    Behavior: In the next timestep, aa should be true until cc eventually becomes true.

Revised Task: U (a U N c)
    Behavior: aa should be true until, in the next timestep, aa should be true until cc is not true.
  },
  "( f ) O N N d": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "F(f) O N N d",
    "expected behavior is {d} should be true first. Such specification omits {d}.": "(f) O N N F(d)",
    "expected behavior is {f} and {d} should be true simultanously.": "F(f A d)",
    "expected behavior is {f} and {d} should be true sequentially and don't need to be adjacent.": "F(f A F(N N d))",
    "expected behavior is more than one atomic proposition in {{f}, {d}} should be true.": "F(f O d)"
    Revised Task: (f O N d)
    Behavior: Either {f} should be true or {d} should not be true.

Revised Task: (f O N N N d)
    Behavior: Either {f} should be true or {d} should not be true in the next next timestep.

Revised Task: G(f O N d)
    Behavior: Always either {f} should be true or {d} should not be true.

Revised Task: (f O X d)
    Behavior: Either {f} should be true or {d} should be true in the next timestep.

Revised Task: (f O E d)
    Behavior: Either {f} should be true or {d} should eventually be true.

Revised Task: (f A N d)
    Behavior: {f} and {d} should not be true simultaneously.

Revised Task: (f O U d)
    Behavior: Either {f} should be true or {d} should be true until some condition is met.

Revised Task: E(f O N d)
    Behavior: Eventually, either {f} should be true or {d} should not be true.

Revised Task: (f U N d)
    Behavior: {f} should be true until {d} is not true.

Revised Task: (f O G d)
    Behavior: Either {f} should be true or {d} should always be true.


  },
  "E N b O f U f": {
    "expected behavior is {f} should be true at least once. Such specification omits {f}.": "E N b O (f U f)",
    "expected behavior is {f} should be true at least once, and {b} should be true at least once.": "E N (b O (f U f))",
    "expected behavior is {b} should always be true, or {b} should not be true first, and then {b} or {f} should be true.": "F(E N (b O (f U f)))",
    "expected behavior is finally {f} should be true, no matter what the values of {b} are.": "G(E N (b O (f U f)))",
    "expected behavior is more than one atomic proposition in {{b}, {f}} should be true.": "F(E N b O f)"
    Revised Task: E(N b O f U f)
    Behavior: Eventually, either {b} should not be true or {f} should be true until {f} is true.

Revised Task: E(N b U f)
    Behavior: Eventually, {b} should not be true until {f} is true.

Revised Task: E(N b O G f)
    Behavior: Eventually, either {b} should not be true or {f} should always be true.

Revised Task: G(N b O f U f)
    Behavior: Always, either {b} should not be true or {f} should be true until {f} is true.

Revised Task: E(N (b A f) U f)
    Behavior: Eventually, {b} and {f} should be simultaneously true until {f} is true.

Revised Task: E(b O f U N f)
    Behavior: Eventually, either {b} or {f} should be true until {f} is not true.

Revised Task: E(N b O X(f U f))
    Behavior: Eventually, either {b} should not be true or in the next time step, {f} should be true until {f} is true.

Revised Task: E(N b O f A f)
    Behavior: Eventually, either {b} should not be true or {f} should be simultaneously true with itself.

Revised Task: E(N b O f)
    Behavior: Eventually, either {b} should not be true or {f} should be true.

Revised Task: E(N b O f U G f)
    Behavior: Eventually, either {b} should not be true or {f} should be true until {f} is always true.
  },
  "E e A f U f": {
    "expected behavior is {e} and {f} should be true simultaneously. Such specification omits {f}.": "E e A f A f",
    "expected behavior is {f} should always be true. Such specification omits {f}.": "E e A G(f)",
    "expected behavior is {e} and {f} should be true sequentially and don't need to be adjacent. Such specification omits {f}.": "E e A F(f)",
    "expected behavior is more than one atomic proposition in {{e},{f}} should be true. Such specification omits {f}.": "E e O f",
    "expected behavior is {e} should be true first, and then {e} or {f} should be true. Such specification omits {f}.": "E e A (f U f)"
    Revised Task: E(e A f U f)
    Behavior: {e} and {f} should be true until {f} is true, and eventually this condition should be met.

    Revised Task: E(e O f U f)
    Behavior: Either {e} or {f} should be true until {f} is true, and eventually this condition should be met.

    Revised Task: E(e U (f A X f))
    Behavior: {e} should be true until {f} becomes true, and once {f} becomes true, in the next timestep {f} should be true again.

    Revised Task: G(e A f U f)
    Behavior: It should always be the case that {e} and {f} are true until {f} is true.

    Revised Task: E(e U (N f U f))
    Behavior: {e} should be true until {f} is not true, and eventually, it should be the case that {f} becomes true.

    Revised Task: E(e U (f O E f))
    Behavior: {e} should be true until either {f} is true or eventually {f} becomes true.

    Revised Task: E(X e U f)
    Behavior: In the next timestep, {e} should be true until {f} is true, and eventually, this condition should be met.

    Revised Task: E(e U (f A G f))
    Behavior: {e} should be true until {f} becomes true and from then on {f} should always be true.

    Revised Task: E(e A E(f U f))
    Behavior: {e} should be true and eventually it should be the case that {f} is true until {f} becomes true.

    Revised Task: E(e U (f U X f))
    Behavior: {e} should be true until {f} becomes true, and once {f} is true, {f} should be true again in the next timestep.
  },
  "( N N a A N c )": {
    "expected behavior is {a} and {c} should be true simultanously.": "(N(a A c))",
    "expected behavior is {c} should always be true, and then {a} or {c} should be true.": "(NNa A NXc)",
    "expected behavior is {a} and {c} should be true sequentially and don't need to be adjacent.": "(NNa A FNc)",
    "expected behavior is {a} and {c} finally be true simultanously.": "(N(a A Fc))",
    "expected behavior is more than one atomic proposition in {{a}, {c}} should be true.": "(N(a O c))"
    Revised Task: (N a A N c)
    Behavior: Either {a} is not true or {c} is not true.

    Revised Task: (N N a A c)
    Behavior: Both {a} and {c} should be true.

    Revised Task: (N N a O N c)
    Behavior: Either {a} should not be true or {c} should not be true.

    Revised Task: (N N a U N c)
    Behavior: {a} should be false until {c} is false.

    Revised Task: (N N a A G c)
    Behavior: {a} should not be true and {c} should always be true.

    Revised Task: (N E a A N c)
    Behavior: Either {a} should eventually be true or {c} should not be true.

    Revised Task: (N N a X N c)
    Behavior: {a} should not be true and in the next timestep, {c} should not be true.

    Revised Task: (N N a A E c)
    Behavior: {a} should not be true and {c} should eventually be true.

    Revised Task: (E N a A N c)
    Behavior: Eventually, {a} should not be true and {c} should not be true.

    Revised Task: (G N a A N c)
    Behavior: Always, either {a} should not be true or {c} should not be true.
  },
  "( X N e A N b )": {
    "expected behavior is {e} should be true first, and then {b} should be true. Such specification omits {e}.": "e A (X N b)",
    "expected behavior is {e} and {b} should be true simultanously.": "( X N (e A b) )",
    "expected behavior is to make {e} and {b} be true sequentially and don't need to be adjacent.": "( X N e A F(N b) )",
    "expected behavior is to make {e}, {b} be true sequentially and don't need to be adjacent.": "F(X N e A F(N b))",
    "expected behavior is more than one atomic proposition in {{e}, {b}} should be true.": "F(X N e O N b)"
    Revised Task: X(N e O N b)
    Behavior: In the next time step, either {e} should not be true or {b} should not be true.

    Revised Task: X(N e A G b)
    Behavior: In the next time step, {e} should not be true and from that point on {b} should always be true.

    Revised Task: G(X N e A N b)
    Behavior: It should always be the case that in the next time step, {e} is not true and {b} is not true.

    Revised Task: X(N e A E b)
    Behavior: In the next time step, {e} should not be true and eventually, {b} should be true.

    Revised Task: X(N e U N b)
    Behavior: In the next time step, {e} should not be true until {b} is not true.

    Revised Task: E(X N e A N b)
    Behavior: Eventually, it will be the case that in the next time step, {e} is not true and {b} is not true.

    Revised Task: X(N e A b)
    Behavior: In the next time step, {e} should not be true and {b} should be true.

    Revised Task: X(e A N b)
    Behavior: In the next time step, {e} should be true and {b} should not be true.

    Revised Task: X(N e O b)
    Behavior: In the next time step, either {e} should not be true or {b} should be true.

    Revised Task: G(X N e O N b)
    Behavior: It should always be the case that in the next time step, either {e} is not true or {b} is not true.
  },
  "E E N e U ( a )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (a)",
    "expected behavior is to make {a} be true eventually.": "F(e U (a))",
    "expected behavior is to make {a} be true infinitely often.": "G(e U (a))",
    "expected behavior is to make {a} be true eventually and infinitely often.": "F(G(e U (a)))",
    "expected behavior is to make {a} be true eventually and don't need to be adjacent.": "E E N F(e U (a))"
    Revised Task: E E N e U (a A b)
    Behavior: The negation of {e} should be true until {a} and {b} are true simultaneously.

Revised Task: E E N (e O a)
    Behavior: Eventually, it should be the case that either {e} is not true or {a} is true.

Revised Task: E E (e U a)
    Behavior: Eventually, {e} should be true until {a} becomes true.

Revised Task: E G N e U a
    Behavior: It should always be the case that the negation of {e} is true until {a} becomes true.

Revised Task: E E N X(e U a)
    Behavior: In the next time step, it should be the case that the negation of {e} remains true until {a} becomes true.

Revised Task: E E N e U X(a)
    Behavior: The negation of {e} should be true until {a} becomes true in the next time step.

Revised Task: E E N e A (a U b)
    Behavior: The negation of {e} and the condition of {a} being true until {b} becomes true should both eventually occur.

Revised Task: E E N e U G(a)
    Behavior: Eventually, the negation of {e} should be true until {a} always becomes true.

Revised Task: E E N e U (a O b)
    Behavior: The negation of {e} should be true until either {a} or {b} becomes true.

Revised Task: E E N e U E(a)
    Behavior: The negation of {e} should be true until {a} eventually becomes true.
  },
  // "E N N a U ( a )": {
  //   "expected behavior is {a} should be true. Such specification omits {a}.": "a U ( a )",
  //   "expected behavior is {a} should be true first and then {a} should be true again.": "E N a U ( a )",
  //   "expected behavior is {a} should be true twice in a row.": "E N N N a U ( a )",
  //   "expected behavior is {a} should be true twice in a row and then {a} should be true once more.": "E N N N N a U ( a )",
  //   "expected behavior is {a} should be true twice in a row and then {a} should always be true.": "G(E N N N a U ( a ))"
  // },
  "G f U N N b A e": {
    "expected behavior is {f} should be true first, and then {b} and {e} should be true simultanously. Such specification omits {f}.": "G f U (Nb A e)",
    "expected behavior is {f} should be true first, and then {b} or {e} should be true. Such specification omits {f}.": "G f U (N b O e)",
    "expected behavior is {b} and {e} should be true simultanously. Such specification omits {b}.": "G f U (N N b A e)",
    "expected behavior is {f}, {b} and {e} should be true sequentially and don't need to be adjacent. Such specification omits {f}.": "G f A N N (b A e)",
    "expected behavior is {f}, {b} and {e} should be true simultanously. Such specification omits {f}.": "G f A N N (b O e)"
    Revised Task: G f U (N b A e)
    Behavior: {f} should be true until {b} is not true and {e} is true.

Revised Task: G f U (N N b O e)
    Behavior: {f} should be true until either {b} is not not true (i.e., true) or {e} is true.

Revised Task: G f U (b A X e)
    Behavior: {f} should be true until both {b} and {e} in the next timestep are true.

Revised Task: G (f A N b) U e
    Behavior: Both {f} and not {b} should always be true until {e} becomes true.

Revised Task: G f U (N b A G e)
    Behavior: {f} should be true until {b} is not true and afterwards, {e} should always be true.

Revised Task: E(G f U N b) A e
    Behavior: Eventually, it should always be the case that {f} is true until {b} is not true, and {e} should be true.

Revised Task: G f O (N b A e)
    Behavior: {f} should always be true or {b} should not be true and {e} should be true.

Revised Task: G (f U b) A N e
    Behavior: {f} should always be true until {b} is true, and {e} should not be true.

Revised Task: G f U (N b A E e)
    Behavior: {f} should be true until {b} is not true and eventually, {e} should be true.

Revised Task: G (f U b) U e
    Behavior: {f} should always be true until {b} is true, and subsequently, {e} should be true.


  },
  "( N e ) U N X b": {
    "expected behavior is {e} should always be true. Such specification omits {e}.": "(G e) U N X b",
    "expected behavior is {b} should be true sequentially and don't need to be adjacent.": "(N e) U N X F(b)",
    "expected behavior is {e} and {b} should be true simultanously.": "F((N e) A N X b)",
    "expected behavior is {e} and {b} should be true sequentially and don't need to be adjacent.": "F((N e) A N X F(b))",
    "expected behavior is more than one atomic proposition in {{e}, {b}} should be true.": "F(N e O N X b)"
    Revised Task: ( N e ) U X b
    Behavior: The negation of {e} should hold true until the next timestep when {b} becomes true.

    Revised Task: G( N e ) U N X b
    Behavior: The negation of {e} should always be true until it's followed by {b} in the next timestep.

    Revised Task: ( N e ) U N G b
    Behavior: The negation of {e} should hold true until {b} becomes true and then remains true indefinitely.

    Revised Task: ( N e ) U (N b)
    Behavior: The negation of {e} should be true until the negation of {b} becomes true.

    Revised Task: E( N e ) U N X b
    Behavior: Eventually, the negation of {e} should be true, and this state should hold until the next timestep when {b} becomes true.

    Revised Task: ( N e ) U (b A N X e)
    Behavior: The negation of {e} should hold true until {b} becomes true, at which point {e} should not be true in the next timestep.

    Revised Task: ( N e ) A N X b
    Behavior: The negation of {e} and in the next timestep {b} should both be true.

    Revised Task: ( N e ) U N X (b O e)
    Behavior: The negation of {e} should hold true until the next timestep, where either {b} or {e} should be true.

    Revised Task: ( N e ) U N E b
    Behavior: The negation of {e} should be true until {b} eventually becomes true.

    Revised Task: E( N e ) U N X (b A e)
    Behavior: Eventually, the negation of {e} should be true and should hold until the next timestep when both {b} and {e} are true.
  },
  "( d ) O X b U d": {
    "expected behavior is to make {d} and {b} be true simultanously.": "(d A b) U d",
    "expected behavior is to make {d} and {b} be true sequentially and don't need to be adjacent.": "(d A F(b)) U d",
    "expected behavior is to make {d} and {b} be true sequentially and only one of them should be true.": "(d O F(b)) U d",
    "expected behavior is to make {b} and {d} be true simultanously, and then {d} should always be true.": "(d A G(b)) U d",
    "expected behavior is finally {d} should be true, no matter what the value of {b} is.": "F(d U b)"
    Revised Task: (d) O X (b U d)
    Behavior: Either {d} is true, or in the next timestep, {b} should be true until {d} becomes true.

    Revised Task: (d) O X (b A d)
    Behavior: Either {d} is true, or in the next timestep, both {b} and {d} should be true simultaneously.

    Revised Task: E(d) O X b U d
    Behavior: Either eventually {d} becomes true, or in the next timestep, {b} should be true until {d} becomes true.

    Revised Task: (d) O X b A d
    Behavior: Either {d} is true, or in the next timestep, {b} and {d} must both be true.

    Revised Task: G(d) O X b U d
    Behavior: Either {d} should always be true, or in the next timestep, {b} should be true until {d} becomes true.

    Revised Task: (d) O X E(b U d)
    Behavior: Either {d} is true, or in the next timestep, it must eventually be the case that {b} is true until {d} becomes true.

    Revised Task: (d) O X b U E(d)
    Behavior: Either {d} is true, or in the next timestep, {b} should be true until it is eventually the case that {d} becomes true.

    Revised Task: (d) O X G(b U d)
    Behavior: Either {d} is true, or in the next timestep, it should always be the case that {b} is true until {d} becomes true.

    Revised Task: (d) O N X b U d
    Behavior: Either {d} is true, or in the next timestep, the negation of the condition where {b} should be true until {d} becomes true.

    Revised Task: (d) O X (b U N d)
    Behavior: Either {d} is true, or in the next timestep, {b} should be true until the negation of {d} becomes true.
  },
  "( a ) U X b U d": {
    "expected behavior is {a} should be true first, and then {b} should be true after {a}. Such specification omits {a}.": "a U X (b U d)",
    "expected behavior is {b} should be true first, and then {a} should be true after {b}. Such specification omits {b}.": "(a U b) U X d",
    "expected behavior is to make {a} and {b} be true simultanously.": "(a A b) U X d",
    "expected behavior is to make {a}, {b} and {d} be true sequentially and don't need to be adjacent.": "F(a A F(b A F(d)))",
    "expected behavior is {a}, {b} and {d} finally be true simultanously.": "F(a A b A d)"
    Revised Task: (a U X (b U d))
    Behavior: {a} should be true until, in the next timestep, {b} or {d} becomes true.

Revised Task: G(a U (X b U d))
    Behavior: Always, {a} should be true until either the next timestep of {b} or {d} becomes true.

Revised Task: (a A X (b U d))
    Behavior: {a} should be true and, in the next timestep, it should remain true until {b} or {d} becomes true.

Revised Task: (a U X b) A d
    Behavior: {a} should be true until {b} becomes true in the next timestep, and {d} must be true.

Revised Task: E(a U (X b A d))
    Behavior: Eventually, {a} should be true until {b} in the next timestep and {d} are true simultaneously.

Revised Task: (N a) U (X b U d)
    Behavior: {a} should not be true until {b} in the next timestep or {d} becomes true.

Revised Task: (a U b) O X d
    Behavior: Either {a} should be true until {b} becomes true, or {d} should be true in the next timestep.

Revised Task: E(a U X (N b U d))
    Behavior: Eventually, {a} should be true until {b} is not true in the next timestep or until {d} becomes true.

Revised Task: (a U X b) O G d
    Behavior: {a} should be true until {b} becomes true in the next timestep, or {d} should always be true.

Revised Task: E(a U (b U X d))
    Behavior: Eventually, {a} should be true until {b} becomes true and subsequently {d} becomes true in the next timestep.
  },
  "( c U N c ) O f": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f O ( c U N c )",
    "expected behavior is to make {c} be false before {f} is true.": "f O ( N c U c )",
    "expected behavior is {c} should be false eventually.": "(c U N c) A f",
    "expected behavior is {f} should be true eventually, and {c} should always be false.": "G(f A (c U N c))",
    "expected behavior is {c} should be false, or {f} should be true, and then {c} should be false.": "(c U (f O N c))"
    Revised Task: (c U N(c)) A f
    Behavior: {c} should be true until {c} is true in the next timestep, and {f} should also be true.

    Revised Task: (c O N(c)) O f
    Behavior: Either {c} or {c} in the next timestep should be true, or {f} should be true.

    Revised Task: (c U N(c)) O E(f)
    Behavior: {c} should be true until {c} is true in the next timestep, or eventually, {f} should be true.

    Revised Task: E(c U N(c))
    Behavior: Eventually, {c} should be true until {c} is true in the next timestep.

    Revised Task: (c U N(c)) U f
    Behavior: {c} should be true until {c} is true in the next timestep, until {f} becomes true.

    Revised Task: G(c U N(c)) O f
    Behavior: It should always be the case that {c} is true until {c} is true in the next timestep, or {f} should be true.

    Revised Task: (c U X(c)) O f
    Behavior: {c} should be true until {c} is true in the subsequent timestep, or {f} should be true.

    Revised Task: (c U N(f)) O f
    Behavior: {c} should be true until {f} is true in the next timestep, or {f} should be true.

    Revised Task: (c U N(c)) A G(f)
    Behavior: {c} should be true until {c} is true in the next timestep, and {f} should always be true.

    Revised Task: (c U N(c)) O N(f)
    Behavior: {c} should be true until {c} is true in the next timestep, or {f} should not be true.
  },
  "( d A E X G d )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d A E X (G d)",
    "expected behavior is to make {d} be true until {d}'s next occurrence.": "( d A E X F d )",
    "expected behavior is to make {d} be true until {d} be false.": "( d A E X (F d) )",
    "expected behavior is to make {d} be true until {d}'s next occurrence and then {d} should always be true.": "( d A E X G(d) )",
    "expected behavior is more than one atomic proposition in {{d}} should be true.": "( d O E X G d )"
    Revised Task: (d A X G d)
    Behavior: {d} must be true and, in the next timestep, {d} must always be true.

    Revised Task: (d A E G d)
    Behavior: {d} must be true and, eventually, {d} must always be true.

    Revised Task: (d A E X d)
    Behavior: {d} must be true and, eventually, in the next timestep, {d} must be true.

    Revised Task: (d O E X G d)
    Behavior: Either {d} is true or, eventually, in the next timestep, {d} must always be true.

    Revised Task: (d U E X G d)
    Behavior: {d} should be true until it's true that, eventually, in the next timestep, {d} must always be true.

    Revised Task: (d A G E X d)
    Behavior: {d} must be true and, always, eventually, in the next timestep, {d} must be true.

    Revised Task: (d A N E X G d)
    Behavior: {d} must be true and, not eventually, in the next timestep, {d} must always be true.

    Revised Task: (d A E X N G d)
    Behavior: {d} must be true and, eventually, in the next timestep, it must not be always true that {d}.

    Revised Task: (N d A E X G d)
    Behavior: {d} must not be true and, eventually, in the next timestep, {d} must always be true.

    Revised Task: (d A E X G N d)
    Behavior: {d} must be true and, eventually, in the next timestep, it must always be true that {d} is not true.
  },
  "( d U E N G a )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U (E N G (a))",
    "expected behavior is {a} should be true until {d} is true.": "(d U E (N G (a)))",
    "expected behavior is {a} should be true until {d} is false.": "(d U E (N F(a)))",
    "expected behavior is {a} should be true while {d} is false.": "G(d U (E N (a)))",
    "expected behavior is more than one atomic proposition in {{d}, {a}} should be true.": "(d O E N G a)"
    Revised Task: (d U E N a)

    Behavior: Eventually, in the next timestep, {a} should be true, with {d} being true until this happens.

Revised Task: (d U E G a)

    Behavior: Eventually, {a} should always be true, with {d} being true until this occurs.

Revised Task: (d U N G a)

    Behavior: {d} should be true until, in the next timestep, {a} starts to always be true.

Revised Task: E(d U N G a)

    Behavior: Eventually, {d} should be true until, in the next timestep, {a} always becomes true.

Revised Task: G(d U E N a)

    Behavior: Always, {d} should be true until, eventually, in the next timestep, {a} becomes true.

Revised Task: (d O E N G a)

    Behavior: Either {d} is true, or eventually, in the next timestep, {a} should always be true.

Revised Task: (d U E N (a O d))

    Behavior: Eventually, in the next timestep, either {a} or {d} should be true, with {d} being true until this happens.

Revised Task: (d U (E a A G d))

    Behavior: Eventually, {a} should be true and {d} should always be true, with {d} being true until this condition is met.

Revised Task: (d U (E N a A d))

    Behavior: Eventually, in the next timestep, {a} should be true and {d} should be true simultaneously, with {d} being true until this occurs.

Revised Task: (d A E N G a)

    Behavior: {d} should be true and eventually, in the next timestep, {a} should always be true.
  },
  "d A N b U ( c )": {
    "expected behavior is to make {d} and {b} be true sequentially and don't need to be adjacent.": "F(d A F(b U (c)))",
    "expected behavior is {d}, {b} and {c} should be true sequentially and don't need to be adjacent.": "F(d A F(b A F(c)))",
    "expected behavior is {d}, {b} and {c} finally be true simultanously.": "F(d A b A c)",
    "expected behavior is more than one atomic proposition in {{d}, {b}, {c}} should be true.": "F(d O b O c)",
    "expected behavior is {d} shoule be true, or {b} should not be true first, and then {b} or {c} should be true.": "F(d U (N b O X(c)))"
    Revised Task: d A N b U (c)
    Behavior: {d} and not {b} should be true until {c} becomes true.

Revised Task: d A N b U (X c)
    Behavior: {d} and not {b} should be true until {c} is true in the next timestep.

Revised Task: d A b U (c)
    Behavior: {d} and {b} should be true until {c} becomes true.

Revised Task: E(d A N b U c)
    Behavior: Eventually, {d} and not {b} should be true simultaneously until {c} becomes true.

Revised Task: G(d A N b U c)
    Behavior: Always, {d} and not {b} should be true until {c} becomes true.

Revised Task: d A N b U (G c)
    Behavior: {d} and not {b} should be true until {c} always becomes true.

Revised Task: d O N b U (c)
    Behavior: Either {d} or not {b} should be true until {c} becomes true.

Revised Task: d A N (b U c)
    Behavior: {d} should be true and not {b} until {c} becomes true.

Revised Task: d A (N b U c)
    Behavior: {d} should be true and not {b} should be true until {c} becomes true.

Revised Task: E(d A N b) U c
    Behavior: Eventually, {d} and not {b} should be true until {c} becomes true.
  },
  "( X d O b U c )": {
    "expected behavior is {b} and {c} should be true simultanously.": "(X d A (b A c))",
    "expected behavior is {d} should be true first, and then {b} or {c} should be true.": "(d U ( b O X (c)))",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "(X d U (b A F(c)))",
    "expected behavior is {d}, {b} and {c} finally be true simultanously.": "F(d A b A c)",
    "expected behavior is more than one atomic proposition in {{d}, {b}, {c}} should be true.": "F(d O b O c)"
    Revised Task: G(X d O b U c)
    Behavior: The proposition "d next, or b until c" should always hold true.

Revised Task: (X d O b U E(c))
    Behavior: Either "d" in the next step or "b" until "c" eventually becomes true.

Revised Task: (X d A b U c)
    Behavior: "d" must be true in the next step and "b" until "c" becomes true.

Revised Task: (X N(d) O b U c)
    Behavior: "d" should not be true in the next step, or "b" should be true until "c" becomes true.

Revised Task: (X d O b U N(c))
    Behavior: "d" in the next step or "b" until "c" is not true.

Revised Task: (X d O b A c)
    Behavior: "d" in the next step or "b" and "c" should be true simultaneously.

Revised Task: (X d O G(b U c))
    Behavior: "d" in the next step or "b" until "c" should always hold true.

Revised Task: (X d O b U X(c))
    Behavior: "d" in the next step or "b" until "c" in the next step.

Revised Task: E(X d O b U c)
    Behavior: Eventually, "d" in the next step or "b" until "c" must become true.

Revised Task: (X d O U(b, c))
    Behavior: "d" in the next step, or "b" should be true until "c" becomes true.
  },
  "X ( d ) U X N f": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U X (N f)",
    "expected behavior is {d} and {f} should be true simultanously.": "X (d A f)",
    "expected behavior is to make {d} and {f} be true sequentially and don't need to be adjacent.": "F(d U (X N f))",
    "expected behavior is to make {d}, {f} finally be true simultanously.": "F(d A X N f)",
    "expected behavior is more than one atomic proposition in {{d}, {f}} should be true.": "F(d O X N f)"
    Revised Task: X ( d U X N f )
    Behavior: Eventually, {d} should be true until the next timestep when {f} is not true.

    Revised Task: X ( d A X N f )
    Behavior: In the next timestep, {d} should be true and in the following timestep, {f} should not be true.

    Revised Task: X ( d ) U (X f)
    Behavior: Eventually, in some future timestep, {d} should be true or, alternatively, {f} should be true in the next timestep.

    Revised Task: G ( d ) U X N f
    Behavior: {d} should always be true until the next timestep when {f} is not true.

    Revised Task: X ( d O X N f )
    Behavior: In the next timestep, either {d} should be true or in the following timestep {f} should not be true.

    Revised Task: X ( E d ) U X N f
    Behavior: Eventually, {d} should be true at some point in the future, and this condition should hold until in the next timestep {f} is not true.

    Revised Task: X ( d ) U G X N f
    Behavior: Eventually, {d} should be true, and from then on, in every subsequent timestep, {f} should not be true.

    Revised Task: X ( N d ) U X N f
    Behavior: Eventually, {d} should not be true, and this condition should hold until the next timestep when {f} is not true.

    Revised Task: X ( d U N f )
    Behavior: In the next timestep, {d} should be true until {f} is not true.

    Revised Task: X ( d ) U X ( N d A N f )
    Behavior: Eventually, {d} should be true, and subsequently, there should be a timestep where neither {d} nor {f} is true.


  },
  "G ( d ) U X N f": {
    "expected behavior is {f} should be true at the next state. Such specification omits {f}.": "G (d) U (X (N f))",
    "expected behavior is {d} and {f} should be true at the same time.": "G (d A f)",
    "expected behavior is {d} and {f} should be true sequentially and don't need to be adjacent.": "G(d A F(N f))",
    "expected behavior is {d}, {f} and some other atomic propositions should be true simultanously.": "G(d A f O g)",
    "expected behavior is {d} should be true finally, and {f} should be true at some states.": "F(G (d) U (X (N f)))"
    Revised Task: G( d U X N f)
    Behavior: {d} should be true always until {f} is not true in the next timestep.

Revised Task: G( d U X(f))
    Behavior: {d} should be true always until {f} is true in the next timestep.

Revised Task: G( d ) U N f
    Behavior: {d} should always be true until {f} is not true.

Revised Task: G( d ) A X N f
    Behavior: {d} should always be true and in the next timestep, {f} should not be true.

Revised Task: G( d ) U X(f A N f)
    Behavior: {d} should always be true until the next timestep when {f} and not {f} (which is a contradiction and thus never true).

Revised Task: E( d ) U X N f
    Behavior: {d} should eventually be true until {f} is not true in the next timestep.

Revised Task: G( d O X N f)
    Behavior: Either {d} is always true or {f} is not true in the next timestep.

Revised Task: G( N d ) U X N f
    Behavior: {d} should not always be true until {f} is not true in the next timestep.

Revised Task: G( d ) U G N f
    Behavior: {d} should always be true until {f} is always not true.

Revised Task: G( d ) U X E f
    Behavior: {d} should always be true until {f} eventually becomes true in a future timestep.


  },
  "N G ( a O N d )": {
    "expected behavior is {a} should be true first, and then {d} should eventually be true. Such specification omits {a}.": "G ( a O N d )",
    "expected behavior is {a} should be true first, and then {d} should eventually be false. Such specification omits {a}.": "G ( a O N N d )",
    "expected behavior is {a} should be true first, and then {d} should always be false. Such specification omits {a}.": "G ( a O G N d )",
    "expected behavior is more than one atomic proposition in {{a}, {d}} should be true.": "G ( a O ( d O N d ) )",
    "expected behavior is {a} should be true first, and then {d} should eventually be true, but don't need to be adjacent. Such specification omits {a}.": "G ( a O N F d )"
    Revised Task: G (a O N d)
    Behavior: Either {a} is always true, or {d} is never true.

Revised Task: N G (a A N d)
    Behavior: It is not always the case that both {a} is true and {d} is false.

Revised Task: N G (a U N d)
    Behavior: It is not always the case that {a} should be true until {d} becomes false.

Revised Task: N G (E a O N d)
    Behavior: It is not always the case that {a} should eventually be true or {d} is never true.

Revised Task: N G (a O X N d)
    Behavior: It is not always the case that either {a} is true or {d} is not true in the next timestep.

Revised Task: N G (N a O N d)
    Behavior: It is not always the case that either {a} is false or {d} is false.

Revised Task: N G (a O N E d)
    Behavior: It is not always the case that either {a} is true or {d} will eventually be false.

Revised Task: N E (a O N d)
    Behavior: It is not eventually always the case that either {a} is true or {d} is false.

Revised Task: N G (N a O d)
    Behavior: It is not always the case that either {a} is false or {d} is true.

Revised Task: G (N a O N d)
    Behavior: Always either {a} is false or {d} is never true.
  },
  "X G b O N e U e": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (X G (b O N e))",
    "expected behavior is to make {b} and {e} be true simultanously.": "X G (b A N e U e)",
    "expected behavior is to make {b} and {e} be true sequentially and don't need to be adjacent.": "X G (b A F(N e U e))",
    "expected behavior is to make {b}, {e} and {N e} be true sequentially and don't need to be adjacent.": "X G (b A F(N e A F(e)))",
    "expected behavior is more than one atomic proposition in {{b}, {e}, {N e}} should be true.": "X G (b O N e O e)"
    Revised Task: X (G b O N e) U e
    Behavior: Eventually, either {e} should be true, or until that point, in the next timestep, {b} should always be true or not {e} should be true.

Revised Task: X G (b O N e U e)
    Behavior: In the next timestep, it should always be that either {b} is true or eventually {e} is true, not considering {e} in the intermediate steps.

Revised Task: G b O X N e U e
    Behavior: It should always be that {b} is true, or in the next timestep, not {e} should be true until {e} becomes true.

Revised Task: X G b O U e
    Behavior: In the next timestep, it should always be that {b} is true, or eventually, {e} should be true.

Revised Task: X G (b O e) U e
    Behavior: In the next timestep, it should always be that either {b} or {e} is true, until eventually {e} becomes true.

Revised Task: X G b O N e A e
    Behavior: In the next timestep, it should always be that {b} is true, or not {e} and {e} are both true simultaneously.

Revised Task: X G b O (N e U e)
    Behavior: In the next timestep, it should always be that {b} is true, or not {e} until {e} becomes true.

Revised Task: X (b O N e U e)
    Behavior: In the next timestep, either {b} is true or not {e} should be true until {e} becomes true.

Revised Task: X G (b A N e U e)
    Behavior: In the next timestep, it should always be that both {b} and not {e} should be true until {e} becomes true.

Revised Task: X G b O N (e U e)
    Behavior: In the next timestep, it should always be that {b} is true, or not {e} until {e} becomes true, which is a tautology as {e U e} is always true.
  },
  "N G b U d O e": {
    "expected behavior is {b}, {d} and {e} should be true simultanously.": "G(b A d A e)",
    "expected behavior is {b} should be true, and then {d} or {e} should be true.": "N(G(b U (d O e)))",
    "expected behavior is {d} or {e} should be true, and then {b} should be true.": "N(G((d O e) U b))",
    "expected behavior is {b}, {d} and {e} should be true sequentially.": "N(G(b U d U e))",
    "expected behavior is {b}, {d} and {e} should be true sequentially and don't need to be adjacent.": "N(G(b A F(d A F(e))))"
    Revised Task: G(b U d O e)
    Behavior: Either {d} or {e} should eventually be true, and this remains true as long as {b} is true.

Revised Task: N G (b U d A e)
    Behavior: {b} should be true until both {d} and {e} become true, negated globally.

Revised Task: N G b U (d O X e)
    Behavior: Globally, {b} should be true until either {d} becomes true or {e} becomes true in the next timestep.

Revised Task: N G (b U E(d O e))
    Behavior: Negated globally, {b} should be true until either {d} or {e} eventually becomes true.

Revised Task: N (b U d O e)
    Behavior: {b} should be true until either {d} or {e} becomes true, with the entire expression being negated.

Revised Task: N G (b A d O e)
    Behavior: Globally, it is required that both {b} and {d} are true, or {e} is true, negated.

Revised Task: N G b U (d A e)
    Behavior: Negated globally, {b} should be true until both {d} and {e} are true.

Revised Task: N G (b U d) O e
    Behavior: Negated globally, either {b} should be true until {d} is true, or {e} should be true.

Revised Task: N G (b U d) A e
    Behavior: It's required that either {b} should be true until {d} is true, and {e} is also true, with the entire expression negated globally.

Revised Task: G N (b U d O e)
    Behavior: Globally, the negation of {b} being true until either {d} or {e} becomes true.
  },
  "f U ( b A G d )": {
    "expected behavior is {b} and {d} should be true simultanously.": "F(b A G(d))",
    "expected behavior is {d} should always be true, and {b} should be true at least once.": "F(b U G(d))",
    "expected behavior is {f}, {b} and {d} should be true simultanously.": "F(f A b A d)",
    "expected behavior is {f} and {d} should be true simultanously, or {f}, {b} and {d} should be true simultanously.": "F(f A (b A G(d)))",
    "expected behavior is to make {f} and {d} be true sequentially and don't need to be adjacent.": "F(f A G(b A d))"
    Revised Task: f U (b A d)
    Behavior: {f} should be true until {b} and {d} are true simultaneously.

Revised Task: G(f U (b A d))
    Behavior: {f} should always be true until {b} and {d} are true simultaneously.

Revised Task: f U (b O G d)
    Behavior: {f} should be true until either {b} is true or {d} is always true from a certain point onward.

Revised Task: E(f U (b A d))
    Behavior: Eventually, {f} should be true until {b} and {d} are true simultaneously.

Revised Task: f U (E(b) A G d)
    Behavior: {f} should be true until {b} eventually becomes true and {d} is always true.

Revised Task: f U (b A X d)
    Behavior: {f} should be true until {b} becomes true, and then {d} should be true in the next timestep.

Revised Task: f U (b A N d)
    Behavior: {f} should be true until {b} becomes true and {d} is not true.

Revised Task: f U (N b A G d)
    Behavior: {f} should be true until {b} is not true and {d} is always true.

Revised Task: E(f A (b A G d))
    Behavior: Eventually, {f} and {b} should be true simultaneously, and {d} should always be true.

Revised Task: f U (b A G(N d))
    Behavior: {f} should be true until {b} becomes true and {d} is never true again from that point onward.
  },
  "X e O c A a U b": {
    "expected behavior is {c} should be true first and {a} and {b} should be true simultanously. Such specification omits {c}.": "X e A c O (a U b)",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "X e O c A (a A X b)",
    "expected behavior is {e} and {c} should be true simultanously, and then {a} should be true.": "X (e A c) A (a U b)",
    "expected behavior is more than one atomic proposition in {{e}, {c}, {a}, {b}} should be true.": "X (e O c O a O b)",
    "expected behavior is {e}, {c}, {a} and {b} finally be true simultanously.": "F(X e A c A a A b)"
    Revised Task: X(e O c) A a U b
    Behavior: {e} and {c} should eventually be true at the same time, after which {a} must be true until {b} becomes true.

    Revised Task: X e A c A a U b
    Behavior: Eventually, {e} becomes true, and at the same time, {c}, {a}, and {b} should be true sequentially.

    Revised Task: X e O (c A a) U b
    Behavior: Eventually, {e} becomes true, and either {c} and {a} become true simultaneously or until {b} becomes true.

    Revised Task: X e O c A a U G(b)
    Behavior: Eventually, {e} should be true, and {c} and {a} should be true sequentially, with {b} always true from some point onwards.

    Revised Task: X E(e O c) A a U b
    Behavior: At the next step, either {e} or {c} should eventually be true, and thereafter, {a} should be true until {b} becomes true.

    Revised Task: X e O c U a A b
    Behavior: Eventually, {e} becomes true, and either {c} is true or {a} and {b} become true sequentially.

    Revised Task: X e O N(c A a) U b
    Behavior: Eventually, {e} should be true, and it is not the case that both {c} and {a} are true, until {b} becomes true.

    Revised Task: G(X e O c) A a U b
    Behavior: It is always the case that in the next step, either {e} or {c} will be true, followed by {a} being true until {b} becomes true.

    Revised Task: X e O c A E(a U b)
    Behavior: Eventually, {e} should be true, and {c} and eventually either {a} or {b} should be true.

    Revised Task: X e O c A a N U b
    Behavior: Eventually, {e} should be true, and {c} and {a} should be true until it is not the case that {b} becomes true.
  },
  "E c A X ( N f )": {
    "expected behavior is {c} should be true, and {f} should not be true. Such specification omits {f}.": "c A X (f)",
    "expected behavior is {c} and {f} should be true simultanously.": "E c A f",
    "expected behavior is {c} should be true, and {f} should not be true sequentially.": "E c A X(f)",
    "expected behavior is {c} and {f} should be true sequentially and don't need to be adjacent.": "E c A F (f)",
    "expected behavior is {f} should not be true until {c} is true.": "E c U X (f)"
    Revised Task: E(c A X(N f))
    Behavior: {c} should be true and in the next timestep, {f} should not be true.

Revised Task: E(c A G(N f))
    Behavior: {c} should be true and subsequently, {f} should always not be true.

Revised Task: E(c O X(N f))
    Behavior: Either {c} is true or in the next timestep, {f} is not true.

Revised Task: G(c A X(N f))
    Behavior: Always, {c} should be true and in the next timestep, {f} should not be true.

Revised Task: E(N c A X(N f))
    Behavior: {c} should not be true and in the next timestep, {f} should not be true.

Revised Task: E(c A X(f))
    Behavior: {c} should be true and in the next timestep, {f} should be true.

Revised Task: E(c U X(N f))
    Behavior: {c} should be true until in the next timestep, {f} is not true.

Revised Task: E(N c A N X(f))
    Behavior: {c} should not be true and in the next timestep, {f} should not necessarily be true.

Revised Task: E(c A X(E f))
    Behavior: {c} should be true and in the next timestep, {f} should eventually be true.

Revised Task: E(c A U(N f))
    Behavior: {c} should be true and until {f} is not true.


  },
  "E c U X ( N c )": {
    "expected behavior is {c} should become true after {c} becomes false. Such specification omits {c}.": "c U X ( N ( c ) )",
    "expected behavior is {c} should be true at least once, and then {c} should be false.": "G(c U X ( N ( c ) ) )",
    "expected behavior is {c} should be true once, and then {c} should be false.": "F(c U X ( N ( c ) ) )",
    "expected behavior is {c} should be false, and then {c} should become true again.": "F(N(c) U X ( c ) )",
    "expected behavior is {c} should be false, and then {c} or other atomic propositions should become true.": "F(N(c) U X ( a O b O c))"
    Revised Task: E(c U (N c))
    Behavior: The condition where {c} is not true should eventually happen, and until then, {c} should be true.

    Revised Task: E(c U X c)
    Behavior: Eventually, {c} should be true until the next time step, where {c} should also be true.

    Revised Task: E(c A X (N c))
    Behavior: Eventually, {c} should be true and, in the next timestep, {c} should not be true.

    Revised Task: G(c U X (N c))
    Behavior: Always, {c} should be true until the next timestep, where {c} should not be true.

    Revised Task: E(N c U X (N c))
    Behavior: Eventually, {c} should not be true until the next timestep, where {c} should also not be true.

    Revised Task: E(c O X (N c))
    Behavior: Eventually, either {c} is true or in the next timestep, {c} is not true.

    Revised Task: E(c U (N c) A X (N c))
    Behavior: Eventually, {c} should be true until {c} is not true, and in the next timestep, {c} should not be true.

    Revised Task: E(c U X (N c A c))
    Behavior: Eventually, {c} should be true until the next timestep, where {c} is not true and {c} is true simultaneously (a contradiction).

    Revised Task: E(c U G(N c))
    Behavior: Eventually, {c} should be true until it becomes always untrue.

    Revised Task: E(c U X (c O N c))
    Behavior: Eventually, {c} should be true until the next timestep, where either {c} is true or {c} is not true.
  },
  "d O b O N ( d )": {
    "expected behavior is {d} should be true, {b} should not be true, and then {d} should be false.": "d O b O N(b O d)",
    "expected behavior is {d} should be false, then {b} should not be true, and then {d} should be true.": "N(d) O b O d",
    "expected behavior is {d} should always be true, no matter what the values of {b} are.": "G(d O b O d)",
    "expected behavior is {d} should be true, and then {b} should not be true at the same time.": "d A N(b O d)",
    "expected behavior is {d} should be true, or {b} should not be true first, and then {d} should be false.": "d U (b O N(d))",
    "expected behavior is {d} should be false, or {b} should not be true first, and then {d} should be true.": "N(d) U (b O d)"
    Revised Task: d O b O N (b)
    Behavior: Either {d}, {b}, or not {b} should eventually be true.

Revised Task: d O b O G (d)
    Behavior: Either {d} or {b} should eventually be true, or {d} should always be true.

Revised Task: G (d O b O N (d))
    Behavior: Always either {d}, {b}, or not {d} should be true.

Revised Task: d O b O X (d)
    Behavior: Either {d}, {b}, or {d} in the next time step should be true.

Revised Task: E (d O b O N (d))
    Behavior: Eventually, either {d}, {b}, or not {d} should be true.

Revised Task: d O b O N (E(d))
    Behavior: Either {d}, {b}, or not eventually {d} should be true.

Revised Task: d O b O N (G(d))
    Behavior: Either {d}, {b}, or not always {d} should be true.

Revised Task: d O b O N (X(d))
    Behavior: Either {d}, {b}, or not {d} in the next time step should be true.

Revised Task: d O b O (d U b)
    Behavior: Either {d}, {b}, or {d} until {b} becomes true should be true.

Revised Task: d O b O (N(d) U b)
    Behavior: Either {d}, {b}, or not {d} until {b} becomes true should be true.
  },
  "G b O E G a O e": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "G b O E (G a O e)",
    "expected behavior is {a} and {e} should be true simultanously.": "G b O (E G a A e)",
    "expected behavior is {e} should be true first, then {a} or {b} should be true.": "G b O (E (G a O e))",
    "expected behavior is {a} and {b} should be true simultanously.": "G (b A a) O E e",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "G (b U F(a)) O E e"
    Revised Task: G b O E G a
    Behavior: Eventually, {a} should be always true, and {b} can be true at any time, but not necessarily.

Revised Task: G b O E G(a O e)
    Behavior: Eventually, either {a} or {e} should be always true, and {b} can be true at any time, but not necessarily.

Revised Task: G b O E X G a O e
    Behavior: In the next timestep, it is required that eventually, {a} or {e} should always be true, and {b} can be true at any time, but not necessarily.

Revised Task: G b O E G(N a) O e
    Behavior: Eventually, {a} should not be always true, or {e} can be true at any time, while {b} can be true at any time, but not necessarily.

Revised Task: G b O E G(a A e)
    Behavior: Eventually, {a} and {e} should always be true together, and {b} can be true at any time, but not necessarily.

Revised Task: G b O E G a A e
    Behavior: Eventually, {a} should be always true, and {e} should also be true, with {b} being true at any time, but not necessarily.

Revised Task: G b O E U a O e
    Behavior: Eventually, {a} or {e} should be true and remain so, and {b} can be true at any time, but not necessarily.

Revised Task: G b O G a O e
    Behavior: {a} or {e} should always be true, and {b} can be true at any time, but not necessarily.

Revised Task: G b O E G a U e
    Behavior: Eventually, {a} should be always true until {e} becomes true, and {b} can be true at any time, but not necessarily.

Revised Task: G b O E G a O X e
    Behavior: Eventually, {a} should be always true, and {e} should be true in the next timestep, with {b} being true at any time, but not necessarily.
  },
  "G b U N G a O e": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U N G (a O e)",
    "expected behavior is {a} or {e} should be true simultanously.": "G b U (G a O e)",
    "expected behavior is {a} and {e} should be true sequentially and don't need to be adjacent.": "G b U N (G a A e)",
    "expected behavior is {b}, {a} and {e} finally be true simultanously.": "G (b A a A e)",
    "expected behavior is more than one atomic proposition in {{b}, {a}, {e}} should be true.": "G b O a O e"
    Revised Task: G b U N G (a O e)
    Behavior: {b} must always be true until {a} or {e} becomes true, after which {b} can be false.

Revised Task: G b U G a O e
    Behavior: {b} must always be true until {a} is always true. Independently, {e} must eventually be true.

Revised Task: G b U N G (a A e)
    Behavior: {b} must always be true until both {a} and {e} are true.

Revised Task: G b U (N G a A e)
    Behavior: {b} must always be true until {a} never becomes always true, and {e} becomes true.

Revised Task: G (b O N G a) U e
    Behavior: Either {b} is true or {a} is never always true until {e} becomes true.

Revised Task: E (G b U N G a) O e
    Behavior: Either eventually {b} must always be true until {a} is never always true, or {e} must eventually be true.

Revised Task: G b U N G (a X e)
    Behavior: {b} must always be true until, after {a} becomes true, {e} becomes true in the next timestep.

Revised Task: G (b A N G a) U e
    Behavior: {b} and {a} never being always true must always be true until {e} becomes true.

Revised Task: G b U (N G a U e)
    Behavior: {b} must always be true until {a} is never always true until {e} becomes true.

Revised Task: G (b U N G a) O e
    Behavior: It's always true that {b} must be true until {a} is never always true, or {e} must eventually be true.


  },
  "N c O N X e U f": {
    "expected behavior is {e} should be true first, and {f} should be true eventually. Such specification omits {e}.": "N c O N e U (X f)",
    "expected behavior is {e} should be true first, and {c} should be true eventually. Such specification omits {e}.": "N e U (c O N X f)",
    "expected behavior is {f} should be true first, and {c} should be true eventually. Such specification omits {f}.": "N f O N X e U c",
    "expected behavior is {c} and {f} should be true simultanously, and then {e} should be true eventually. Such specification omits {e}.": "N c O N f U (X e)",
    "expected behavior is {e} and {f} should finally be true simultanously. Such specification omits {e}.": "N e A f O N X e U f"
    Revised Task: N c O X e U f
    Behavior: Either {c} should not be true, or {e} should be true in the next timestep until {f} becomes true.

    Revised Task: N c O N e U f
    Behavior: Either {c} should not be true, or {e} should not be true, until {f} becomes true.

    Revised Task: N c O N X (e A f)
    Behavior: Either {c} should not be true, or both {e} and {f} should be true in the next timestep.

    Revised Task: N c U N X e U f
    Behavior: {c} should not be true until either {e} is not true in the next timestep, or until {f} becomes true.

    Revised Task: N c O N G e U f
    Behavior: Either {c} should not be true, or {e} should always be true until {f} becomes true.

    Revised Task: N c O N X E e U f
    Behavior: Either {c} should not be true, or {e} should eventually be true in the next timestep until {f} becomes true.

    Revised Task: E N c O N X e U f
    Behavior: Eventually, either {c} should not be true, or {e} should be true in the next timestep until {f} becomes true.

    Revised Task: N c A N X e U f
    Behavior: Both {c} should not be true and {e} should not be true in the next timestep until {f} becomes true.

    Revised Task: N c O N X e A f
    Behavior: Either {c} should not be true, or {e} should be true in the next timestep and {f} should be true simultaneously.

    Revised Task: G N c O N X e U f
    Behavior: Always, either {c} should not be true, or {e} should be true in the next timestep until {f} becomes true.
  },
  "N b U f O ( f )": {
    "expected behavior is {b} should be false first. Such specification omits {b}.": "N b U f O (f)",
    "expected behavior is {f} should be true first. Such specification omits {f}.": "b U f O (f)",
    "expected behavior is {f} should be false first. Such specification omits {f}.": "b U N f O (f)",
    "expected behavior is {f} should be true or false, but not both. Such specification omits this restriction.": "b U (f O N f)",
    "expected behavior is {f} should be true twice. Such specification omits the requirement of two {f}.": "b U (f O f)"
    Revised Task: N b U (f O (f))
    Behavior: {b} should be true in the next timestep and remain true until either {f} becomes true or remains true.

    Revised Task: N b U (f A (f))
    Behavior: {b} should be true in the next timestep and remain true until {f} is true and continues to be true.

    Revised Task: N (b O f) U f
    Behavior: Either {b} or {f} should be true in the next timestep and remain so until {f} becomes true.

    Revised Task: N b U G(f)
    Behavior: {b} should be true in the next timestep and remain true until {f} becomes true and then always stays true.

    Revised Task: G(b U f)
    Behavior: {b} should always be true until {f} becomes true.

    Revised Task: E(b U f)
    Behavior: Eventually, {b} should be true until {f} becomes true.

    Revised Task: N b U X(f)
    Behavior: {b} should be true in the next timestep and remain true until {f} is true in the following timestep.

    Revised Task: N b U (f U f)
    Behavior: {b} should be true in the next timestep and remain true until {f} becomes true and then continues to be true.

    Revised Task: N b A f O (f)
    Behavior: {b} should be true in the next timestep and {f} should be true eventually.

    Revised Task: N (b U f) O f
    Behavior: In the next timestep, either {b} should remain true until {f} becomes true, or {f} should be true eventually.
  },
  "G b U b O ( f )": {
    "expected behavior is {b} should always be true. Such specification omits {b}.": "G b U b O (f A b)",
    "expected behavior is {b} should be true first, and then {f} should be true.": "G b A (b U f)",
    "expected behavior is {f} should be true, or {b} should not be true first, and then {b} or {f} should be true.": "G b U (b O (f O b))",
    "expected behavior is more than one atomic proposition in {{b}, {f}} should be true.": "G b U (b O (f V b))",
    "expected behavior is {b} and {f} should be true simultanously.": "G b A (b U (f A b))"
    Revised Task: G b U (b O f)
    Behavior: {b} should be always true, or {b} should be true until {f} is true.

Revised Task: G(b U b) O f
    Behavior: {b} should be always true, or eventually, {f} should be true.

Revised Task: G b U b A f
    Behavior: {b} should be always true, or {b} and {f} should be true simultaneously.

Revised Task: G b U (b O X f)
    Behavior: {b} should be always true, or {b} should be true until in the next timestep {f} becomes true.

Revised Task: G b U (b O G f)
    Behavior: {b} should be always true, or {b} should be true until {f} is always true.

Revised Task: G b U (b O E f)
    Behavior: {b} should be always true, or {b} should be true until {f} eventually becomes true.

Revised Task: G b U (b O N f)
    Behavior: {b} should be always true, or {b} should be true until {f} is not true.

Revised Task: G(b U b) O N f
    Behavior: {b} should be always true, or eventually, {f} should not be true.

Revised Task: G b U (N b O f)
    Behavior: {b} should be always true, or {b} should not be true until {f} becomes true.

Revised Task: G b U (b A N f)
    Behavior: {b} should be always true, or {b} should be true and {f} not true.
  },
  "( E E b O E a )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O E E b O E a",
    "expected behavior is to make {b} and {a} be true simultanously.": "( E E b A E a )",
    "expected behavior is to make {b} and {a} be true sequentially and don't need to be adjacent.": "( E E b O E F(a))",
    "expected behavior is to make {b}, {a} and {c} be true sequentially and don't need to be adjacent.": "(E E b O E F(a A F(c)))",
    "expected behavior is {b}, {a} and {c} finally be true simultanously.": "(E E b A E a A c)"
    Revised Task: E(b O E a)
    Behavior: Either {b} or {a} should eventually be true.

Revised Task: E(b O a)
    Behavior: Either {b} should be true at some point, or {a} is true now.

Revised Task: E(E b A E a)
    Behavior: Both {b} and {a} should eventually be true, but not necessarily at the same time.

Revised Task: (b O E a)
    Behavior: Currently, either {b} is true, or eventually, {a} will be true.

Revised Task: E(E b O a)
    Behavior: Eventually, {b} should be true or {a} is currently true.

Revised Task: E(N b O E a)
    Behavior: Either {b} should never be true, or {a} should eventually be true.

Revised Task: G(E b O E a)
    Behavior: It will always be the case that either {b} or {a} should eventually be true.

Revised Task: E(E b O X a)
    Behavior: Eventually, {b} should be true, or in the next timestep, {a} should be true.

Revised Task: E(b U E a)
    Behavior: {b} should be true until {a} eventually becomes true.

Revised Task: E(X b O E a)
    Behavior: In the next timestep, {b} should be true, or eventually, {a} will be true.
  },
  "( N N b O E a )": {
    "expected behavior is atomic propositions {{a}, {b}} should both be true. Such specification omits {b}.": "( N N b A E a )",
    "expected behavior is {b} should be true first, then {a} should be true. Such specification omits {b}.": "( N b A E a )",
    "expected behavior is {b} should not be true, then {a} should not be true. Such specification omits {b}.": "( N N b O N E a )",
    "expected behavior is {b} and {a} should be true simultanously. Such specification omits {b}.": "( N b A E a )",
    "expected behavior is {a} should be true at the end, no matter what the value of {b} is. Such specification omits {b}.": "( N N b U E a )"
    Revised Task: (N b O E a)
    Behavior: Either {b} should be false or {a} should eventually be true.

    Revised Task: (N N b A E a)
    Behavior: {b} should not be false and {a} should eventually be true.

    Revised Task: (N N b U E a)
    Behavior: {b} should not be false until {a} eventually becomes true.

    Revised Task: (N N b O G a)
    Behavior: Either {b} should not be false or {a} should always be true.

    Revised Task: (N N E b O E a)
    Behavior: Either {b} should eventually be true, or {a} should eventually be true.

    Revised Task: (N b U E a)
    Behavior: {b} should be false until {a} eventually becomes true.

    Revised Task: (N N b O X a)
    Behavior: Either {b} should not be false or {a} should be true in the next time step.

    Revised Task: (N N G b O E a)
    Behavior: Either {b} should always not be false or {a} should eventually be true.

    Revised Task: (N N b O E(N a))
    Behavior: Either {b} should not be false or {a} should not eventually be true.

    Revised Task: (N N X b O E a)
    Behavior: Either the next state of {b} should not be false or {a} should eventually be true.
  },
  "E E a A X d U c": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "E a A X (d U c)",
    "expected behavior is {c} should be true after {a} and {d} are true simultanously.": "E E a A (d A c)",
    "expected behavior is {a}, {d} and {c} should be true sequentially and don't need to be adjacent.": "E E a A F(d A F(c))",
    "expected behavior is {a}, {d} and {c} finally be true simultanously.": "E E a A d A c",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {c}} should be true.": "E E a O d O c"
    Revised Task: E(a A X(d U c))
    Behavior: {a} should be true and in the next timestep, {d} should hold true until {c} becomes true.

    Revised Task: E E a A G(d U c)
    Behavior: {a} should always be true and {d} should hold true until {c} becomes true, which should eventually happen.

    Revised Task: E E a O X(d U c)
    Behavior: Either {a} or the condition that {d} holds true until {c} becomes true should eventually be true.

    Revised Task: E E a A X(d A c)
    Behavior: Eventually, {a} should be true and in the next timestep, both {d} and {c} should be true simultaneously.

    Revised Task: E E a A X N(d U c)
    Behavior: {a} should be true and in the next timestep, the condition that {d} holds true until {c} becomes true should hold in the timestep following that.

    Revised Task: E E a A X(d U E(c))
    Behavior: Eventually, {a} should be true and in the next timestep, {d} should hold true until {c} eventually becomes true.

    Revised Task: E E(a U (d A c))
    Behavior: Eventually, the condition that {a} holds true until both {d} and {c} become true simultaneously should hold.

    Revised Task: E E a U (X(d) U c)
    Behavior: Eventually, {a} should hold true until either {d} in the next timestep or {c} becomes true.

    Revised Task: E E a U (d A G(c))
    Behavior: Eventually, {a} should hold true until both {d} becomes true and {c} always remains true thereafter.

    Revised Task: G E a A X(d U c)
    Behavior: It should always be the case that eventually, {a} is true and in the next timestep, {d} holds true until {c} becomes true.
  },
  "E E a A N d U c": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "E E a A (N d U c)",
    "expected behavior is {a}, {d}, {c} should be true sequentially and don't need to be adjacent.": "E E a A (N (d A F(c)))",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {c}} should be true.": "E E a A (N d O c)",
    "expected behavior is {d} and {c} should be true simultanously, and then {c} should always be true.": "E E a A (N (d A G(c)))",
    "expected behavior is finally {c} should be true, no matter what the values of {a}, {d} are.": "E E a A (N d U c)"
    Revised Task: E E a A d U c
    Behavior: Eventually, it should be the case that {a} and {d} are true until {c} becomes true.

Revised Task: E a A N d U c
    Behavior: Eventually, {a} should be true and {d} should be false until {c} becomes true.

Revised Task: E E a O N d U c
    Behavior: Eventually, either {a} or not {d} should be true until {c} becomes true.

Revised Task: E E a A N d A c
    Behavior: Eventually, it should be the case that {a} and not {d}, and {c} are all true simultaneously.

Revised Task: E E (a A N d) U c
    Behavior: Eventually, it should be the case that {a} and not {d} are true until {c} becomes true.

Revised Task: E E a A X(N d U c)
    Behavior: Eventually, {a} should be true and in the next step, not {d} should be true until {c} becomes true.

Revised Task: E G(a A N d U c)
    Behavior: Eventually, it should always be the case that {a} and not {d} are true until {c} becomes true.

Revised Task: E E a A N (d U c)
    Behavior: Eventually, {a} should be true and {d} should not be true until {c} becomes true.

Revised Task: E E a U (N d A c)
    Behavior: Eventually, {a} should be true until it's the case that {d} is not true and {c} is true.

Revised Task: E E (a U c) A N d
    Behavior: Eventually, it should be the case that either {a} or {c} becomes true and {d} is not true.
  },
  "( G c U G N b )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U (G c U G N b)",
    "expected behavior is {b} and {c} should be true simultanously.": "G(b A c)",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "G(b U F(c))",
    "expected behavior is to make {b} and {c} finally be true simultanously.": "G(b A G N c)",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "G(b O c)",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {b} or {c} should be true.": "G(b O G N (c))",
    "expected behavior is finally {c} should be true, no matter what the values of {b} are.": "G(b U c)",
    "expected behavior is {c} should always be true, or {b} be true, but subsequently {c} should be true.": "G(b U G N c)"
    Revised Task: (G c U G b)
    Behavior: {c} should always be true until {b} always becomes true.

Revised Task: (G N c U G N b)
    Behavior: {c} should always not be true until {b} always becomes not true.

Revised Task: (G c U N b)
    Behavior: {c} should always be true until {b} becomes not true.

Revised Task: (G c U G (c A b))
    Behavior: {c} should always be true until both {c} and {b} always become true.

Revised Task: (G (c O b) U G N b)
    Behavior: Either {c} or {b} should always be true until {b} always becomes not true.

Revised Task: (G c A G N b)
    Behavior: {c} should always be true and {b} should always not be true.

Revised Task: (G c U G (c U b))
    Behavior: {c} should always be true until {c} always becomes true until {b} becomes true.

Revised Task: (N G c U G N b)
    Behavior: It is not always the case that {c} is true until {b} always becomes not true.

Revised Task: (G (c U b) U G N b)
    Behavior: {c} should always be true until {b} becomes true until {b} always becomes not true.

Revised Task: (G c U X G N b)
    Behavior: {c} should always be true until the next time {b} always becomes not true.
  },
  "( X G E ( b ) )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U (X G E (b))",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {b} should be true.": "(X G (b O E (b)))",
    "expected behavior is {b} should always be true.": "G(X G E (b))",
    "expected behavior is {b} should finally be true, no matter what the values of {a} and {b} are.": "F(X G E (b))",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be true.": "(X G (E (b) O E (c)))"
    Revised Task: G(X E (b))
    Behavior: Eventually, it will always be the case that {b} should be true in the next timestep.

    Revised Task: X(G E (b))
    Behavior: In the next timestep, it should always become eventually true that {b} is true.

    Revised Task: X(G (b A E(c)))
    Behavior: In the next timestep, it should always be the case that {b} is true and eventually {c} becomes true.

    Revised Task: X(E (b O c))
    Behavior: In the next timestep, either {b} or {c} should eventually become true.

    Revised Task: (X G (b U c))
    Behavior: Starting from the next timestep, it will always be the case that {b} is true until {c} becomes true.

    Revised Task: E(X (b))
    Behavior: Eventually, it will be the case that in the next timestep, {b} is true.

    Revised Task: (X E (b A c))
    Behavior: In the next timestep, it should eventually be the case that both {b} and {c} are true simultaneously.

    Revised Task: G(X (b))
    Behavior: It will always be the case that in the next timestep, {b} is true.

    Revised Task: (X E (b U c))
    Behavior: In the next timestep, it should eventually be the case that {b} is true until {c} becomes true.

    Revised Task: (X E G (b))
    Behavior: In the next timestep, it should eventually always be the case that {b} is true.
  },
  "( N G E ( a ) )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U G(E(a))",
    "expected behavior is {a} should be true in the future, but never be false.": "F(a A G(E(a)))",
    "expected behavior is {a} should always be true, and no other atomic proositions.": "G(a)",
    "expected behavior is {a} should be eventually true, but not necessarily always true.": "F(a U G(E(a)))",
    "expected behavior is {a} should be true at least once and then never be false.": "F(a A X(E(a)))"
    Revised Task: G E (a)
    Behavior: Eventually, {a} should always be true.

Revised Task: N G (a)
    Behavior: It is not the case that {a} always needs to be true.

Revised Task: N E (a)
    Behavior: It is not the case that {a} should eventually be true.

Revised Task: G N E (a)
    Behavior: Always, it is not the case that {a} should eventually be true.

Revised Task: N G E (N a)
    Behavior: It is not the case that always eventually, {a} should not be true.

Revised Task: E N G (a)
    Behavior: Eventually, it is not the case that {a} should always be true.

Revised Task: (N E) U G (a)
    Behavior: It is not the case that {a} should eventually be true, until it always becomes true.

Revised Task: G (N E (a))
    Behavior: Always, it is not the case that {a} should eventually be true.

Revised Task: E G N (a)
    Behavior: Eventually, always, {a} should not be true.

Revised Task: N (a U G E (a))
    Behavior: It is not the case that {a} should be true until it always eventually becomes true.
  },
  "N ( G a U E d )": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "G a U E d",
    "expected behavior is {a} should be true first, and then {d} should be true.": "F(a U E d)",
    "expected behavior is at least one of {a} and {d} should be true.": "a O E d",
    "expected behavior is {a} should not be true, and then {d} should be true.": "N(N a U E d)",
    "expected behavior is {d} should always be true.": "G(G a U d)"
    Revised Task: G( N a U E d )
    Behavior: {a} should not be true until {d} eventually becomes true.

Revised Task: N( E a U G d )
    Behavior: {a} should eventually be true, or {d} should always be true, negating the whole proposition.

Revised Task: N( G a A E d )
    Behavior: {a} should always be true and {d} should eventually be true, negating the whole proposition.

Revised Task: N( G a U d )
    Behavior: {a} should always be true until {d} becomes true, negating the whole proposition.

Revised Task: N( G (a U E d) )
    Behavior: {a} should be true until {d} eventually becomes true, within a context that is always true, negating the whole proposition.

Revised Task: G( N a U d )
    Behavior: {a} should not be true until {d} becomes true, always.

Revised Task: N( G a U X d )
    Behavior: {a} should always be true until {d} becomes true in the next timestep, negating the whole proposition.

Revised Task: E( N a U G d )
    Behavior: {a} should not be true until {d} is always true, eventually.

Revised Task: N( E a U X d )
    Behavior: {a} should eventually be true until {d} becomes true in the next timestep, negating the whole proposition.

Revised Task: N( G a U O d )
    Behavior: {a} should always be true until either {d} becomes true or something else happens, negating the whole proposition.


  },
  "N ( X a U E d )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U N ( X a U E d )",
    "expected behavior is {a} should always be true.": "N ( G ( a ) U E d )",
    "expected behavior is {a} should be true first and immediately followed by {d}.": "N ( X ( a A E d ) )",
    "expected behavior is {a} and {d} should be true simultanously.": "N ( X ( a A d ) )",
    "expected behavior is more than one atomic proposition in {{a}, {d}} should be true.": "N ( X ( a O d ) )",
    "expected behavior is {a} or {d} should be true, and {d} should always be true.": "N ( X ( a O G(d) ) )",
    "expected behavior is {a} or {d} should be true, and then {d} should always be true.": "N ( X ( a O F(d) ) )"
    Revised Task: N(a U E(d))
Behavior: {a} should not be true until {d} eventually becomes true.

Revised Task: N(X a U d)
Behavior: Not in the next step, but eventually, {a} should be true until {d} becomes true.

Revised Task: N(X (a U d))
Behavior: In the next step, {a} should not be true until {d} becomes true.

Revised Task: N(X a A E(d))
Behavior: In the next step, {a} should not be true and {d} should eventually be true.

Revised Task: G(X a U E(d))
Behavior: Always in the next step, {a} should be true until {d} eventually becomes true.

Revised Task: N(X a U G(d))
Behavior: Not in the next step, but {a} should be true until {d} is always true.

Revised Task: N(E a U E(d))
Behavior: Not eventually {a}, but {a} should be true until {d} eventually becomes true.

Revised Task: N(X a O E(d))
Behavior: Not in the next step, but {a} should be true or {d} should eventually be true.

Revised Task: N(X (a A d))
Behavior: In the next step, it should not be true that both {a} and {d} are true.

Revised Task: N(X a U X(d))
Behavior: Not in the next step, but {a} should be true until in the next step {d} becomes true.

  },
  "N ( G E f U f )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "G E f U (f)",
    "expected behavior is {f} should not be true for an infinite amount of times.": "N ( G E (f U f))",
    "expected behavior is {f} should be true first and then {f} should not be true for an infinite amount of times.": "N (G E (f A N (f)))",
    "expected behavior is {f} should not be true for an infinite amount of times, and then {f} should be true.": "N (G E (N (f) U f))",
    "expected behavior is {f} should not be true for an infinite amount of times, or {f} should be true.": "N (G E (N (f) O f))"
    Revised Task: G (N E f U f)
    Behavior: The formula will always hold true if {f} does not eventually become true or until {f} becomes true.

Revised Task: N (G E f A f)
    Behavior: It is not the case that {f} will always eventually be true and {f} is true simultaneously.

Revised Task: N (E G f U f)
    Behavior: It is not the case that {f} will eventually always be true until {f} becomes true.

Revised Task: N (G E (f A f))
    Behavior: It is not the case that {f} will always eventually be both true simultaneously.

Revised Task: N (G (f O E f))
    Behavior: It is not the case that {f} will always be true or {f} will eventually be true.

Revised Task: N (X G E f)
    Behavior: It is not the case that in the next step, it will always be true that {f} will eventually be true.

Revised Task: N (G (f U E f))
    Behavior: It is not the case that it will always be true that {f} holds until {f} eventually becomes true.

Revised Task: N (G E (f O f))
    Behavior: It is not the case that it will always be true that {f} will eventually be true or {f} is true.

Revised Task: E (N G f U f)
    Behavior: Eventually, it will not always be true that {f} is true until {f} becomes true.

Revised Task: N (G f U E f)
    Behavior: It is not the case that {f} will always be true until {f} eventually becomes true.
  },
  "G ( e ) O G N c": {
    "expected behavior is {e} should always be true, or {c} should be true sequentially.": "G ( e O G N c )",
    "expected behavior is {e} should always be true, or {c} should be true simultaneously.": "G ( e A G N c )",
    "expected behavior is {e} and {c} should be true sequentially and don't need to be adjacent.": "G ( e A F (G N c) )",
    "expected behavior is more than one atomic proposition in {{e}, {c}} should be true.": "G ( e O c )",
    "expected behavior is finally {c} should be true, no matter what the value of {e} is.": "G ( e U c )"
    Revised Task: G (e) O G c
    Behavior: Either {e} should always be true, or {c} should always be true.

Revised Task: G (e O G c)
    Behavior: Always, either {e} is true or {c} should always be true.

Revised Task: G (e) O N c
    Behavior: Either {e} should always be true, or {c} should never be true.

Revised Task: G N (e) O G c
    Behavior: It's always the case that either {e} is not true, or {c} should always be true.

Revised Task: G (e A G c)
    Behavior: Always, both {e} and {c} should be true.

Revised Task: G (e) O G (N c)
    Behavior: Either {e} should always be true, or it should always be the case that {c} is not true.

Revised Task: G (E e) O G c
    Behavior: Either {e} should eventually be true at all times, or {c} should always be true.

Revised Task: G (e) O G (X c)
    Behavior: Either {e} should always be true, or in the next time step, {c} should always be true.

Revised Task: G (e) O X G c
    Behavior: Either {e} should always be true, or at the next time step, {c} should start being always true.

Revised Task: X G (e) O G c
    Behavior: At the next time step, it should always be the case that either {e} is true or {c} is always true.
  },
  "( X N e U N a )": {
    "expected behavior is {e} should be true first, but the task omits {e}.": "e U (N a U N e)",
    "expected behavior is both {a} and {e} should be true simultanously.": "F(X N e U N a)",
    "expected behavior is to make {a} and {e} be true sequentially and don't need to be adjacent.": "F(X N e U F(N a))",
    "expected behavior is more than one atomic proposition in {{a}, {e}} should be true.": "F(X N e O N a)",
    "expected behavior is {a} or {e} should be true first, and then {a} or {e} should be true.": "F(X N e U (N a O N e))"
    Revised Task: (X N e U a)
    Behavior: The negation of {e} should hold in the next timestep, and this should continue until {a} becomes true.

Revised Task: (X e U N a)
    Behavior: {e} should hold in the next timestep, and this should continue until the negation of {a} becomes true.

Revised Task: (N e U N a)
    Behavior: The negation of {e} should hold until the negation of {a} becomes true.

Revised Task: (G X N e U N a)
    Behavior: The negation of {e} should always hold in the next timestep, continuing until the negation of {a} is true.

Revised Task: (E X N e U N a)
    Behavior: It should eventually be the case that the negation of {e} holds in the next timestep and continues until the negation of {a} becomes true.

Revised Task: (X N e A N a)
    Behavior: The negation of {e} in the next timestep and the negation of {a} should both hold simultaneously.

Revised Task: (X N e O N a)
    Behavior: Either the negation of {e} in the next timestep or the negation of {a} should be true.

Revised Task: (X (e U a))
    Behavior: In the next timestep, it should be that {e} holds until {a} becomes true.

Revised Task: (X N (e A a))
    Behavior: In the next timestep, both the negation of {e} and {a} should be true simultaneously.

Revised Task: (X G N e U N a)
    Behavior: In the next timestep, it should always be the case that the negation of {e} holds, continuing until the negation of {a} becomes true.
  },
  "e A f O ( E a )": {
    "expected behavior is e, f, a should be true sequentially and don't need to be adjacent.": "F(e A F(f A F(a)))",
    "expected behavior is e and f should be true simultanously.": "F(e A f A ( E a ))",
    "expected behavior is at least one atomic proposition in {e, f, a} should be true.": "F(e O f O ( E a ))",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "F(e A f O a)",
    "expected behavior is finally {a} should be true, no matter what the values of {e} and {f} are.": "F(e U f U ( E a ))"
    Revised Task: e A f O a
    Behavior: {e} and {f} should be true simultaneously, or {a} should be true eventually.

    Revised Task: e A (f O E a)
    Behavior: {e} should be true, and either {f} is true or {a} should be true eventually.

    Revised Task: e A (f O X a)
    Behavior: {e} should be true, and either {f} is true or {a} should be true in the next timestep.

    Revised Task: G(e A f O a)
    Behavior: It should always be the case that {e} and {f} are true simultaneously, or {a} should be true.

    Revised Task: N(e A f O a)
    Behavior: It should not be the case that {e} and {f} are true simultaneously, or {a} is true.

    Revised Task: e A f O (E (a U b))
    Behavior: {e} and {f} should be true simultaneously, or {a} should be true until {b} becomes true.

    Revised Task: e U (f O E a)
    Behavior: {e} should be true until either {f} becomes true or {a} should be true eventually.

    Revised Task: e A (N f O E a)
    Behavior: {e} should be true, and either {f} is not true or {a} should be true eventually.

    Revised Task: e A (f O G a)
    Behavior: {e} should be true, and either {f} is true or {a} should always be true.

    Revised Task: e A (f O (E a A b))
    Behavior: {e} should be true, and either {f} is true or eventually both {a} and {b} should be true.
  },
  "N N E ( a ) O b": {
    "expected behavior is to make {a} be false and {b} be true. Such specification omits {b}.": "N N E (a) O b O b",
    "expected behavior is to make {a} be false and {b} be true sequentially and don't need to be adjacent.": "N N E (a) O F(b)",
    "expected behavior is to make {a} be false and {b} finally be true.": "N N E (a) A b",
    "expected behavior is {a} should be false first, or {a} should not be false first, and then {b} should be true.": "N N E (a) O X(b)",
    "expected behavior is {a} should not be false and {b} should always be true.": "N N E (a) A G(b)"
    Revised Task: N E (a) O b
    Behavior: Either {b} should be true, or eventually, {a} should be true.

    Revised Task: N N (a O b)
    Behavior: It is not true that it is not true that either {a} or {b} should be true.

    Revised Task: E (N a) O b
    Behavior: Eventually, {a} should not be true or {b} should be true.

    Revised Task: N N E (a A b)
    Behavior: It is not true that it is not true that eventually both {a} and {b} should be true.

    Revised Task: N E (a) A b
    Behavior: {b} should be true, and eventually, {a} should be true.

    Revised Task: N N G (a) O b
    Behavior: It is not true that it is not true that {a} should always be true or {b} should be true.

    Revised Task: N N E (X a) O b
    Behavior: It is not true that it is not true that in the next timestep, {a} should be true or {b} should be true.

    Revised Task: E (N a O b)
    Behavior: Eventually, it should be true that {a} is not true or {b} is true.

    Revised Task: N E (a U b)
    Behavior: It is not true that eventually {a} should be true until {b} becomes true.

    Revised Task: N N E (a) A N b
    Behavior: It is not true that it is not true that eventually {a} should be true, and it is not true that {b} should be true.
  },
  "G N E ( a ) O b": {
    "expected behavior is {b} should be true eventually. Such specification omits {b}.": "G N E ( a O b )",
    "expected behavior is to make {a} and {b} be true simultanously.": "G N E ( a A b )",
    "expected behavior is {b} should be true once {a} is false.": "G N E ( a ) U b",
    "expected behavior is {a} should be true eventually and then {b} should be true.": "G E ( a U b )",
    "expected behavior is {b} should be true eventually, no matter what the value of {a} is.": "G N ( a U b )"
    Revised Task: G E (a) O b
    Behavior: Eventually, {a} should be true or {b} is always true.

Revised Task: G N (a O b)
    Behavior: It should always be the case that neither {a} nor {b} is true.

Revised Task: N E (a) O G b
    Behavior: {a} should not eventually be true, or {b} should always be true.

Revised Task: G (a O N b)
    Behavior: Always, either {a} is true or {b} is not true.

Revised Task: G N E (a A b)
    Behavior: It should always be the case that not eventually both {a} and {b} are true.

Revised Task: G (N a) O E b
    Behavior: It should always be the case that {a} is not true or eventually {b} will be true.

Revised Task: N G (a O E b)
    Behavior: It is not always the case that {a} is true or {b} will eventually be true.

Revised Task: E (N a) O G b
    Behavior: Eventually, {a} should not be true, or {b} is always true.

Revised Task: G (a U E b)
    Behavior: Always, {a} should be true until eventually {b} is true.

Revised Task: G E (N a O b)
    Behavior: Always, eventually either {a} is not true or {b} is true.
  },
  "( G d O a U b )": {
    "expected behavior is {a}, {b} and {d} should all be true.": "G(d A a U b)",
    "expected behavior is {d} should be true first, and then {a} or {b} should be true.": "G(d A (a O b))",
    "expected behavior is {d}, {a} and {b} should be true simultanously.": "G(d A a A b)",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "G(d A (a U F(b)))",
    "expected behavior is finally {b} should be true, no matter what the values of {a} and {d} are.": "G(d U (a U b))"
    Revised Task: G(d O (a U b))
    Behavior: {d} should always be true or {a} should be true until {b} becomes true.

Revised Task: (d O a U b)
    Behavior: {d} or {a} should be true until {b} becomes true.

Revised Task: G(d A a U b)
    Behavior: {d} and {a} should always be true until {b} becomes true.

Revised Task: E(G d O a U b)
    Behavior: Eventually, {d} should always be true or {a} should be true until {b} becomes true.

Revised Task: G(d O a A b)
    Behavior: Always, {d} should be true or both {a} and {b} should be true.

Revised Task: G(d O X(a U b))
    Behavior: {d} should always be true or in the next timestep, {a} should be true until {b} becomes true.

Revised Task: G(d O a U N(b))
    Behavior: {d} should always be true or {a} should be true until {b} is never true.

Revised Task: G(d O E(a U b))
    Behavior: {d} should always be true or eventually, {a} should be true until {b} becomes true.

Revised Task: N(G d O a U b)
    Behavior: It is not the case that {d} should always be true or {a} should be true until {b} becomes true.

Revised Task: G(d O a U G(b))
    Behavior: {d} should always be true or {a} should be true until {b} always becomes true.
  },
  "c O ( a ) A N e": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e O ( a ) A N c",
    "expected behavior is to make {a} and {c} be true simultanously.": "c A ( a ) A N e",
    "expected behavior is to make {a} and {c} be true sequentially and don't need to be adjacent.": "c O ( a ) A N F(e)",
    "expected behavior is to make {a}, {c} and {e} be true sequentially and don't need to be adjacent.": "c O F(a) O F(e)",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {e}} should be true.": "c O ( a O e ) A N e"
    Revised Task: c O (a A N e)
    Behavior: {c} should be true, or both {a} and not {e} should be true.

Revised Task: E(c O (a) A e)
    Behavior: Eventually, either {c} or {a} should be true, and also {e} should be true.

Revised Task: c O (X a) A N e
    Behavior: {c} should be true, or {a} should be true in the next timestep, and {e} should not be true.

Revised Task: G(c O (a) A e)
    Behavior: Always, either {c} or {a} should be true, and {e} should be true.

Revised Task: c O (a U e)
    Behavior: {c} should be true, or {a} should be true until {e} becomes true.

Revised Task: c O (a) A E N e
    Behavior: {c} should be true, or {a} should be true, and eventually not {e} should be true.

Revised Task: c A (a) O N e
    Behavior: Both {c} and {a} should be true, or not {e} should be true.

Revised Task: c O (a A e)
    Behavior: {c} should be true, or both {a} and {e} should be true.

Revised Task: N c O (a) A e
    Behavior: Not {c} or {a} should be true, and {e} should be true.

Revised Task: E N c O (a) A e
    Behavior: Eventually, not {c} or {a} should be true, and {e} should be true.
  },
  "c O ( b ) U N e": {
    "expected behavior is {b} should be true once and then {c} should be true, and then {e} should not be true.": "c U (b U N(e))",
    "expected behavior is {b} should not be true, and then {c} should be true once, and then {e} should not be true.": "c U (N(b) U N(e))",
    "expected behavior is {c}, {b} and {e} should not be true.": "N(c U (b U e))",
    "expected behavior is {b} should be true once, and then {c} and {e} should not be true.": "N(c O b) U N(e)",
    "expected behavior is {b} should be true once, and then {c} or {e} should not be true.": "N(c O b) U N(c) U N(e)"
    Revised Task: c O ( b U e )
    Behavior: Either {c} is true, or {b} should be true until {e} becomes true.

    Revised Task: G(c O (b U N e))
    Behavior: Always, either {c} is true, or {b} should be true until in the next timestep {e} becomes true.

    Revised Task: c O ( b U X e )
    Behavior: Either {c} is true, or {b} should be true until {e} becomes true in the next timestep.

    Revised Task: E(c O (b U e))
    Behavior: Eventually, either {c} will be true, or {b} will be true until {e} becomes true.

    Revised Task: c O (E b U e)
    Behavior: Either {c} is true, or eventually {b} becomes true and remains true until {e} is true.

    Revised Task: c O (b A e)
    Behavior: Either {c} is true, or both {b} and {e} are true simultaneously.

    Revised Task: c O (b U G e)
    Behavior: Either {c} is true, or {b} should be true until {e} becomes and always remains true.

    Revised Task: c O (b U e) A N e
    Behavior: Either {c} is true or {b} is true until {e} becomes true, and also {e} should not be true in the next timestep.

    Revised Task: N c O (b U e)
    Behavior: Either {c} is not true, or {b} should be true until {e} becomes true.

    Revised Task: c O (b U E e)
    Behavior: Either {c} is true, or {b} should be true until {e} eventually becomes true.


  },
  "G ( E e ) U X c": {
    "expected behavior is {c} should be true after {e} ever be true at least once. Such specification omits {e}.": "G ( E (e U X c))",
    "expected behavior is {c} should be true after {e} be true consecutively at least once.": "G ( E (e A X c))",
    "expected behavior is {c} should be true after {e} be true at least twice.": "G ( E (E (e U X c)))",
    "expected behavior is {c} should be true after {e} be true at least three times.": "G ( E (E (E (e U X c))))",
    "expected behavior is {c} should be true after {e} be true at least once and don't need to be adjacent.": "G ( E (e A F(c)))"
    Revised Task: G ( E e ) U c
    Behavior: Eventually {e} should be true, and until that happens, {c} should be true in the next timestep.

    Revised Task: G ( E e ) A X c
    Behavior: {e} should eventually be true, and concurrently, {c} should be true in the next timestep.

    Revised Task: E ( G e ) U X c
    Behavior: {e} should always be true eventually, and until that becomes true, {c} should be true in the next timestep.

    Revised Task: G ( N e ) U X c
    Behavior: {e} should not be true always, and until it becomes true, {c} should be true in the next timestep.

    Revised Task: G ( E e ) U (X c A e)
    Behavior: Eventually, {e} should be true, and until that moment, {c} should be true in the next timestep and {e} should also be true.

    Revised Task: G ( E e O X c )
    Behavior: Eventually, either {e} should be true or {c} should be true in the next timestep.

    Revised Task: G ( E e ) U (X c O e)
    Behavior: Eventually, {e} should be true, and until that moment, either {c} should be true in the next timestep or {e} should be true.

    Revised Task: G ( E e ) U G c
    Behavior: Eventually, {e} should be true, and until that happens, {c} should always be true.

    Revised Task: G ( E e A X c )
    Behavior: Eventually, {e} should be true, and at the same time, {c} should be true in the next timestep.

    Revised Task: G ( E e ) U (b U c)
    Behavior: Eventually, {e} should be true, and until that happens, {c} should eventually be true, with the value of {b} not being of concern.
  },
  "N ( E e ) U X c": {
    "expected behavior is {e} and {c} should be true simultanously.": "F(E e A X c)",
    "expected behavior is {e} should be true first, and then {c} should be true.": "F(E e U X c)",
    "expected behavior is {e} and {c} should be true sequentially and don't need to be adjacent.": "F(E e A F(X c))",
    "expected behavior is {e} should be false first, and then {c} should be true.": "G(N E e U X c)",
    "expected behavior is finally {c} should be true, no matter what the value of {e} is.": "F(N E e U c)"
    Revised Task: E( N ( E e ) U X c )
    Behavior: Eventually, it should be true that not (eventually e) holds until the next timestep where c is true.

Revised Task: N ( E e ) U c
    Behavior: Not (eventually e) should hold until c becomes true.

Revised Task: N ( E e ) U (X c A G e)
    Behavior: Not (eventually e) should hold until the next timestep where c is true, and from that point onwards, e should always be true.

Revised Task: N ( E e A X c )
    Behavior: It should not be the case that e eventually becomes true and c is true in the next timestep.

Revised Task: G ( N ( E e ) U X c )
    Behavior: It should always be the case that not (eventually e) holds until the next timestep where c is true.

Revised Task: N ( E e O X c )
    Behavior: Not (eventually e) should hold or, alternatively, c should be true in the next timestep.

Revised Task: N ( G e ) U X c
    Behavior: It should not be the case that e is always true, holding until the next timestep where c is true.

Revised Task: N ( E e ) U (b A X c)
    Behavior: Not (eventually e) should hold until b becomes true, and in the next timestep after b is true, c should be true.

Revised Task: N ( E (e A c) ) U X c
    Behavior: It should not be the case that e and c eventually become true simultaneously, holding until the next timestep where c is true.

Revised Task: N ( E e ) A X c
    Behavior: It should not be the case that e eventually becomes true, and in the next timestep, c should be true.
  },
  "N f A ( N X f )": {
    "expected behavior is {f} should always be true. Such specification omits {f}.": "f A (N X f)",
    "expected behavior is {f} should be true first and then {f} should always be true.": "G(f A (N X f))",
    "expected behavior is {f} should be true for infinite times.": "G(f A (X f))",
    "expected behavior is {f} should be true at least one time and then {f} should always be true.": "G(f O (N X f))",
    "expected behavior is {f} should always be true, or {f} should not be true first, and then {f} should be true.": "G(f U (N X f))"
    Revised Task: N f A (X f)
    Behavior: The value of {f} should not be true initially, and in the next timestep, {f} should be true.

Revised Task: N f O (N X f)
    Behavior: Either the value of {f} should not be true initially, or it should not be true and then be true in the next timestep.

Revised Task: N f A (G N f)
    Behavior: The value of {f} should not be true initially and should never be true afterwards.

Revised Task: N f A (E N f)
    Behavior: The value of {f} should not be true initially and should eventually not be true at some point in the future.

Revised Task: E(N f A (N X f))
    Behavior: It should eventually be the case that {f} is not true initially and then not true followed by true in the next timestep.

Revised Task: G(N f A (N X f))
    Behavior: It should always be the case that {f} is not true initially and then not true followed by true in the next timestep.

Revised Task: N f A (U N f)
    Behavior: The value of {f} should not be true initially and should continue to not be true until a specific condition is met.

Revised Task: N (f A X f)
    Behavior: The value of {f} should not be true, and in the next timestep, {f} should be true.

Revised Task: N f U (N X f)
    Behavior: The value of {f} should not be true until it is not true and then true in the next timestep.

Revised Task: N f A (X N f)
    Behavior: The value of {f} should not be true initially, and in the next timestep, {f} should not be true.
  },
  "b A N E N a O b": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a A N E N (b O b)",
    "expected behavior is {a} and {b} should be true simultanously.": "a A b",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent.": "F(a A F(b O b))",
    "expected behavior is to make {a} and {b} be true simultanously, but {b} should not be true again.": "F(a A N E N b)",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent, but {b} should not be true again.": "F(a A F(N E N b))"
    Revised Task: b A N E a O b
    Behavior: {b} should always be true and either {a} should be eventually true or {b} should be true.

Revised Task: b A E N a O b
    Behavior: {b} should always be true and eventually, {a} should not be true or {b} should be true.

Revised Task: b A G N a O b
    Behavior: {b} should always be true and always, {a} should not be true or {b} should be true.

Revised Task: b O N E N a O b
    Behavior: Either {b} should be true or it should not be the case that eventually {a} should not be true or {b} should be true.

Revised Task: b A N E N a A b
    Behavior: {b} should always be true and it should not be the case that eventually {a} should not be true and {b} should be true.

Revised Task: b A N E N a U b
    Behavior: {b} should always be true and it should not be the case that eventually {a} should not be true until {b} is true.

Revised Task: N b A E N a O b
    Behavior: It should not be the case that {b} is always true and eventually {a} should not be true or {b} should be true.

Revised Task: b A N E a
    Behavior: {b} should always be true and it should not be the case that {a} should be eventually true.

Revised Task: b A X N E N a O b
    Behavior: {b} should always be true and in the next timestep, it should not be the case that eventually {a} should not be true or {b} should be true.

Revised Task: b A N G N a O b
    Behavior: {b} should always be true and it should always be the case that {a} should not be true or {b} should be true.


  },
  "e A N E a U b": {
    "expected behavior is {a} and {b} should be true simultanously.": "e A N E (a A b)",
    "expected behavior is {a}, {b} should be true sequentially.": "e A N E (a U b)",
    "expected behavior is {b} should not be true first, and then {b} or {c} should be true.": "e A N E (a U (b O X(e)))",
    "expected behavior is at least one of {a}, {b} should be true.": "e A N E (a O b)",
    "expected behavior is {e} should always be true, and then {a} and {b} should eventually be true.": "G(e A N E (a U b))"
    Revised Task: e A N (E a U b)
    Behavior: The value of {e} must always be true, and the condition {a} becoming true until {b} becomes true should not happen eventually.

Revised Task: e A N E (a O b)
    Behavior: The value of {e} must always be true, and it must never be the case that either {a} or {b} becomes true eventually.

Revised Task: e A N E (a U X b)
    Behavior: The value of {e} must always be true, and it should not occur that {a} remains true until in the next time step, {b} becomes true.

Revised Task: e A (E a U b)
    Behavior: The value of {e} must always be true, and {a} must eventually become true until {b} becomes true.

Revised Task: e A E (a A b)
    Behavior: The value of {e} must always be true, and both {a} and {b} must eventually be true simultaneously.

Revised Task: e A N G (a U b)
    Behavior: The value of {e} must always be true, and it should never be the case that {a} remains true until {b} becomes true, consistently over time.

Revised Task: e O N E (a U b)
    Behavior: Either {e} or the condition where {a} becoming true until {b} becomes true should not happen eventually.

Revised Task: N e A E (a U b)
    Behavior: The value of {e} must never be true, and {a} must eventually become true until {b} becomes true.

Revised Task: e A N E (a U G b)
    Behavior: The value of {e} must always be true, and it should not be the case that {a} remains true until {b} always remains true.

Revised Task: e A E G (a U b)
    Behavior: The value of {e} must always be true, and eventually, it must be the case that {a} remains true until {b} becomes true, consistently over time.


  },
  "( E c A f O f )": {
    "expected behavior is {c} should always be true. Such specification omits {c}.": "G(c A f O f)",
    "expected behavior is {f} should be true twice, and then {c} should be true. Such specification omits {c}.": "( G f A f A c )",
    "expected behavior is {f} should be true twice, and then {c} should be true. Such specification omits the necessity of {f} being true twice.": "( G f A f A c ) O ( G f A f A c )",
    "expected behavior is {c} should be true and {f} should be true twice, but with no temporal relationship between them. Such specification omits the temporal relationship between {c} and {f}.": "G(f O f) A c",
    "expected behavior is {f} should be true twice and then {c} should be true. Such specification omits the necessity of {f} being true twice.": "(G(f A f) A c) O (G(f A f) A c)"
    Revised Task: E(c A f O f)
    Behavior: {c} and {f} should be true eventually, or {f} should be true eventually.

    Revised Task: E(c O f)
    Behavior: Either {c} or {f} should be true eventually.

    Revised Task: E(c A G(f))
    Behavior: {c} should be true eventually, and {f} should always be true.

    Revised Task: G(E c A f)
    Behavior: It should always be the case that either {c} becomes true eventually and {f} is true, or {f} becomes true.

    Revised Task: E(c A X(f))
    Behavior: {c} should be true eventually, and in the next timestep after {c} becomes true, {f} should also be true.

    Revised Task: E(c U f)
    Behavior: {c} should be true until {f} becomes true.

    Revised Task: N(E c A f)
    Behavior: It should not be the case that {c} becomes true eventually and {f} is true.

    Revised Task: E(c A f A N(f))
    Behavior: {c} and {f} should be true eventually, and at some point, {f} should be false.

    Revised Task: E(c A (f U c))
    Behavior: {c} should be true eventually, and {f} should be true until another {c} becomes true.

    Revised Task: E(N(c) A f)
    Behavior: {c} should not be true eventually, and {f} should be true.


  },
  "E ( a U a U b )": {
    "expected behavior is {a} should be true twice. Such specification omits {a}.": "F(a U (a U b))",
    "expected behavior is {a} and {b} should be true sequentially.": "F(a U b)",
    "expected behavior is {a} and {b} should be true simultanously.": "F(a A b)",
    "expected behavior is {a} should be true twice, and then {b} should be true.": "F(a U (a U F(b)))",
    "expected behavior is {a} should be true twice, and then {b} should be true, no matter what the value of {a} is.": "F(a U (a U b))"
    Revised Task: E ( a U a O b )
    Behavior: Eventually, either {a} should always be true or {b} should be true.

Revised Task: G ( a U a U b )
    Behavior: Always, {a} should be true until {b} becomes true.

Revised Task: E ( a U (a A b) )
    Behavior: Eventually, {a} should be true and continue to be true until both {a} and {b} are true simultaneously.

Revised Task: E ( a U (a O X b) )
    Behavior: Eventually, {a} should be true and continue to be true until either {a} or {b} is true in the next timestep.

Revised Task: E ( a A (a U b) )
    Behavior: {a} should be true and eventually {a} should continue to be true until {b} becomes true.

Revised Task: E ( X a U b )
    Behavior: Eventually, in the next timestep {a} should be true until {b} becomes true.

Revised Task: E ( a U N b )
    Behavior: Eventually, {a} should be true and continue to be true until {b} is not true.

Revised Task: E ( a U (a U G b) )
    Behavior: Eventually, {a} should be true and continue to be true until {b} always remains true.

Revised Task: E ( a U (E a U b) )
    Behavior: Eventually, {a} should be true and continue to be true until it's eventually the case that {a} is true until {b} becomes true.

Revised Task: E ( a U (a U E b) )
    Behavior: Eventually, {a} should be true and continue to be true until it's eventually the case that {b} becomes true.


  },
  "N E e U N N E e": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U N N E e",
    "expected behavior is {e} should be true twice. Such specification omits one {e}.": "N E (e U N N E e)",
    "expected behavior is {e} should be true consecutively. Such specification omits the requirement of consecutive {e}.": "N E e U N E e",
    "expected behavior is {e} should be true twice, and no other atomic proposition should be true. Such specification omits the requirement of no other atomic proposition.": "N (E e U N N E e)",
    "expected behavior is only one atomic proposition should be true. Such specification omits the requirement of only one atomic proposition.": "N E (e U N E e)"
    Revised Task: N E e U E e
    Behavior: Either {e} should always eventually be true, or it must be eventually true without the initial negation.

Revised Task: E e U N E e
    Behavior: Either {e} should eventually be true, or it should not eventually be true.

Revised Task: N E e A N E e
    Behavior: {e} should not eventually be true, and it should also not be true in the next step.

Revised Task: N E (e U N e)
    Behavior: It should not be the case that {e} eventually becomes true until {e} is not true.

Revised Task: E (N e U E e)
    Behavior: Eventually, {e} should not be true until it is eventually true.

Revised Task: N E (e A N E e)
    Behavior: It should not be the case that {e} and not {e} eventually be true.

Revised Task: N E (e O N E e)
    Behavior: It should not be the case that {e} is true or it is not eventually true.

Revised Task: G (e U N N E e)
    Behavior: Always, {e} should be true until it is not true in the next two steps or eventually true.

Revised Task: N G e U N E e
    Behavior: It should not be the case that {e} is always true, or it should not eventually be true.

Revised Task: E (N e U G e)
    Behavior: Eventually, {e} should not be true until it is always true.


  },
  "N X b U N N G e": {
    "expected behavior is {e} should be true eventually, but {b} should be true first.": "N X b U N (b U G e)",
    "expected behavior is {b} should eventually be true, but {e} should be true first.": "N X e U N (e U G b)",
    "expected behavior is {e} should eventually be true, and it should be true again after {b} is false.": "N X b U N (b U (N e))",
    "expected behavior is {b} and {e} should eventually be true simultanously.": "N X b U N (b A G e)",
    "expected behavior is {e} should always be true, or {b} should be true first, and then {e} should be true.": "N X b U N (b O G e)"
    Revised Task: N X (b U N G e)
    Behavior: The negation of {b} being true in the next timestep is maintained until {e} is always true in the future.

    Revised Task: N X b U G e
    Behavior: The negation of {b} being true in the next timestep is maintained until {e} is always true.

    Revised Task: N X b A N N G e
    Behavior: {b} should not be true in the next timestep and {e} should not always be true.

    Revised Task: N X b O N N G e
    Behavior: Either {b} is not true in the next timestep or {e} is not always true.

    Revised Task: N X (b U N E e)
    Behavior: The negation of {b} being true in the next timestep is maintained until eventually, {e} is true.

    Revised Task: N X (b U N (N G e))
    Behavior: The negation of {b} being true in the next timestep is maintained until it is not the case that {e} is always true.

    Revised Task: N X (b U E e)
    Behavior: The negation of {b} being true in the next timestep is maintained until eventually {e} is true.

    Revised Task: N X b U N G (N e)
    Behavior: The negation of {b} being true in the next timestep is maintained until {e} is never always true.

    Revised Task: N X (b U N X e)
    Behavior: The negation of {b} being true in the next timestep is maintained until the negation of {e} being true in the next timestep.

    Revised Task: N X (b U (N G e))
    Behavior: The negation of {b} being true in the next timestep is maintained until it is not the case that {e} is always true.
  },
  "X N f O ( X d )": {
    "expected behavior is {f} should be true always. Such specification omits {f}.": "X N f O (X d O f)",
    "expected behavior is {f} should be true first. Such specification omits {f}.": "X N f O (X (d O f))",
    "expected behavior is {d} and {f} should be true simultanously.": "X N f O (X (d A f))",
    "expected behavior is {d} should be true first, or {f} should be true first.": "X N f O (X (d O f) U X (f O d))",
    "expected behavior is {d} and {f} should be true sequentially but not necessarily adjacent.": "X N f O (X F(d A f))"
    Revised Task: X N (f O X d)
    Behavior: In the next timestep, it should not be true that {f} is true or {d} is true in the subsequent timestep.

    Revised Task: X (N f O d)
    Behavior: In the next timestep, either {f} should not be true or {d} should be true.

    Revised Task: X N (f A X d)
    Behavior: In the next timestep, it should not be true that both {f} and {d} in the subsequent timestep are true.

    Revised Task: X (f O X N d)
    Behavior: In the next timestep, either {f} should be true or in the subsequent timestep {d} should not be true.

    Revised Task: X (f A N X d)
    Behavior: In the next timestep, {f} should be true and it should not be the case that {d} is true in the subsequent timestep.

    Revised Task: N X (f O d)
    Behavior: It should not be the case that in the next timestep, either {f} or {d} is true.

    Revised Task: X (N f O N d)
    Behavior: In the next timestep, either {f} should not be true or {d} should not be true.

    Revised Task: X N f A (X d)
    Behavior: In the next timestep, {f} should not be true and {d} should be true in the subsequent timestep.

    Revised Task: X (f U X d)
    Behavior: In the next timestep, {f} should be true until {d} becomes true in the subsequent timestep.

    Revised Task: G (X N f O d)
    Behavior: It should always be the case that in the next timestep, {f} should not be true or {d} should be true.
  },
  "N ( f A E X e )": {
    "expected behavior is {f} should eventually be true, but {e} should never be true. Such specification omits {e}.": "N ( f A E X (f U e))",
    "expected behavior is {f} should be true first, and then {e} should be true eventually.": "N (f A X E(e))",
    "expected behavior is {f} should eventually be true, and {e} should be true at least once.": "N (f A E (e O X e))",
    "expected behavior is {e} should always be true, or {f} and {e} be true, but subsequently {e} should be true.": "G (f A E (e U X e))",
    "expected behavior is {f} and {e} should be true simultanously, and then {e} should always be true.": "N (f A G (e A X e))"
    Revised Task: N (f A E(e))
    Behavior: {f} should not be true, or {e} should eventually be true without the next timestep constraint.

    Revised Task: N (f O E X e)
    Behavior: {f} should not be true, or eventually, {e} should be true in the next timestep.

    Revised Task: G (f A E X e)
    Behavior: Always, {f} should be true and eventually, {e} should be true in the next timestep.

    Revised Task: N (E X f A e)
    Behavior: It is not the case that eventually, in the next timestep {f} should be true and {e} should be true simultaneously.

    Revised Task: N (f A G X e)
    Behavior: {f} should not be true, or {e} should always be true in the next timestep.

    Revised Task: E N (f A X e)
    Behavior: Eventually, it should not be the case that {f} is true and {e} is true in the next timestep.

    Revised Task: N (f U E X e)
    Behavior: {f} should not be true, or {e} should eventually be true in the next timestep after some condition is met.

    Revised Task: N (f A X E e)
    Behavior: {f} should not be true, or eventually, {e} should be true at some point after the next timestep.

    Revised Task: N (f A X (e O g))
    Behavior: {f} should not be true, or in the next timestep, either {e} or {g} should be true.

    Revised Task: E (f A X N e)
    Behavior: Eventually, {f} should be true and in the next timestep, {e} should not be true.
  },
  "( f A X E c )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f A X (E c)",
    "expected behavior is {f} and {c} should be true simultanously.": "(f A c)",
    "expected behavior is {f} and {c} should be true sequentially and don't need to be adjacent.": "(f A F(E c))",
    "expected behavior is more than one atomic proposition in {{f}, {c}} should be true.": "(f O E c)",
    "expected behavior is {f} shoule be true, or {f} should not be true first, and then {f} or {c} should be true.": "(f U (E X c))"
    Revised Task: (f A X c)
    Behavior: {f} should be true and in the next timestep, {c} should be true.

Revised Task: E(f A X (N c))
    Behavior: Eventually, {f} should be true and in the next timestep, {c} should not be true.

Revised Task: E(f O X E c)
    Behavior: Eventually, either {f} or {c} in the next timestep should be true.

Revised Task: (f A G E c)
    Behavior: {f} should be true and {c} should eventually always be true.

Revised Task: (f A X (c U f))
    Behavior: {f} should be true and in the next timestep, {c} should be true until {f} becomes true again.

Revised Task: G(f A X c)
    Behavior: Always, {f} should be true and in the next timestep, {c} should be true.

Revised Task: (f A E(c O f))
    Behavior: {f} should be true and eventually, either {c} or {f} should be true.

Revised Task: E(f A X (c A f))
    Behavior: Eventually, {f} should be true and in the next timestep, both {c} and {f} should be true.

Revised Task: E(N f A X c)
    Behavior: Eventually, {f} should not be true and in the next timestep, {c} should be true.

Revised Task: (f U X E c)
    Behavior: {f} should be true until, in the next timestep, {c} eventually becomes true.
  },
  "N ( f O N X d )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "F(f O N X d)",
    "expected behavior is to make {f} and {d} be true sequentially and don't need to be adjacent.": "N(f O N F(d))",
    "expected behavior is to make {f} and {d} be true simultanously.": "N(f A d)",
    "expected behavior is more than one atomic proposition in {{f}, {d}} should be true.": "N(f O d)",
    "expected behavior is {f} and {d} should be true simultanously, and then {d} should always be true.": "N(f A G(d))"
    Revised Task: N (f O X d)
    Behavior: Negate the situation where either {f} becomes true or {d} becomes true in the next timestep.

Revised Task: N (f O N d)
    Behavior: Negate the situation where either {f} becomes true or {d} is always false.

Revised Task: N (f A N X d)
    Behavior: Negate the situation where {f} and in the next timestep {d} are not true.

Revised Task: N (f O G d)
    Behavior: Negate the situation where either {f} becomes true or {d} is always true.

Revised Task: N (f U N X d)
    Behavior: Negate the situation where {f} is true until it's not true and in the next timestep {d} is not true.

Revised Task: G (f O N X d)
    Behavior: Always, either {f} becomes true or in the next timestep {d} is not true.

Revised Task: N (E f O N X d)
    Behavior: Negate the situation where eventually {f} becomes true or in the next timestep {d} is not true.

Revised Task: N (f O X N d)
    Behavior: Negate the situation where either {f} becomes true or in the next timestep {d} is false.

Revised Task: N (N f O N X d)
    Behavior: Negate the situation where {f} is not true or in the next timestep {d} is not true.

Revised Task: N (f O N E d)
    Behavior: Negate the situation where either {f} becomes true or eventually {d} is not true.
  },
  "G a O N a O ( b )": {
    "expected behavior is {b} should not be true and then {a} should be true. Such specification omits {a}.": "G(a O N a O b)",
    "expected behavior is {b} should always be true.": "G(a O N a A b)",
    "expected behavior is to make {a} and {b} be true simultanously.": "G(a A b)",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent.": "G(a A F(b))",
    "expected behavior is more than one atomic proposition in {{a}, {b}} should be true.": "G(a O b)"
    Revised Task: G a A N a O (b)
Behavior: {a} should always be true and not {a} or {b} should be true at some point.

Revised Task: G a O N (a A b)
Behavior: {a} should always be true or not ({a} and {b}) should be true at some point.

Revised Task: G a O N b
Behavior: {a} should always be true or not {b} should be true at some point.

Revised Task: G (a O N a) U b
Behavior: {a} or not {a} should always be true until {b} becomes true.

Revised Task: G (a O b) U N a
Behavior: {a} or {b} should always be true until not {a} becomes true.

Revised Task: G a U (N a O b)
Behavior: {a} should always be true until not {a} or {b} becomes true.

Revised Task: G a O (N a A b)
Behavior: {a} should always be true or not {a} and {b} should be true at some point.

Revised Task: G (a U b) O N a
Behavior: {a} should always be true until {b} becomes true or not {a} should be true at some point.

Revised Task: G (a O N b) U a
Behavior: {a} or not {b} should always be true until {a} becomes true again.

Revised Task: G a O (N a U b)
Behavior: {a} should always be true or not {a} should be true until {b} becomes true.
  },
  "G a U N a A ( a )": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "G a U (a A (a))",
    "expected behavior is {a} should be true in the future, but not now.": "G (N a) U (a A (a))",
    "expected behavior is {a} should be true eventually, but not now.": "F (N a) U (a A (a))",
    "expected behavior is {a} should be true in the future, and always be true.": "G (N a) U (a A G(a))",
    "expected behavior is {a} should be true eventually, and always be true.": "F (N a) U (a A G(a))"
    Revised Task: G a U (a)
    Behavior: {a} should always be true until {a} is true, essentially meaning {a} should always be true.

Revised Task: G a U (N a)
    Behavior: {a} should always be true until {a} is not true, meaning {a} starts true but eventually becomes false.

Revised Task: G a U (a A a)
    Behavior: {a} should always be true until a condition where {a} and {a} are true, which is simply {a} being true.

Revised Task: G a U (a O N a)
    Behavior: {a} should always be true until either {a} is true or {a} is not true, essentially always true since one of the conditions is always met.

Revised Task: G (a U a)
    Behavior: It's always the case that {a} should be true until {a} is true again, meaning {a} should always be true.

Revised Task: G a U X(a)
    Behavior: {a} should always be true until the next timestep where {a} is true, indicating a continuous truth value for {a}.

Revised Task: G a U E(a)
    Behavior: {a} should always be true until {a} is eventually true, which does not change the overall behavior of {a} being always true.

Revised Task: G a U (N a O a)
    Behavior: {a} should always be true until either {a} is not true or {a} is true, which means {a} remains true as one condition is always satisfied.

Revised Task: G (a U N a) A a
    Behavior: It's always the case that {a} should be true until it's not true, and then {a} must be true again, implying a temporary switch in the truth value of {a}.

Revised Task: N G a U (a)
    Behavior: It's not the case that {a} should always be true until {a} is true, implying that {a} may not always hold true.
  },
  "N X ( e ) A ( c )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "N X (e) A (c)",
    "expected behavior is to make {e} and {c} be true simultanously.": "N(e A c)",
    "expected behavior is to make {e} and {c} be true sequentially and don't need to be adjacent.": "N X (e) A F(c)",
    "expected behavior is to make {e}, {c} finally be true simultanously.": "N(e A c)",
    "expected behavior is more than one atomic proposition in {{e}, {c}} should be true.": "N(e O c)",
    "expected behavior is {e} shoule be true, or {e} should not be true first, and then {e} or {c} should be true.": "N X (e) A (e O X(c))",
    "expected behavior is {e} and {c} should be true simultanously, and then {c} should always be true.": "N X (e) A G(c)",
    "expected behavior is finally {c} should be true, no matter what the value of {e} is.": "N X (e) U (c)",
    "expected behavior is {c} should always be true, or {e} should be true, but subsequently {c} should be true.": "G(N X (e) U (c))"
    Revised Task: N X (e O c)
    Behavior: In the next timestep, either {e} or {c} should be true.

Revised Task: N X (e) A N X (c)
    Behavior: In the next timestep, both {e} and {c} should be true.

Revised Task: N X (G(e) A c)
    Behavior: In the next timestep, {c} should be true and {e} should always be true thereafter.

Revised Task: G(N X (e) A (c))
    Behavior: It should always be the case that in the next timestep, {e} is true and {c} is also true.

Revised Task: N X (U(e, c))
    Behavior: In the next timestep, {e} should be true until {c} becomes true.

Revised Task: N X (e A E(c))
    Behavior: In the next timestep, {e} should be true and {c} should eventually be true.

Revised Task: N X (e) O (c)
    Behavior: In the next timestep, either {e} should be true or {c} should be true.

Revised Task: E(N X (e) A (c))
    Behavior: Eventually, it should be the case that in the next timestep, {e} is true and {c} is also true.

Revised Task: N X (e A G(c))
    Behavior: In the next timestep, {e} should be true and {c} should always be true thereafter.

Revised Task: N X (e) U (c)
    Behavior: In the next timestep, {e} should be true until {c} becomes true.
  },
  "a A E E ( b ) U b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A (a U b)",
    "expected behavior is {b} should be true eventually, and then {b} should always be true.": "F(a A E(b U b))",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "F(a A E(E(b) U b))",
    "expected behavior is {a} and {b} should be true simultanously, and then {b} should always be true.": "F(a A G(b U b))",
    "expected behavior is finally {b} should be true, no matter what the value of {a} is.": "F(a U b)"
    Revised Task: a A E (b U b)
    Behavior: {a} should be true eventually, and {b} should be true eventually.

Revised Task: a A G E (b U b)
    Behavior: {a} should be always true, and {b} should eventually be true.

Revised Task: a A E E (b) A b
    Behavior: {a} and {b} should be true eventually.

Revised Task: a A E E (X b) U b
    Behavior: {a} should be true eventually, and {b} should be true in the next timestep, or eventually {b} should be true.

Revised Task: a A N E (b) U b
    Behavior: {a} should be true eventually, and {b} should not be true until {b} is true.

Revised Task: a A E (b O b)
    Behavior: {a} should be true eventually, and either of {b} should be true eventually.

Revised Task: a U E E (b) U b
    Behavior: {a} should be true until it is eventually true that {b} is eventually true.

Revised Task: a A E (b U X b)
    Behavior: {a} should be true eventually, and {b} should be true until {b} is true in the next timestep.

Revised Task: a O E E (b) U b
    Behavior: Either {a} or the condition that {b} is eventually true should be true until {b} is true.

Revised Task: a A E (b U G b)
    Behavior: {a} should be true eventually, and {b} should be true until {b} is always true.


  },
  "( d A X b U N d )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d A X (b U N(d))",
    "expected behavior is {d} should be true after {b} and {d} should not be true simultaneously.": "(d A X b) U N(d)",
    "expected behavior is {b} should be true, then make {d} always true.": "(d A X G(b)) U N(d)",
    "expected behavior is {d} should be true first, then make {b} true infinite times.": "F(d A X b) U N(d)",
    "expected behavior is {d} should be true, and then {b} should not be true infinitely.": "(d A X F(b)) U N(d)"
    Revised Task: (d A X (b U d))
    Behavior: {d} must be true and then {b} or {d} must become true in the next timestep.

    Revised Task: (d A G(b U N d))
    Behavior: {d} should always be true, and {b} should be true until not {d} is true.

    Revised Task: E(d A X (b U d))
    Behavior: Eventually, {d} will be true and in the next timestep, either {b} or {d} must be true.

    Revised Task: (d O X (b U N d))
    Behavior: Either {d} is true, or in the next timestep, {b} should be true until not {d} is true.

    Revised Task: (d A X (E b U d))
    Behavior: {d} must be true and then eventually {b} or {d} must be true in the next timestep.

    Revised Task: G(d A X b U N d)
    Behavior: It should always be the case that {d} is true and then {b} should be true until not {d} is true.

    Revised Task: (d A X (b U N (E d)))
    Behavior: {d} must be true and then {b} should be true until it is not the case that {d} will eventually be true.

    Revised Task: (d A X (N b U d))
    Behavior: {d} must be true and then it should not be {b} until {d} is true in the next timestep.

    Revised Task: (N d A X (b U d))
    Behavior: It should not be {d}, and in the next timestep, either {b} or {d} must be true.

    Revised Task: (d U X (b A N d))
    Behavior: Either {d} should be true, or in the next timestep, {b} should be true and not {d}.


  },
  "( d A E b U N d )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d A (E (b U N d))",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {b} or {d} should be true.": "(d A (E b O N d))",
    "expected behavior is {b} and {d} should be true simultanously, and then {d} should always be true.": "(d A (E b A G d))",
    "expected behavior is more than one atomic proposition in {{b}, {d}} should be true.": "(d A (E b O d))",
    "expected behavior is finally {d} should be true, no matter what the values of {b} are.": "(d A (E b U d))"
    Revised Task: (d A E(b U d))
    Behavior: The value of {d} should always be true and eventually {b} should be true, after which {d} should be true again.

Revised Task: (d A E b A N d)
    Behavior: {d} should always be true and eventually {b} should be true. In the next timestep, {d} should also be true.

Revised Task: (E d A E b U d)
    Behavior: Eventually, both {d} and {b} should be true, with {d} being true until {b} is true.

Revised Task: (d O E b U N d)
    Behavior: Either {d} or eventually {b} should be true, with {d} being true in the next timestep.

Revised Task: (d A G b U N d)
    Behavior: {d} should always be true and {b} should always be true, followed by {d} being true in the next timestep.

Revised Task: (E d A b U N d)
    Behavior: Eventually {d} and {b} should be true, with {d} being true in the next timestep.

Revised Task: (d A E b A G d)
    Behavior: {d} should always be true, eventually {b} should be true, and {d} should always be true thereafter.

Revised Task: (d A E(b U G d))
    Behavior: {d} should always be true, and eventually {b} should be true until {d} is always true.

Revised Task: (d U E b U N d)
    Behavior: {d} should be true until eventually {b} is true, followed by {d} being true in the next timestep.

Revised Task: (d A E(b O N d))
    Behavior: {d} should always be true, and eventually either {b} or {d} in the next timestep should be true.
  },
  "G ( N f ) A X N f": {
    "expected behavior is {f} should always be true. Such specification omits {f}.": "G(f A X N f)",
    "expected behavior is {f} should eventually be true, not necessarily always true.": "F(f A X N f)",
    "expected behavior is {f} should eventually be true, and then it should always be true.": "F(f A G(X N f))",
    "expected behavior is {f} should eventually be true, and then it should eventually be true again.": "F(f A X F(N f))",
    "expected behavior is {f} should eventually be true, and then it should be true for one more time.": "F(f A X (N f U f))"
    Revised Task: G ( N f ) A N f
    Behavior: {f} should not be true initially and subsequently, {f} should not be true at the next timestep.

Revised Task: G ( N f ) O X N f
    Behavior: Either initially {f} should not be true, or in the next timestep, {f} should not be true.

Revised Task: G ( N f ) A X f
    Behavior: {f} should not be true initially, and in the next timestep, {f} should be true.

Revised Task: G ( N f ) A G N f
    Behavior: {f} should not be true initially and should never be true subsequently.

Revised Task: G ( N f ) A E N f
    Behavior: {f} should not be true initially and at some point in the future, {f} should not be true again.

Revised Task: G ( N f ) A U N f
    Behavior: {f} should not be true initially until at some point, {f} is not true again.

Revised Task: G ( N f ) U X N f
    Behavior: {f} should not be true initially until the next timestep, where {f} should not be true again.

Revised Task: G ( N f ) A X ( N f A N f )
    Behavior: {f} should not be true initially, and in the next timestep, {f} should not be true and remain not true.

Revised Task: G ( f ) A X N f
    Behavior: {f} should be true initially, and in the next timestep, {f} should not be true.

Revised Task: E ( N f ) A X N f
    Behavior: Eventually, {f} should not be true, and in the next timestep after that event, {f} should not be true.
  },
  "N N ( e U b ) U d": {
    "expected behavior is {d} should be true eventually, and {e} should be true first. Such specification omits {e}.": "N N ( e U (b U d) )",
    "expected behavior is {b} and {d} should be true simultanously.": "N N ( e U b ) A d",
    "expected behavior is {b} and {d} should be true sequentially and don't need to be adjacent.": "N N ( e U b ) A F(d)",
    "expected behavior is to make {e}, {b} and {d} be true sequentially and don't need to be adjacent.": "N N ( e A F(b A F(d)))",
    "expected behavior is {e}, {b} and {d} finally be true simultanously.": "N N ( e A b A d)"
    Revised Task: N (e U b) U d
    Behavior: {e} should be true until {b} becomes true, followed by {d} becoming true in the next timestep.

    Revised Task: N N (e A b) U d
    Behavior: {e} and {b} should be true at the same time, followed by {d} becoming true in the next timestep.

    Revised Task: N N (e U X b) U d
    Behavior: {e} should be true until {b} becomes true in the next timestep, followed by {d} becoming true.

    Revised Task: N N (G e U b) U d
    Behavior: {e} should always be true until {b} becomes true, followed by {d} becoming true in the next timestep.

    Revised Task: N N (e U b) A d
    Behavior: {e} should be true until {b} becomes true, and {d} should also be true in the next timestep.

    Revised Task: N N (e O b) U d
    Behavior: Either {e} or {b} should be true, followed by {d} becoming true in the next timestep.

    Revised Task: N N (e U b) O d
    Behavior: {e} should be true until {b} becomes true, or {d} becomes true in the next timestep.

    Revised Task: E N (e U b) U d
    Behavior: Eventually, {e} should be true until {b} becomes true, followed by {d} becoming true in the next timestep.

    Revised Task: N N (e U b) U G d
    Behavior: {e} should be true until {b} becomes true, followed by {d} always being true.

    Revised Task: N N (e U b) U E d
    Behavior: {e} should be true until {b} becomes true, followed by {d} eventually becoming true.


  },
  "( X a ) A N a U a": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "G(a) A N a U a",
    "expected behavior is {a} should always be true, and then {a} will be true again. Such specification omits {a}.": "G(a) A N a U G(a)",
    "expected behavior is {a} should always be true, and it will be true again if it has been false before. Such specification omits {a}.": "G(a) A N a U F(a)",
    "expected behavior is {a} should not be true, and then {a} will be true again. Such specification omits {a}.": "X a A N a U a",
    "expected behavior is the sequence of {a} should be true and then false, and then true again. Such specification omits {a}.": "F(a) A N X a U a"
    Revised Task: (Xa) A Na U (a A b)
    Behavior: {a} should be true in the next timestep and not true now. Eventually, {a} and {b} should both be true.

Revised Task: (Xa) A G(a U b)
    Behavior: {a} should be true in the next timestep, and either {a} should always be true or eventually {b} should be true.

Revised Task: (Xa) O Na U a
    Behavior: Either {a} should be true in the next timestep or not true now, and eventually, {a} should be true.

Revised Task: E(Xa) A Na U a
    Behavior: Eventually, {a} should be true in the next timestep, and not true now, but eventually, {a} should be true.

Revised Task: (Xa) A Na U E(a)
    Behavior: {a} should be true in the next timestep and not true now, and eventually, {a} should be true.

Revised Task: (Xa) A Na U G(a)
    Behavior: {a} should be true in the next timestep and not true now, and {a} should always be true eventually.

Revised Task: (Xa) A Na U (a O b)
    Behavior: {a} should be true in the next timestep and not true now. Eventually, either {a} or {b} should be true.

Revised Task: (Xa) A Na U X(a)
    Behavior: {a} should be true in the next timestep and not true now, and in the next timestep after that, {a} should be true.

Revised Task: (Xa) A Na A a
    Behavior: {a} should be true in the next timestep and not true now, and {a} should be true.

Revised Task: (Xa) A Na U (a A G(b))
    Behavior: {a} should be true in the next timestep and not true now, and eventually, {a} and always {b} should be true.


  },
  "E N ( X N c ) A a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "E N ( X N c ) A a",
    "expected behavior is {c} should always be true.": "E N ( G (c) ) A a",
    "expected behavior is {a} should be true after {c} is true.": "E N ( X N (c A a))",
    "expected behavior is {a} should remain true no matter what the value of {c} is.": "G ( E N ( X N c) A a)",
    "expected behavior is {a} should be true after {c} is true at least once.": "F ( E N ( X N c) A a)"
    Revised Task: E (X N c) A a
    Behavior: Eventually, it must be the case that in the next time step, {c} is not true. Also, {a} must be true eventually.

    Revised Task: E N (X c) A a
    Behavior: Eventually, it must be the case that in the next time step, {c} is true, and this must not happen. Also, {a} must be true eventually.

    Revised Task: E N (X N c) O a
    Behavior: Eventually, it must be the case that in the next time step, {c} is not true, or eventually {a} must be true.

    Revised Task: G N (X N c) A a
    Behavior: Always, it must be the case that in the next time step, {c} is not true, and {a} must be true eventually.

    Revised Task: E (X N c) U a
    Behavior: Eventually, {a} must be true and this must hold until it is the case that in the next time step, {c} is not true.

    Revised Task: E N (X N (c A a))
    Behavior: Eventually, it must not be the case that in the next time step, both {c} and {a} are true.

    Revised Task: E N (X N c) A G a
    Behavior: Eventually, it must be the case that in the next time step, {c} is not true, and {a} must always be true.

    Revised Task: E N (X c) U a
    Behavior: Eventually, {a} must be true and this must hold until it is the case that in the next time step, {c} is true.

    Revised Task: E N (G N c) A a
    Behavior: Eventually, it must be the case that always {c} is not true, and {a} must be true eventually.

    Revised Task: E N (X N c) A X a
    Behavior: Eventually, it must be the case that in the next time step, {c} is not true, and in the next time step, {a} must be true.
  },
  "E ( X N f ) A a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "E ( X (N f A a))",
    "expected behavior is to make {f} and {a} be true simultanously.": "E ( X (f A a))",
    "expected behavior is to make {f} and {a} be true sequentially and don't need to be adjacent.": "E ( X (f A F(a)))",
    "expected behavior is to make {f}, {a} finally be true simultanously.": "E ( X (f A a)) A F(a)",
    "expected behavior is more than one atomic proposition in {{f}, {a}} should be true.": "E ( X (f O a))"
  },
  "( E X ( E E f ) )": {
    "expected behavior is {f} should be true repeatedly. Such specification omits {f}.": "( E X ( E E f ) ) O f",
    "expected behavior is {f} should be true repeatedly, and then {f} should always be true.": "G(E X (E E f))",
    "expected behavior is {f} should be true twice, and then {f} should always be true.": "G(E X (E f))",
    "expected behavior is {f} should be true twice, and then {f} or other atomic proposition should be true.": "F(E X (E f))",
    "expected behavior is {f} should be true at least once.": "F(E X (E E f))"
    Revised Task: E(X f) A a
    Behavior: Eventually, in the next timestep, ff should be true, and aa should always be true.

Revised Task: E(X N f) O a
    Behavior: Eventually, in the next timestep, ff should not be true, or aa should be true at some point.

Revised Task: G(X N f) A a
    Behavior: Always, in the next timestep, ff should not be true, and aa should always be true.

Revised Task: E(X N f) A G(a)
    Behavior: Eventually, in the next timestep, ff should not be true, and aa should be true forever.

Revised Task: E(X N f) A N a
    Behavior: Eventually, in the next timestep, ff should not be true, and aa should not be true in the next timestep.

Revised Task: E(N f) A a
    Behavior: Eventually, ff should not be true, and aa should always be true.

Revised Task: E(X N f) U a
    Behavior: Eventually, in the next timestep, ff should not be true, until aa becomes true.

Revised Task: E(X N f) A E(a)
    Behavior: Eventually, in the next timestep, ff should not be true, and eventually, aa should be true.

Revised Task: E(E(X N f) A a)
    Behavior: Eventually, it should be the case that, in the next timestep, ff is not true and aa is always true.

Revised Task: E(X N f) A X a
    Behavior: Eventually, in the next timestep, ff should not be true, and in the next timestep, aa should be true.
  },
  "( G X ( N N f ) )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U (G X (N N f))",
    "expected behavior is to make {f} be true eventually.": "G(f U (G X (N N f)))",
    "expected behavior is to make {f} not be true eventually.": "G(f O (G X (N N f)))",
    "expected behavior is to make {f} be true infinitely often.": "G(f A (G X (N N f)))",
    "expected behavior is to make {f} be true at least once.": "F(f U (G X (N N f)))"
    Revised Task: G X (f)
    Behavior: In the next timestep and in all subsequent timesteps, {f} should be true.

    Revised Task: G X (N f)
    Behavior: In the next timestep and in all subsequent timesteps, {f} should not be true.

    Revised Task: X (N N f)
    Behavior: In the next timestep, {f} should be true.

    Revised Task: G (N f)
    Behavior: In all timesteps, {f} should not be true.

    Revised Task: X G (N f)
    Behavior: Starting from the next timestep and in all subsequent timesteps, {f} should not be true.

    Revised Task: G X (N f A N f)
    Behavior: In the next timestep and in all subsequent timesteps, {f} should not be true, and again {f} should not be true.

    Revised Task: G X (f O N f)
    Behavior: In the next timestep and in all subsequent timesteps, either {f} should be true or {f} should not be true.

    Revised Task: N G X (N f)
    Behavior: It is not the case that in all subsequent timesteps starting from the next timestep, {f} should not be true.

    Revised Task: G X (N f) U f
    Behavior: Starting from the next timestep and in all subsequent timesteps, {f} should not be true, until at some point {f} becomes true.

    Revised Task: G (X N f U f)
    Behavior: In all timesteps, it should be that in the next timestep {f} is not true, until a point where {f} is true.
  },
  "( X N f U a ) A e": {
    "expected behavior is {a} should not be true.": "( X N f U !a ) A e",
    "expected behavior is {f} should be true for a finite number of times, and then {a} should be true.": "( X N f U a ) A F(e)",
    "expected behavior is {a} should be true, or {e} should always be true.": "( X N f O a ) A G(e)",
    "expected behavior is {a} should be true, or {e} should be true for a finite number of times.": "( X N f O a ) A F(e)",
    "expected behavior is {f} should not be true first, and then {a} and {e} should be true simultanously.": "( X N !f A a ) A e"
    Revised Task: (XNfUa)Oe
    Behavior: Either the sequence (XNfUa) or e should be true eventually.

Revised Task: (XfUa)Ae
    Behavior: f should be true in the next timestep until a becomes true, and ee should also be true simultaneously.

Revised Task: (XNfAa)Ae
    Behavior: f should not be true in the next timestep and a should be true simultaneously, and e should also be true.

Revised Task: (XNfUE(a))Ae
    Behavior: f should not be true in the next timestep until a eventually becomes true, and e should also be true.

Revised Task: (XNfOa)Ae
    Behavior: Either f should not be true in the next timestep or a should be true, and e should also be true.

Revised Task: G(XNfUa)Ae
    Behavior: f should not be true in the next timestep until a becomes true, and this sequence should always be true. Additionally, e should be true.

Revised Task: (XNfUa)AG(e)
    Behavior: f should not be true in the next timestep until a becomes true, and e should always be true.

Revised Task: (XNfUa)AX(e)
    Behavior: f should not be true in the next timestep until a becomes true, and e should be true in the next timestep.

Revised Task: E(XNfUa)Ae
    Behavior: f should not be true in the next timestep until a becomes true, and this sequence should eventually be true. Additionally, e should be true.

Revised Task: (XNfUa)AN(e)
    Behavior: ffshould not be true in the next timestep until a becomes true, and e should not be true in the next timestep.
  },
  "( N N a ) A c U e": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a A (c U e)",
    "expected behavior is {a} should be false first. Such specification omits {a}.": "a U (c A e)",
    "expected behavior is {a} and {c} should be true simultanously.": "(N N a) A (c A e)",
    "expected behavior is to make {c} and {e} be true sequentially and don't need to be adjacent.": "(N N a) A (c U F(e))",
    "expected behavior is to make {a}, {c} and {e} be true sequentially and don't need to be adjacent.": "(N N a) A F(c U F(e))"
    Revised Task: ( N a ) A c U e
    Behavior: {a} must not be true, and {c} should be true until {e} becomes true.

    Revised Task: E( N N a A c U e)
    Behavior: Eventually, {a} should be true and {c} should be true until {e} becomes true.

    Revised Task: ( N N a ) O c U e
    Behavior: Either {a} must not be true or {c} should be true until {e} becomes true.

    Revised Task: ( N N a ) A X(c U e)
    Behavior: {a} must not be true and in the next timestep, {c} should be true until {e} becomes true.

    Revised Task: G( N N a A c U e)
    Behavior: Always, {a} must not be true and {c} should be true until {e} becomes true.

    Revised Task: ( N N a ) A c U E(e)
    Behavior: {a} must not be true and {c} should be true until {e} eventually becomes true.

    Revised Task: ( N N a ) A G(c U e)
    Behavior: {a} must not be true and always, {c} should be true until {e} becomes true.

    Revised Task: ( N N a ) A c A e
    Behavior: {a} must not be true, and both {c} and {e} should be true.

    Revised Task: ( N N a ) A (c O e)
    Behavior: {a} must not be true, and either {c} or {e} should be true.

    Revised Task: E( N N a ) A c U e
    Behavior: Eventually, {a} must not be true, and {c} should be true until {e} becomes true.
  },
  "( N E c ) O c U e": {
    "expected behavior is {c} should always be true.": "G( ( N E c ) O c U e)",
    "expected behavior is {c} should not be true first, and then {e} should be true.": "F( ( N E c ) O c U e)",
    "expected behavior is {c} should not be true first, and then {e} should eventually be true.": "F( ( N E c ) O X(c U e))",
    "expected behavior is {c} and {e} should be true simultanously.": "F( ( N E c ) O (c A e))",
    "expected behavior is more than one atomic proposition in {{c}, {e}} should be true.": "F( ( N E c ) O (c O e))"
    Revised Task: (N E c) O c U (N e)
    Behavior: Either {c} should eventually not be true, or {c} should be true until {e} is not true.

    Revised Task: (N E (c A e))
    Behavior: Eventually, both {c} and {e} should not be true.

    Revised Task: (E c) O c U e
    Behavior: Either {c} should eventually be true, or {c} should be true until {e} is true.

    Revised Task: (N E c) A c U e
    Behavior: {c} should eventually not be true, and {c} should be true until {e} is true.

    Revised Task: (N G c) O c U e
    Behavior: Either {c} should always not be true, or {c} should be true until {e} is true.

    Revised Task: (N E c) O (X c) U e
    Behavior: Either {c} should eventually not be true, or in the next time step {c} should be true until {e} is true.

    Revised Task: (N E c) O c U (G e)
    Behavior: Either {c} should eventually not be true, or {c} should be true until {e} is always true.

    Revised Task: (N E c) O c A e
    Behavior: Either {c} should eventually not be true, or both {c} and {e} should be true simultaneously.

    Revised Task: G(N E c) O c U e
    Behavior: Either {c} should always eventually not be true, or {c} should be true until {e} is true.

    Revised Task: (N E c) O c U (E e)
    Behavior: Either {c} should eventually not be true, or {c} should be true until {e} eventually becomes true.
  },
  "E a O N E N ( f )": {
    "expected behavior is {a} should always be true, or {f} should be true eventually. Such specification omits {a}.": "a O N E N (f)",
    "expected behavior is {a} should always be true, and then {f} should be true eventually.": "G(a O N E N (f))",
    "expected behavior is {a} should not be true, and then {f} should be true eventually.": "N(a O N E N (f))",
    "expected behavior is {a} and {f} should be true eventually.": "E(a O N E N (f))",
    "expected behavior is {a} and {f} should be true simultanously.": "F(a O N E N (f))"
    Revised Task: E a O E N ( f )
    Behavior: Eventually, either {a} becomes true or it is not the case that {f} will become true.

Revised Task: G a O N E N ( f )
    Behavior: Always, either {a} is true or it is not the case that eventually {f} will not become true.

Revised Task: E a A N E N ( f )
    Behavior: Eventually, both {a} becomes true and it is not the case that eventually {f} will not become true.

Revised Task: E a O N X N ( f )
    Behavior: Eventually, either {a} becomes true or it is not the case that in the next step {f} will not become true.

Revised Task: E N a O N E N ( f )
    Behavior: Eventually, it is not the case that {a} becomes true or it is not the case that eventually {f} will not become true.

Revised Task: E a O N E ( f )
    Behavior: Eventually, either {a} becomes true or it is the case that eventually {f} will become true.

Revised Task: E (a O N E N ( f ))
    Behavior: Eventually, it is either the case that {a} becomes true or not the case that eventually {f} will not become true.

Revised Task: E a O U N E N ( f )
    Behavior: Eventually, either {a} becomes true or until it is not the case that eventually {f} will not become true.

Revised Task: E a U N E N ( f )
    Behavior: Eventually, {a} should be true until it is not the case that eventually {f} will not become true.

Revised Task: E a O N G N ( f )
    Behavior: Eventually, either {a} becomes true or it is always not the case that {f} will not become true.
  },
  "E a O N E ( b )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O E(N(E(b))",
    "expected behavior is to make {a} and {b} be true simultanously.": "E(a A b)",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent.": "F(a A F(b))",
    "expected behavior is to make {a}, {b} and {c} be true sequentially and don't need to be adjacent.": "F(a A F(b A F(c)))",
    "expected behavior is {a}, {b} and {c} finally be true simultanously.": "F(a A b A c)"
    Revised Task: E(a O N(b))
    Behavior: Either {a} should be true eventually, or {b} should not be true eventually.

    Revised Task: E(a O E(b))
    Behavior: Either {a} should be true eventually, or {b} should be true eventually.

    Revised Task: E(a O G(b))
    Behavior: Either {a} should be true eventually, or {b} should always be true.

    Revised Task: E(a O X(b))
    Behavior: Either {a} should be true eventually, or {b} should be true in the next timestep.

    Revised Task: E(a A N E(b))
    Behavior: {a} should be true eventually and {b} should not be true eventually.

    Revised Task: E(N(a) O E(b))
    Behavior: Either {a} should not be true eventually, or {b} should be true eventually.

    Revised Task: G(a O E(b))
    Behavior: Always, either {a} should be true, or {b} should be true eventually.

    Revised Task: E(a U E(b))
    Behavior: {a} should be true until {b} becomes true eventually.

    Revised Task: E(a O (b A c))
    Behavior: Either {a} should be true eventually, or both {b} and {c} should be true simultaneously.

    Revised Task: E(a O U(b))
    Behavior: Either {a} should be true eventually, or {b} should be true until some condition is met.
  },
  "G a A E c U d O e": {
    "expected behavior is {a} should be true, followed by {c} and {d} being true simultanously. Such specification omits {c}.": "G a A (E c A d) O e",
    "expected behavior is {c} and {d} should be true simultanously, and then {e} should be true.": "G a A (E c A d A e)",
    "expected behavior is {c}, {d} and {e} should be true sequentially and don't need to be adjacent.": "G a A (E c F(d F(e)))",
    "expected behavior is {a}, {c}, {d} and {e} finally be true simultanously.": "G(a A E c A d A e)",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {d}, {e}} should be true.": "G(a O E c O d O e)"
    Revised Task: G(a A E(c U d O e))
Behavior: {a} must always be true, and eventually, either {d} should be true or both {c} and {e} should be true.

Revised Task: G(a A E(c U d) O e)
Behavior: {a} must always be true, and eventually, either {c} should be true until {d} becomes true or {e} should be true.

Revised Task: G(a A (E(c) U d O e))
Behavior: {a} must always be true, and either {c} should eventually be true or {d} or {e} should be true.

Revised Task: G(a O E(c U d O e))
Behavior: Either {a} must always be true or eventually, either {d} should be true or both {c} and {e} should be true.

Revised Task: G(a A X(c U d O e))
Behavior: {a} must always be true, and in the next time step, either {d} should be true or both {c} and {e} should be true.

Revised Task: N(a A E(c U d O e))
Behavior: {a} must not always be true, but eventually, either {d} should be true or both {c} and {e} should be true.

Revised Task: G(a A E(N(c) U d O e))
Behavior: {a} must always be true, and eventually, either {c} should not be true until {d} becomes true or {e} should be true.

Revised Task: G(a A E(c A d O e))
Behavior: {a} must always be true, and eventually, both {c} and {d} should be true or {e} should be true.

Revised Task: G(a U E(c U d O e))
Behavior: Eventually, {a} must be true and stay true, and either {d} should be true or both {c} and {e} should be true.

Revised Task: G(a A E(c U (d A e)))
Behavior: {a} must always be true, and eventually, {c} should be true until both {d} and {e} become true.
  },
  "( e ) A N ( N a )": {
    "expected behavior is {a} should be true immediately. Such specification omits {a}.": "(e) A (a A N (N a))",
    "expected behavior is to make {e} and {a} be true simultanously.": "(e) A (a A N (e))",
    "expected behavior is to make {e} and {a} be true sequentially and don't need to be adjacent.": "(e) A N (N (e A a))",
    "expected behavior is to make {e}, {a} finally be true simultanously.": "(e A a) A N (N a)",
    "expected behavior is more than one atomic proposition in {{e}, {a}} should be true.": "(e O a) A N (N a)"
    Revised Task: E(e A N(N a))
    Behavior: {e} should eventually be true while {a} should not be true in the next two timesteps.

    Revised Task: G(e A N(N a))
    Behavior: {e} should always be true and {a} should not be true in the next two timesteps.

    Revised Task: E(N e A N a)
    Behavior: Either {e} or {a} should not be true in the next timestep.

    Revised Task: (e) A N(a)
    Behavior: {e} should be true and {a} should not be true in the next timestep.

    Revised Task: N(e A N(N a))
    Behavior: It should not be the case that {e} is true while {a} is not true in the next two timesteps.

    Revised Task: (e) O N(N a)
    Behavior: Either {e} should be true or {a} should not be true in the next two timesteps.

    Revised Task: X(e A N(N a))
    Behavior: In the next timestep, {e} should be true and {a} should not be true in the following two timesteps.

    Revised Task: (e) A G(N a)
    Behavior: {e} should be true and {a} should always not be true from the next timestep onwards.

    Revised Task: E(e U N(N a))
    Behavior: {e} should be true until it's not the case that {a} is not true in the next two timesteps.

    Revised Task: G(e O N(N a))
    Behavior: {e} should always be true, or it should always be the case that {a} is not true in the next timestep.
  },
  "X ( e ) U N f O e": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U (e U N(e))",
    "expected behavior is {e} should be true first, then {f} should be true, and then {e} should be true again.": "X(e) U (f U N(e))",
    "expected behavior is {f} should be true first, and then {e} should be true or not.": "X(e) U (f O e)",
    "expected behavior is {f} should not be true, and then {e} should be true or not.": "X(e) U (N(f) O e)",
    "expected behavior is {f} shoule be true, or {f} should not be true first, and then {e} should be true.": "X(e) U (f O X(e))"
    Revised Task: X (e U N f O e)
    Behavior: Eventually, either {e} becomes true, or {f} is not true in the next timestep, or {e} is true; from the next timestep onwards.

Revised Task: X (e U N f A e)
    Behavior: Starting from the next timestep, {e} must be true until the next timestep where {f} is not true and {e} is also true.

Revised Task: X (e) U (N f O e)
    Behavior: Either {e} must be true in the next timestep, or {f} should not be true in the next timestep, or {e} should eventually be true.

Revised Task: G (e) U N f O e
    Behavior: {e} should always be true until {f} is not true in the next timestep, or {e} is true.

Revised Task: X (E e) U N f O e
    Behavior: {e} should eventually be true in the next timestep, and continue until {f} is not true in the following timestep, or {e} is true.

Revised Task: X (e) U N (f A e)
    Behavior: Starting from the next timestep, {e} must be true until a point where {f} and {e} are both true in the next timestep.

Revised Task: X (e) U N f U e
    Behavior: Starting from the next timestep, {e} must be true until {f} is not true in the following timestep, and eventually {e} must be true.

Revised Task: X (e O N f) O e
    Behavior: In the next timestep, either {e} is true, or {f} is not true, or {e} is true eventually.

Revised Task: X (e A N f) U e
    Behavior: From the next timestep, {e} and {f} not being true must hold until {e} becomes true.

Revised Task: E (e) U N f O e
    Behavior: Eventually, {e} must be true, and this condition holds until {f} is not true in the next timestep, or {e} is true.
  },
  "X ( e ) U N c U e": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (X(e) U N(c) U e)",
    "expected behavior is to make {e} and {c} be true simultanously.": "X(e) U (N(c) U e)",
    "expected behavior is to make {e} and {c} be true sequentially and don't need to be adjacent.": "X(e) U N(F(c) U e)",
    "expected behavior is to make {e}, {N} and {c} be true sequentially and don't need to be adjacent.": "X(e) A N(F(c) A e)",
    "expected behavior is {e}, {N} and {c} finally be true simultanously.": "X(e) A N(c) A e"
    Creating variations on the linear temporal logic task "X(e) U Nc U e" involves substituting, adding, or deleting the operators 'A' (and), 'O' (or), 'N' (negative), 'G' (always), 'U' (until), 'X' (next), 'E' (eventually). Here are ten revised tasks with their corresponding behaviors:

    Revised Task: X(e) U c U e
    Behavior: Eventually, {e} should be true, or {c} should be true without the need for a negative condition.

    Revised Task: X(e) U Nc A e
    Behavior: Eventually, {e} should be true, and {c} should not be true, and finally {e} should be true.

    Revised Task: G(X(e) U Nc U e)
    Behavior: Always, {e} should be true in the next timestep, or {c} should not be true, or eventually {e} should be true.

    Revised Task: X(e A Nc) U e
    Behavior: {e} and not {c} should be true in the next timestep, and eventually {e} should be true.

    Revised Task: X(e) U Nc O e
    Behavior: Eventually, {e} should be true, or {c} should not be true, or {e} could be true.

    Revised Task: E(X(e) U Nc U e)
    Behavior: Eventually, it should be the case that {e} will be true in the next timestep, or {c} should not be true, or {e} should be true.

    Revised Task: X(e O Nc) U e
    Behavior: Either {e} or not {c} should be true in the next timestep, and eventually {e} should be true.

    Revised Task: X(Ne) U Nc U e
    Behavior: Not {e} should be true in the next timestep, or {c} should not be true, or eventually {e} should be true.

    Revised Task: X(e) U (Nc U e)
    Behavior: Eventually, {e} should be true, or {c} should not be true until {e} becomes true.

    Revised Task: X(e) U (c A e)
    Behavior: Eventually, {e} should be true, or {c} and {e} should be true simultaneously.


  },
  "N e U ( e ) U N b": {
    "expected behavior is {e} should always be true. Such specification omits {e}.": "N e U (e A G e) U N b",
    "expected behavior is {b} should be true eventually. Such specification omits {b}.": "N e U (e A G e) U b",
    "expected behavior is {e} should be true eventually. Such specification omits {e}.": "e U (e A G e) U N b",
    "expected behavior is {e} and {b} should be true simultanously. Such specification omits {e}.": "N e A N b U (e A G e)",
    "expected behavior is more than one atomic proposition in {{e}, {b}} should be true. Such specification omits {e}.": "N e O N b U (e A G e)"
    Revised Task: N e U (e U N b)
    Behavior: Negate {e} until {e} becomes true or {b} becomes true in the next timestep.

    Revised Task: N e U (e A N b)
    Behavior: Negate {e} until both {e} and the negation of {b} are true simultaneously.

    Revised Task: N e U (X e U N b)
    Behavior: Negate {e} until {e} becomes true in the next timestep, or {b} is negated.

    Revised Task: G e U (e U N b)
    Behavior: {e} should always be true until {e} becomes true or {b} is negated.

    Revised Task: N e U (e U b)
    Behavior: Negate {e} until either {e} or {b} becomes true.

    Revised Task: N e U (e O N b)
    Behavior: Negate {e} until either {e} becomes true or {b} is negated.

    Revised Task: N e U (E e U N b)
    Behavior: Negate {e} until {e} eventually becomes true or {b} is negated.

    Revised Task: N e A (e U N b)
    Behavior: Negate {e} and maintain this state until {e} becomes true or {b} is negated.

    Revised Task: N e U (e U G b)
    Behavior: Negate {e} until {e} becomes true, after which {b} should always be true.

    Revised Task: E(N e U (e U N b))
    Behavior: Eventually, negate {e} until {e} becomes true or {b} is negated.


  },
  "N e O ( e ) U X b": {
    "expected behavior is {e} should be false first. Such specification omits {e}.": "N e O (e) U X (b)",
    "expected behavior is to make {e} and {b} be true simultanously.": "N e A (X b)",
    "expected behavior is to make {e} and {b} be true sequentially and don't need to be adjacent.": "N e O (e) U F(X b)",
    "expected behavior is to make {e}, {b} and {e} be true sequentially and don't need to be adjacent.": "N e A F(X b)",
    "expected behavior is {e}, {b} and {e} finally be true simultanously.": "N e A b",
    "expected behavior is more than one atomic proposition in {{e}, {b}} should be true.": "N e O b",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {e} should be true.": "N e O (e) U (b O X(e))",
    "expected behavior is {b} and {e} should be true simultanously, and then {e} should always be true.": "N e O (e) U (b A G(e))",
    "expected behavior is finally {e} should be true, no matter what the values of {e} and {b} are.": "N e O (e) U (b U e)",
    "expected behavior is {e} should always be true, or {e} and {b} be true, but subsequently {e} should be true.": "G(N e O (e) U (b U e))"
    Revised Task: N e O (e A U X b)
    Behavior: The negation of the event where either {e} is true or both {e} and {b} are true in the next timestep.

    Revised Task: N e U (e O X b)
    Behavior: The negation of {e} being true until either {e} or {b} is true in the next timestep.

    Revised Task: N e O (E e U X b)
    Behavior: The negation of either {e} eventually being true or {b} being true in the next timestep while {e} remains true.

    Revised Task: N e O (e U G b)
    Behavior: The negation of {e} being true until {b} always remains true.

    Revised Task: N e O (e U b)
    Behavior: The negation of {e} being true until {b} becomes true.

    Revised Task: G N e O (e U X b)
    Behavior: It is always the case that {e} is not true, or {e} remains true until {b} is true in the next timestep.

    Revised Task: N E e O (e U X b)
    Behavior: The negation of {e} eventually being true or {e} being true until {b} is true in the next timestep.

    Revised Task: N e O (e U X N b)
    Behavior: The negation of {e} being true until the next timestep where {b} is not true.

    Revised Task: N e A (e U X b)
    Behavior: The negation of both {e} being true and {e} being true until {b} is true in the next timestep.

    Revised Task: N e O (U e X b)
    Behavior: The negation of either {e} being true until {b} is true in the next timestep or the unqualified continuation of {e}.
  },
  "G ( c ) A d O E c": {
    "expected behavior is {c} should always be true. Such specification omits {c}.": "G(c) A d O E(c)",
    "expected behavior is {d} should be true first, and then {c} should be true.": "G(c) U (d A E(c))",
    "expected behavior is {d} and {c} should be true simultanously.": "G(c) A (d A E(c))",
    "expected behavior is {d} and {c} should be true sequentially and don't need to be adjacent.": "G(c) A d A E(c)",
    "expected behavior is {c} should be true and {d} should not be true.": "G(c) O d A E(c)"
    Revised Task: G(c) A d O E(d)
    Behavior: {d} should always be true, or {d} should eventually be true, the value of {c} is not concerned.

Revised Task: G(c) A (d O E c)
    Behavior: {c} should always be true, and either {d} should be true or {c} should eventually be true.

Revised Task: G(c) A d O X(c)
    Behavior: {c} should always be true, or {d} should be true and {c} should be true in the next timestep.

Revised Task: G(c) A d O E(N c)
    Behavior: {c} should always be true, or {d} should be true, and eventually {c} should not be true in the next timestep.

Revised Task: G(c) O d O E c
    Behavior: {c} should always be true, or {d} should be true, or eventually {c} should be true.

Revised Task: G(c) A (d A E c)
    Behavior: {c} should always be true, and {d} and eventually {c} should be true.

Revised Task: G(c) A d A E c
    Behavior: {c} should always be true, and both {d} and eventually {c} should be true.

Revised Task: G(c) A d U E c
    Behavior: {c} should always be true, and {d} should be true until eventually {c} is true.

Revised Task: G(N c) A d O E c
    Behavior: {c} should not always be true, and either {d} should be true or eventually {c} should be true.

Revised Task: G(c) U d O E c
    Behavior: {c} should always be true until {d} is true, or eventually {c} should be true.
  },
  "N ( e ) A a U E c": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (e A E c)",
    "expected behavior is to make {e} and {c} be true simultanously.": "N (e) A a U c",
    "expected behavior is to make {e} and {c} be true sequentially and don't need to be adjacent.": "N (e) A a U F(c)",
    "expected behavior is to make {a}, {e} and {c} be true sequentially and don't need to be adjacent.": "N (e) A a A F(e A F(c))",
    "expected behavior is {a}, {e} and {c} finally be true simultanously.": "N (e) A a A e A c",
    "expected behavior is more than one atomic proposition in {{a}, {e}, {c}} should be true.": "N (e) A a O e O c",
    "expected behavior is {e} shoule be true, or {e} should not be true first, and then {e} or {c} should be true.": "N (e) A a U (e O X(c))",
    "expected behavior is {e} and {c} should be true simultanously, and then {c} should always be true.": "N (e) A a U (e A G(c))",
    "expected behavior is finally {c} should be true, no matter what the values of {a} and {e} are.": "N (e) A a U (e U c)",
    "expected behavior is {c} should always be true, or {a} and {e} be true, but subsequently {c} should be true.": "G(N (e) A a U (e U c))"
    Revised Task: N ( e A a U E c )
    Behavior: {e} and {a} should both not be true until {c} eventually becomes true.

Revised Task: N ( e ) A a U c
    Behavior: {e} should not be true and {a} should be true until {c} becomes true.

Revised Task: E ( N ( e ) A a U c )
    Behavior: Eventually, it should be the case that {e} is not true and {a} is true until {c} becomes true.

Revised Task: N ( e ) O a U E c
    Behavior: Either {e} should not be true or {a} should be true until {c} eventually becomes true.

Revised Task: G ( N ( e ) A a U E c )
    Behavior: It should always be the case that {e} is not true and {a} is true until {c} eventually becomes true.

Revised Task: N ( E e ) A a U E c
    Behavior: {e} should not eventually be true, and {a} should be true until {c} eventually becomes true.

Revised Task: N ( e ) A a U G c
    Behavior: {e} should not be true and {a} should be true until {c} is always true.

Revised Task: N ( e ) A E a U E c
    Behavior: {e} should not be true and {a} should eventually be true until {c} eventually becomes true.

Revised Task: N ( e ) A a U X c
    Behavior: {e} should not be true and {a} should be true until {c} is true in the next timestep.

Revised Task: N ( e ) A a U (b O E c)
    Behavior: {e} should not be true and {a} should be true until either {b} becomes true or {c} eventually becomes true.
  },
  "( N N N c U G b )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c U ( N N N G b)",
    "expected behavior is {c} and {b} should be true simultanously.": "( N N N c U b )",
    "expected behavior is to make {c} and {b} be true sequentially and don't need to be adjacent.": "( N N N c U F(b))",
    "expected behavior is to make {c}, {b} and more atomic proposition be true sequentially and don't need to be adjacent.": "( N N N c A F(b A F(AP)) )",
    "expected behavior is more than one atomic proposition in {{c}, {b}} should be true.": "( N N N c O b )"
    Revised Task: (N c U G b)
    Behavior: Negate {c} until {b} always becomes true.

Revised Task: (N N c U G b)
    Behavior: Double negate {c} until {b} always becomes true.

Revised Task: (N N N c U b)
    Behavior: Triple negate {c} until {b} becomes true.

Revised Task: (N N N c A G b)
    Behavior: Triple negate {c} and ensure {b} always remains true.

Revised Task: (N N N E(c) U G b)
    Behavior: Triple negate {c} eventually, and maintain this state until {b} always becomes true.

Revised Task: (N N N c U X b)
    Behavior: Triple negate {c} until the next state where {b} becomes true.

Revised Task: (N N N c U G(N b))
    Behavior: Triple negate {c} until {b} always remains false.

Revised Task: (N N N c O G b)
    Behavior: Triple negate {c} or maintain the state where {b} is always true.

Revised Task: (G(N N N c U b))
    Behavior: Always maintain the state of triple negating {c} until {b} becomes true.

Revised Task: (N N N c U E b)
    Behavior: Triple negate {c} until {b} eventually becomes true.
  },
  "( N G c U G b )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "N(G(c) U G(b))",
    "expected behavior is {b} should be true finally and {c} should always be true.": "N(G(c) A G(b))",
    "expected behavior is {b} and {c} should be true simultanously.": "N(G(c) A G(b))",
    "expected behavior is more than one atomic propositions in {{b}, {c}} should be true.": "N(G(c) O G(b))",
    "expected behavior is {b} should not be true first, and then either {b} or {c} should be true.": "N(G(c) O X(G(b)))",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "N(G(c) A F(G(b)))"
    Revised Task: G(N G c U G b)
    Behavior: Eventually, it should always be true that either {c} is always false, or {b} is always true.

    Revised Task: (N G c U b)
    Behavior: {c} should always be false until {b} becomes true.

    Revised Task: (N G c U X G b)
    Behavior: {c} should always be false until the next timestep where {b} starts being always true.

    Revised Task: (N c U G b)
    Behavior: {c} should be false until {b} becomes always true.

    Revised Task: E(N G c U G b)
    Behavior: It should eventually be true that {c} is always false or {b} is always true.

    Revised Task: (N G c U E b)
    Behavior: {c} should always be false until {b} eventually becomes true.

    Revised Task: (N G c A G b)
    Behavior: {c} should always be false, and at the same time, {b} should always be true.

    Revised Task: (G c U G b)
    Behavior: {c} should always be true until {b} becomes always true.

    Revised Task: (N G c U G(b A c))
    Behavior: {c} should always be false until both {b} and {c} are always true.

    Revised Task: (N G(c U b))
    Behavior: It should always be true that {c} is false until {b} becomes true.
  },
  "e U c A a O ( f )": {
    "expected behavior is {e} and {c} should be true simultanously.": "F(e A c A a O (f))",
    "expected behavior is {a} should be true first and then {f} should be true.": "F(e U c A (a O f))",
    "expected behavior is {e}, {c}, {a} and {f} should be true simultanously.": "F(e A c A a A f)",
    "expected behavior is {f} should be true, or {a} and {c} should be true, but subsequently {f} should be true.": "F(e U (c A a O f))",
    "expected behavior is {e}, {c}, {a} and {f} should be true sequentially and don't need to be adjacent.": "F(e A F(c A F(a A f)))"
    Revised Task: e U (c A a O f)
Behavior: {e} should be true until both {c} and {a} become true, or {f} becomes true.

Revised Task: G(e U c A a O f)
Behavior: It should always be the case that {e} is true until both {c} and {a} are true, or {f} is true.

Revised Task: e U (c A a O X(f))
Behavior: {e} should be true until both {c} and {a} become true, or {f} becomes true in the next timestep.

Revised Task: e U (c A a O E(f))
Behavior: {e} should be true until both {c} and {a} become true, or {f} eventually becomes true.

Revised Task: e U (c O a O f)
Behavior: {e} should be true until either {c} or {a} or {f} becomes true.

Revised Task: e U (N(c) A a O f)
Behavior: {e} should be true until the next timestep where {c} is true, and either {a} or {f} is true.

Revised Task: E(e U c A a O f)
Behavior: Eventually, {e} should be true until both {c} and {a} become true, or {f} becomes true.

Revised Task: e U (c A N(a) O f)
Behavior: {e} should be true until {c} becomes true and {a} is true in the next timestep, or {f} becomes true.

Revised Task: e U (c A a O G(f))
Behavior: {e} should be true until both {c} and {a} become true, or {f} is always true.

Revised Task: e U (c A a O U(f))
Behavior: {e} should be true until both {c} and {a} become true, or until {f} becomes true.
  },
  "b A b U N N ( c )": {
    "expected behavior is {b} should be true first and {c} should be true after that. Such specification omits {b}.": "b A (b U N N (c))",
    "expected behavior is {b} should be true first and {c} should be true after that, with no other atomic proposition in between.": "b A (b U c)",
    "expected behavior is {b} and {c} should be true simultanously and then {c} should always be true.": "b A (b A G(c))",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "b O G(c)",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "b A F(c)"
    Revised Task: b A b U N (c)
    Behavior: Both instances of {b} should be true until {c} becomes false.

Revised Task: b A b A N N (c)
    Behavior: Both instances of {b} should be true, and {c} should be false.

Revised Task: b A (b U N c)
    Behavior: {b} should be true and remain so until either {b} becomes false or {c} becomes false.

Revised Task: b O b U N N (c)
    Behavior: At least one of the instances of {b} should be true until {c} becomes false.

Revised Task: b A b U (c)
    Behavior: Both instances of {b} should be true until {c} becomes true.

Revised Task: b A b U N (X c)
    Behavior: Both instances of {b} should be true until, in the next timestep, {c} is false.

Revised Task: b A b A c
    Behavior: Both instances of {b} and {c} should be true.

Revised Task: b A N (b U c)
    Behavior: {b} should be false and this condition should hold until either {b} or {c} becomes true.

Revised Task: b U b A N N (c)
    Behavior: {b} should be true until both instances of {b} are true and {c} is false.

Revised Task: E (b A b U N N (c))
    Behavior: Eventually, it should be the case that both instances of {b} are true until {c} becomes false.
  },
  "X e U b O ( E f )": {
    "expected behavior is {e} should always be true, but the task omits {e}.": "G(e U b O (E f))",
    "expected behavior is {e} and {f} should be true simultanously.": "X e U b A ( E f )",
    "expected behavior is to make {e}, {b} and {f} be true sequentially and don't need to be adjacent.": "X e A X b A ( E f )",
    "expected behavior is {e}, {b} and {f} finally be true simultanously.": "X e A b A ( E f )",
    "expected behavior is more than one atomic proposition in {e}, {b}, {f}} should be true.": "X e O b O ( E f )"
    Revised Task: X e U (b O E(f))
    Behavior: {e} should be true in the next timestep until either {b} becomes true or {f} eventually becomes true.

    Revised Task: X (e U b) O E(f)
    Behavior: Either {e} should be true in the next timestep until {b} becomes true, or {f} should eventually become true.

    Revised Task: X e U b O f
    Behavior: {e} should be true in the next timestep until either {b} or {f} becomes true.

    Revised Task: X e U (b A E(f))
    Behavior: {e} should be true in the next timestep until both {b} becomes true and {f} eventually becomes true.

    Revised Task: E(X e U b O f)
    Behavior: It should eventually be the case that {e} is true in the next timestep until either {b} or {f} becomes true.

    Revised Task: X e U (N b O E(f))
    Behavior: {e} should be true in the next timestep until either {b} is not true or {f} eventually becomes true.

    Revised Task: X e A b O E(f)
    Behavior: {e} should be true in the next timestep and {b} should be true, or {f} should eventually become true.

    Revised Task: G(X e U b O E(f))
    Behavior: It should always be the case that {e} is true in the next timestep until either {b} becomes true or {f} eventually becomes true.

    Revised Task: X e U (b O G(f))
    Behavior: {e} should be true in the next timestep until either {b} becomes true or {f} is always true.

    Revised Task: X e U (b O X(f))
    Behavior: {e} should be true in the next timestep until either {b} becomes true or {f} becomes true in the next timestep.
  },
  "X e U b O ( N c )": {
    "expected behavior is {e} should be true first and then {b} should be true, and finally {c} should not be true. Such specification omits {e}.": "F(e U (b O (N c)))",
    "expected behavior is {c} should not be true and then {b} should not be true, but finally {e} should be true.": "F(e A (b O (N c)))",
    "expected behavior is if {b} is false, then {c} should be true, and if {b} is true, then {c} should not be true.": "X e U (b A (N c))",
    "expected behavior is {e} should be true first and then {c} should not be true, and finally {b} should be true.": "F(e U (N c) A b)",
    "expected behavior is more than one atomic proposition in {{e}, {b}, {c}} should be true.": "F(e O b O c)"
    Revised Task: X e U (b O N c)
    Behavior: {e} should be true in the next timestep until either {b} becomes true or {c} becomes false.

Revised Task: X e U b A (N c)
    Behavior: {e} should be true in the next timestep until both {b} is true and {c} is false.

Revised Task: X e U (b O G c)
    Behavior: {e} should be true in the next timestep until {b} becomes true or {c} is always true.

Revised Task: G(e U b O N c)
    Behavior: It should always be the case that {e} is true until {b} becomes true or {c} becomes false.

Revised Task: X e U b
    Behavior: {e} should be true in the next timestep until {b} becomes true, {c} is not concerned.

Revised Task: X e A b O N c
    Behavior: {e} should be true in the next timestep, and either {b} is true or {c} is false.

Revised Task: X E(e U b O N c)
    Behavior: {e} should be true in the next timestep and eventually reach a state where {b} is true or {c} is false.

Revised Task: E(X e U b O N c)
    Behavior: Eventually, it will be the case that {e} is true in the next timestep until {b} becomes true or {c} becomes false.

Revised Task: X e U (N b O c)
    Behavior: {e} should be true in the next timestep until either {b} is false or {c} is true.

Revised Task: X (e U b) O N c
    Behavior: Either {e} should be true in the next timestep until {b} becomes true, or {c} should be false.
  },
  "( a ) U X N b U f": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "(a) U b U X N f",
    "expected behavior is to make {a} and {b} be true simultanously.": "(a A b) U X N f",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent.": "(a U F(b)) U X N f",
    "expected behavior is to make {a} be true, or {b} should not be true first, and then {a} or {f} should be true.": "(a O X N b) U f",
    "expected behavior is finally {f} should be true, no matter what the values of {a} and {b} are.": "G((a) U X N b) U f"
    Revised Task: (a) U X b U f
    Behavior: {a} should be true until {b} is true in the next timestep, then {f} should be true.

    Revised Task: E( a U X b U f)
    Behavior: Eventually, {a} should be true until {b} is true in the next timestep, then {f} should be true.

    Revised Task: ( a ) U X (N b U f)
    Behavior: {a} should be true until not {b} is true in the next timestep, then {f} should be true.

    Revised Task: ( a ) U X (b A f)
    Behavior: {a} should be true until {b} and {f} are true in the next timestep.

    Revised Task: ( a ) O X N b U f
    Behavior: Either {a} is true or in the next timestep not {b} should be true until {f} is true.

    Revised Task: G( a ) U X N b U f
    Behavior: {a} should always be true until in the next timestep not {b} is true, followed by {f} being true.

    Revised Task: ( a ) U X (N b O f)
    Behavior: {a} should be true until in the next timestep either not {b} or {f} is true.

    Revised Task: ( a ) U X N (b U f)
    Behavior: {a} should be true until in the next timestep not {b} is true until {f} is true.

    Revised Task: ( a ) U (X N b A f)
    Behavior: {a} should be true until in the next timestep not {b} and {f} are true.

    Revised Task: E( a ) U X N b U f
    Behavior: Eventually, {a} should be true until in the next timestep not {b} is true, followed by {f} being true.


  },
  "( a ) U X b O f": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U (a X b O f)",
    "expected behavior is to make {b} and {f} be true simultanously.": "(a U b) O f",
    "expected behavior is to make {b} and {f} be true sequentially and don't need to be adjacent.": "(a U X(b O f))",
    "expected behavior is to make {a}, {b} and {f} be true sequentially and don't need to be adjacent.": "F(a A F(b A F(f)))",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {f}} should be true.": "F(a O b O f)",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {f} should be true.": "(a U (b O X(f)))",
    "expected behavior is {b} and {f} should be true simultanously, and then {f} should always be true.": "F(a U (b A G(f)))",
    "expected behavior is finally {f} should be true, no matter what the values of {a} and {b} are.": "F(a U (b U f))",
    "expected behavior is {f} should always be true, or {a} and {b} be true, but subsequently {f} should be true.": "G(a U (b U f))"
    Revised Task: (a) U X (b O f)
    Behavior: {b} or {f} must be true in the next timestep, the value of {a} is not concerned.

Revised Task: (a) U (X b A f)
    Behavior: {b} must be true in the next timestep, and {f} must also be true simultaneously. The value of {a} is not concerned.

Revised Task: G(a U (X b O f))
    Behavior: It's always true that {a} is true or that in the next timestep either {b} or {f} is true.

Revised Task: E(a U (X b O f))
    Behavior: Eventually, {a} should be true or in the next timestep either {b} or {f} should be true.

Revised Task: (a) U X (b A E(f))
    Behavior: {b} must be true in the next timestep, and {f} must eventually be true. The value of {a} is not concerned.

Revised Task: (a) U X (N b O f)
    Behavior: {b} should not be true in the next timestep, or {f} should be true. The value of {a} is not concerned.

Revised Task: (a) U X (b O G(f))
    Behavior: {b} should be true in the next timestep, or {f} should always be true subsequently. The value of {a} is not concerned.

Revised Task: (a) U (b O X f)
    Behavior: {b} should be true, or {f} should be true in the next timestep. The value of {a} is not concerned.

Revised Task: (a) U X (b A G(f))
    Behavior: {b} should be true in the next timestep, and subsequently, {f} should always be true. The value of {a} is not concerned.

Revised Task: (a) U (X b A X f)
    Behavior: {b} should be true in the next timestep, and {f} should also be true in the timestep after that. The value of {a} is not concerned.
  },
  "E N a A ( b ) U b": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a A ( b ) U b",
    "expected behavior is {a} and {b} finally be true simultanously.": "E N (a A b)",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {b} should be true.": "E N a A (b O U b)",
    "expected behavior is {b} should be true, and then {b} should always be true.": "E N a A (b U G b)",
    "expected behavior is {a} and {b} should be true simultanously, and then {b} should always be true.": "E N (a A (b U G b))"
    Revised Task: E(a U b)
    Behavior: Eventually, either {a} or {b} will become true.

    Revised Task: E N (a A b) U b
    Behavior: Eventually, it will not be the case that both {a} and {b} are true until {b} becomes true.

    Revised Task: G N a U (b A b)
    Behavior: Always, it should not be the case that {a} is true until {b} and itself are true simultaneously.

    Revised Task: E N a O (b U b)
    Behavior: Eventually, either {a} will not be true, or {b} will be true until it remains true.

    Revised Task: E N a A (X b U b)
    Behavior: Eventually, it will not be the case that {a} is true and in the next time step, {b} will be true until it remains true.

    Revised Task: E N a A (b U X b)
    Behavior: Eventually, it will not be the case that {a} is true and {b} will be true until it is true in the next time step.

    Revised Task: E(a A (N b U b))
    Behavior: Eventually, {a} is true and it is not the case that {b} is true until {b} becomes true.

    Revised Task: E N (a U b A b)
    Behavior: Eventually, it will not be the case that either {a} is true or both {b}s are true simultaneously.

    Revised Task: E N a A (b U G b)
    Behavior: Eventually, it will not be the case that {a} is true and {b} is true until {b} always remains true.

    Revised Task: E N (a A b) U X b
    Behavior: Eventually, it will not be the case that both {a} and {b} are true until {b} is true in the next timestep.
  },
  "X N e A ( b ) U c": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A (X N e U c)",
    "expected behavior is to make {e} and {b} be true simultanously.": "X N (e A b) U c",
    "expected behavior is to make {e}, {b} and {c} be true sequentially and don't need to be adjacent.": "X N e A F(b A F(c))",
    "expected behavior is to make {e}, {b} and {c} finally be true simultanously.": "F(X N e A (b A c))",
    "expected behavior is more than one atomic proposition in {{e}, {b}, {c}} should be true.": "F(X N e O b O c)"
    Task: X N E e O ( b U c)
    Behavior: In the next timestep, either {e} should not be true eventually or {b} and {c} should be true until {c} becomes true.

Revised Task: X N (e A b) U c
    Behavior: In the next timestep, it should be the case that {e} and {b} are true until {c} becomes true.

Revised Task: X N e A G(b U c)
    Behavior: In the next timestep, {e} should be true and it should always be the case that {b} remains true until {c} becomes true.

Revised Task: G X N e A (b U c)
    Behavior: It should always be the case that in the next timestep, {e} should be true and {b} should remain true until {c} becomes true.

Revised Task: X E N e A (b U c)
    Behavior: In the next timestep, it should eventually be the case that {e} is not true and {b} remains true until {c} becomes true.

Revised Task: X N e O G(b) U c
    Behavior: In the next timestep, either {e} should not be true or {b} should always be true until {c} becomes true.

Revised Task: E X N e A (b U c)
    Behavior: It should eventually be the case that in the next timestep, {e} is not true and {b} remains true until {c} becomes true.

Revised Task: X N e A (b O c)
    Behavior: In the next timestep, {e} should be true and either {b} or {c} should be true.

Revised Task: X N e A (b A c)
    Behavior: In the next timestep, {e} should be true and both {b} and {c} should be true.

Revised Task: X N e U (b A c)
    Behavior: In the next timestep, {e} should be true until both {b} and {c} are true simultaneously.
  },
  "N c O E c U G X e": {
    "expected behavior is {c} should be true first and always be true. Such specification omits {c}.": "G(c O E(c U G X e))",
    "expected behavior is {c} should be true first, and then {e} should be true eventually.": "G(c O E(c U G X G e))",
    "expected behavior is {e} should eventually be true, but should not be true simultanously with {c}.": "G(c O E(c A G X e))",
    "expected behavior is {c} should eventually be true, and then {e} eventually be true.": "G(c O E(G c U G X e))",
    "expected behavior is more than one atomic proposition in {{c}, {e}} should be true.": "G(c O E(c O G X e))"
    Revised Task: N c O E (c U G X e)
    Behavior: Either {c} should always be false, or eventually, {c} should be true until a state is reached where {e} is true in the next time step and remains true thereafter.

    Revised Task: N c U E (c O G X e)
    Behavior: {c} should be false until eventually, either {c} becomes true or a state is reached where {e} is true in the next time step and remains true thereafter.

    Revised Task: E c O E (c U G X e)
    Behavior: Either {c} should eventually be true, or eventually, {c} should be true until a state is reached where {e} is true in the next time step and remains true thereafter.

    Revised Task: N c O G (c U X e)
    Behavior: Either {c} should always be false, or {c} should be true until {e} is true in the next time step.

    Revised Task: N c O E c U (G X e)
    Behavior: Either {c} should always be false, or eventually, {c} should be true until eventually, {e} becomes true in the next time step and remains true.

    Revised Task: N c O E c U G e
    Behavior: Either {c} should always be false, or eventually, {c} should be true until {e} always remains true.

    Revised Task: N (c O E c) U G X e
    Behavior: {c} should always be false until either {c} becomes true or {e} is true in the next time step and remains true thereafter.

    Revised Task: N c O E (c U X e)
    Behavior: Either {c} should always be false, or eventually, {c} should be true until {e} is true in the next time step.

    Revised Task: N c O E (c U G e)
    Behavior: Either {c} should always be false, or eventually, {c} should be true until {e} always remains true.

    Revised Task: N c O E (G c U X e)
    Behavior: Either {c} should always be false, or eventually, {c} should always be true until {e} is true in the next time step.


  },
  "N c U E e U G X e": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (c U E G X e)",
    "expected behavior is to make {c} and {e} be true simultanously.": "N c A E e U G X e",
    "expected behavior is to make {c} and {e} be true sequentially and don't need to be adjacent.": "N c U E e A G X e",
    "expected behavior is to make {c}, {e} and {e} be true sequentially and don't need to be adjacent.": "N c A E e A G X e",
    "expected behavior is {c}, {e} and {e} finally be true simultanously.": "N c A E e A G X (e A G X e)"
    Revised Task: N c U E (e U G X e)
    Behavior: {c} must not be true until a point where {e} becomes true, and then {e} must always be true in the subsequent timestep.

Revised Task: N c U E (e A G X e)
    Behavior: {c} must not be true until a point where {e} becomes true, and then {e} must always be true in the next timestep and remain true.

Revised Task: N c U E e A G X e
    Behavior: {c} must not be true until {e} becomes true. Once {e} is true, {e} must always be true in the next timestep.

Revised Task: E N c U E e U G X e
    Behavior: It is eventually the case that {c} must not be true until a point where {e} is true, followed by a state where {e} must always be true in the next timestep.

Revised Task: N c U G e U G X e
    Behavior: {c} must not be true until {e} is always true, and then it must always be true in the next timestep.

Revised Task: N c U E (e O G X e)
    Behavior: {c} must not be true until a point where either {e} becomes true or {e} must always be true in the next timestep.

Revised Task: N c U G X e
    Behavior: {c} must not be true until a point where {e} must always be true in the next timestep.

Revised Task: N c U E (e U X e)
    Behavior: {c} must not be true until a point where {e} becomes true, and in the next timestep, {e} should also be true.

Revised Task: N (c U E e) U G X e
    Behavior: It must not be the case that {c} is true until {e} is true, and this condition must be met until a state where {e} must always be true in the next timestep.

Revised Task: N c U E (e U X (e A c))
    Behavior: {c} must not be true until a point where {e} becomes true, followed by a state where {e} and {c} must both be true in the next timestep.


  },
  "X X c U N ( N d )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "X c U N ( N d )",
    "expected behavior is {d} should be true first. Such specification omits {d}.": "X X c U N d",
    "expected behavior is {c} and {d} should be true simultanously.": "X X (c A d)",
    "expected behavior is to make {c} and {d} be true sequentially and don't need to be adjacent.": "X X (c A F(d))",
    "expected behavior is to make {c} and {d} be true sequentially and need to be adjacent.": "X X (c U d)"
    Revised Task: X X c U (N d)
    Behavior: {c} should be true until {d} is not true. The first two timesteps are not concerned due to the double next operator.

    Revised Task: X c U N (N d)
    Behavior: Starting from the next timestep, {c} should be true until {d} is not true.

    Revised Task: G(X c U N (N d))
    Behavior: It should always be the case that, starting from the next timestep, {c} is true until {d} is not true.

    Revised Task: X X (c U N d)
    Behavior: After two timesteps, {c} should be true until {d} becomes true.

    Revised Task: X X c U (N d) A E(N d)
    Behavior: {c} should be true until {d} is not true, and eventually, {d} should not be true, all after two timesteps.

    Revised Task: X X c O N (N d)
    Behavior: After two timesteps, either {c} should be true or {d} should not be true.

    Revised Task: X X E(c U N (N d))
    Behavior: After two timesteps, eventually, {c} should be true until {d} is not true.

    Revised Task: X X c A N (N d)
    Behavior: After two timesteps, {c} should be true and {d} should not be true.

    Revised Task: X (X c U N d)
    Behavior: Starting from the next timestep, {c} should be true until {d} becomes true.

    Revised Task: X X c U (N E d)
    Behavior: After two timesteps, {c} should be true until it eventually becomes the case that {d} is not true.
  },
  "X N b A f U b U b": {
    "expected behavior is {f} should always be true. Such specification omits {f}.": "X N (b A f) U b U b",
    "expected behavior is {f} should be true first, and then {b}.": "X N (f A b) U b U b",
    "expected behavior is {f} and {b} should be true simultanously.": "X N (f A b) U (b U b)",
    "expected behavior is {f} should be true first, and then {b} should always be true.": "X N (f A b) U G(b)",
    "expected behavior is {b} should be true, or {f} should not be true first, and then {b}.": "X N (f O X(b)) U b U b"
    Revised Task: X(b A f U b U b)
    Behavior: The proposition {b} and {f} must be true together, followed by {b} being true until {b} becomes true again.

    Revised Task: X N (b O f U b U b)
    Behavior: Either {b} or {f} must be true, followed by {b} being true until {b} becomes true again, and this entire condition should be true in the next time step.

    Revised Task: N X (b A f U b U b)
    Behavior: Negate the condition where {b} and {f} must be true together, followed by {b} being true until {b} becomes true again, and this must be true in the next time step.

    Revised Task: X N b A (f U b) U b
    Behavior: {b} must be false, and {f} must be true until {b} becomes true, followed by {b} being true again, and this condition should hold in the next time step.

    Revised Task: X N b A f U (b A b)
    Behavior: Next, it should be that {b} is false and {f} is true until {b} and {b} are true simultaneously.

    Revised Task: X N b A E(f U b U b)
    Behavior: Next, {b} must be false, and eventually, {f} should be true until {b} becomes true again twice.

    Revised Task: X N b A G(f U b U b)
    Behavior: Next, {b} must be false, and it should always be the case that {f} is true until {b} becomes true again twice.

    Revised Task: X N E(b A f U b U b)
    Behavior: Next, it should eventually be the case that {b} and {f} are true together, followed by {b} being true until {b} becomes true again.

    Revised Task: X N b O f U b U b
    Behavior: Next, either {b} must be false or {f} true, followed by {b} being true until {b} becomes true again.

    Revised Task: X (N b A f) U b U b
    Behavior: Next, {b} must be false and {f} true, followed by {b} being true until {b} becomes true again.


  },
  "d A ( E f ) O G d": {
    "expected behavior is {d} and {f} should be true simultanously.": "d A (f A G(d))",
    "expected behavior is {d} and {f} should be true sequentially and don't need to be adjacent.": "F(d A F(f A G(d)))",
    "expected behavior is {d}, {f}, and finally {d} should be true simultanously.": "F(d A f A G(d))",
    "expected behavior is more than one atomic proposition in {{d}, {f}} should be true.": "F(d O f O G(d))",
    "expected behavior is {f} should be true, or {f} should not be true first, and then {f} or {d} should be true.": "F(d A (f O X(G(d))))"
    Revised Task: E(d A (f O G d))
    Behavior: {f} should be true or {d} should always be true. If {f} becomes true, then {d} must be true.

    Revised Task: d A (N E f) O G d
    Behavior: Either {d} is true and {f} is not eventually true, or {d} is always true.

    Revised Task: d A (E f) O X G d
    Behavior: Either {d} is true and {f} is eventually true, or in the next step, {d} must always be true.

    Revised Task: d A (E f) O G(N d)
    Behavior: Either {d} is true and {f} is eventually true, or {d} is never true from now on.

    Revised Task: E(d A (E f) O G d)
    Behavior: Eventually, either {d} is true and {f} is eventually true, or {d} must always be true.

    Revised Task: d O (E f A G d)
    Behavior: Either {d} is true, or {f} must eventually be true and {d} must always be true.

    Revised Task: d A G(E f O d)
    Behavior: {d} must be true and always in the future {f} must eventually be true or {d} must be true.

    Revised Task: d A (U f O G d)
    Behavior: {d} is true and {f} must be true until {d} is always true.

    Revised Task: G(d A (E f) O d)
    Behavior: Always either {d} is true and {f} is eventually true, or {d} is true.

    Revised Task: d A (E f) O G(N f)
    Behavior: Either {d} is true and {f} is eventually true, or {f} is never true from now on.
  },
  "d A ( N f ) U E b": {
    "expected behavior is {d}, {f}, {b} should be true sequentially and don't need to be adjacent.": "d A ( N F(f A F(b)))",
    "expected behavior is {d}, {f}, {b} should be true simultanously.": "d A ( N f) A b",
    "expected behavior is {d}, {f}, {b} should be true sequentially, and {f}, {b} should be adjacent.": "d A ( N (f A b))",
    "expected behavior is one of {d}, {f}, {b} should be true.": "d O ( N f) O b",
    "expected behavior is {d} and {b} should be true, and then {f} should be true.": "F( d A ( N f ) U b)"
  },
  "N ( N E X c ) O d": {
    "expected behavior is to make {c} and {d} be true simultanously.": "N ( N E c ) O d",
    "expected behavior is {d} should be true after {c} is false.": "N ( N E F(X (c)) ) O d",
    "expected behavior is {c} and {d} should be true sequentially and don't need to be adjacent.": "N ( N E F(c) ) O F(X(d))",
    "expected behavior is {c} and {d} finally be true simultanously.": "N ( N E c ) A d",
    "expected behavior is more than one atomic proposition in {{c}, {d}} should be true.": "N ( N E c ) O F(d)"
  },
  "N ( N X N e ) O d": {
    "expected behavior is that {d} should be true first, then {e} should be true. Such specification omits {d}.": "d O N ( N X N e )",
    "expected behavior is that {d} and {e} should be true simultanously.": "N ( N X (d A e))",
    "expected behavior is that {d} and {e} should be true sequentially.": "N ( N X (d U e))",
    "expected behavior is that {d} should be true, or {d} should not be true first, and then {d} or {e} should be true.": "N ( N X (d O X(e)))",
    "expected behavior is more than one atomic proposition in {{d}, {e}} should be true.": "N ( N X (d O e))"
  },
  "X N c O N ( X a )": {
    "expected behavior is {c} should not be true first, and then {a} should be true. Such specification omits {a}.": "X N c O N (a U X a)",
    "expected behavior is {a} and {c} should not be true simultanously.": "X N c O N (X (a O N c))",
    "expected behavior is {c} should not be true, or {c} and {a} should not be true simultanously.": "X N c O N (X (a O N c) O N a)",
    "expected behavior is {a} should not be true first, and then {c} should not be true.": "X N c O N (X (c O N a) U a)",
    "expected behavior is {a} and {c} should eventually not be true.": "G(X N c O N (X a))"
  },
  "X N f O N ( N a )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f O N ( N a )",
    "expected behavior is to make {f} and {a} be true simultanously.": "X N (f A a)",
    "expected behavior is to make {f} and {a} be true sequentially and don't need to be adjacent.": "X N (f A F(a))",
    "expected behavior is to make {f}, {a} and {a} be true sequentially and don't need to be adjacent.": "X N (f A F(a A F(a)))",
    "expected behavior is {f}, {a} and {a} finally be true simultanously.": "X N (f A a A a)"
  },
  "G d O E N ( X c )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O E N ( X (c))",
    "expected behavior is to make {c} be true and eventually {d} be true.": "G(d O E N c)",
    "expected behavior is to make {c} be true and eventually {d} not be true.": "G(d A E N c)",
    "expected behavior is to make {c} be true and don't need to be adjacent with {d}.": "G(d O E N F(c))",
    "expected behavior is to make {d}, {c} be true and eventually {d} not be true.": "G(d A E N G(c))"
  },
  "d A N a A ( G b )": {
    "expected behavior is {d} should be true, or {b} should be true first and then {a} should be true. Such specification omits {d}.": "F(d A N a A (G b))",
    "expected behavior is {d}, {a} and {b} should be true sequentially and don't need to be adjacent.": "F(d A N(a A F(b)))",
    "expected behavior is {d}, {a} and {b} should be true simultanously.": "F(d A a A b)",
    "expected behavior is more than one atomic proposition in {{d}, {a}, {b}} should be true.": "F(d O a O b)",
    "expected behavior is {b} should not be true first, and then {a} should be true.": "F(d A N(X a A b))"
  },
  "d O G a A ( N b )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O (G(a A (N b)))",
    "expected behavior is {a} and {b} should be true simultanously.": "d O (G(a A b))",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "d O (G(F(a A b)))",
    "expected behavior is {d}, {a} and {b} finally be true simultanously.": "G(d O (a A b))",
    "expected behavior is more than one atomic proposition in {{d}, {a}, {b}} should be true.": "G(d O (a O b))",
    "expected behavior is {b} shoule be false, or {d} or {a} should be true first, and then {b} should be false.": "d O (G(a O N(b)))"
  },
  "( X ( b A G c ) )": {
    "expected behavior is {b} and {c} should be true simultanously.": "F(b A G(c))",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "F(X(b A F(c)))",
    "expected behavior is {b} and {c} should be true sequentially and need to be adjacent.": "F(X(b A c))",
    "expected behavior is {b} or {c} should be true first, and then {b} or {c} should be true.": "F(X(b O X(c)))",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "F(X(b O c))"
  },
  "b A ( N a A N f )": {
    "expected behavior is {a} and {f} should not be false simultanously. Such specification omits {a} and {f}.": "b A (N a O N f)",
    "expected behavior is {b} should be true, and then {a} or {f} should be true.": "b A (N a O N f)",
    "expected behavior is {b}, {a} and {f} should not be false simultanously.": "b A (N a O N f)",
    "expected behavior is {b} should be true, and then {a} and {f} should be true simultanously.": "b A (a A f)",
    "expected behavior is {b} should be true, and then {a} or {f} should be true, but subsequently both of them should be true.": "b A (N a U N f)"
  },
  "a U ( N a A f )": {
    "expected behavior is {f} should be true, no matter what the values of {a} are.": "F(a U ( N a A f ))",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U ( N a A f )",
    "expected behavior is {f} should be true, or {a} should not be true.": "F(a U ( N( a) A f))",
    "expected behavior is {f} should be true eventually, no matter what the values of {a} are.": "F(a U ( N a A G(f)))",
    "expected behavior is more than one atomic proposition in {{a}, {f}} should be true.": "F(a O f)"
  },
  "d U N N b U ( c )": {
    "expected behavior is {d} should be true first, and then {b} should be true. Such specification omits {d}.": "d U (b U (c))",
    "expected behavior is to make {d}, {b} and {c} be true simultanously.": "F ( d U ( b U ( c ) ) )",
    "expected behavior is to make {d} and {b} be true sequentially and don't need to be adjacent.": "F(d A F(b U (c)))",
    "expected behavior is more than one atomic proposition in {{d}, {b}, {c}} should be true.": "F(d O b O c)",
    "expected behavior is {d}, {b} and {c} should be true sequentially and don't need to be adjacent.": "F(d A F(b A F(c)))"
  },
  "d O N N b U ( b )": {
    "expected behavior is to make {d}, {b} and {b} be true sequentially.": "d O N N b U ( b A b )",
    "expected behavior is to make {d} and {b} be true simultanously.": "F(d A b)",
    "expected behavior is to make {d}, {b} and {b} be true simultanously.": "F(d A b A b)",
    "expected behavior is to make {d}, {b} and {b} be true sequentially and don't need to be adjacent.": "F(d O N N b U (b A F(b)))",
    "expected behavior is finally {b} should be true, no matter what the value of {d} is.": "F(d U (b U b))"
  },
  "( ( N e U X f ) )": {
    "expected behavior is {e} should be true first and then {f} should be true. Such specification omits {e}.": "e U X (f)",
    "expected behavior is {f} should be true first and then {e} should be true.": "X (f) U e",
    "expected behavior is to make {e} and {f} be true simultanously.": "(e A f)",
    "expected behavior is to make {e} and {f} be true sequentially and don't need to be adjacent.": "(e A F(X(f)))",
    "expected behavior is {e} should be true, or {e} should not be true first, and then {e} or {f} should be true.": "(e O X(f))"
  },
  "( G X f A c ) A f": {
    "expected behavior is {c} should be true when {f} is true. Such specification omits {c}.": "G X (f A c) A f",
    "expected behavior is {f} should always be true. Such specification omits {f}.": "(G X f A c) U f",
    "expected behavior is {f} and {c} should be true simultanously. Such specification omits {c}.": "G X (f A c) U f",
    "expected behavior is {f} should be true first, then {c} should be true. Such specification omits {f}.": "(G X f U c) A f",
    "expected behavior is {f} and {c} should be true sequentially and don't need to be adjacent. Such specification omits {f}.": "G X (f U c) A f"
  },
  "N E c U N a A N c": {
    "expected behavior is at least one of {a} and {c} should be true. Such specification omits {a} and {c}.": "E c U (N a O N c)",
    "expected behavior is {a} and {c} should be true simultanously.": "N E c U (N a A N c)",
    "expected behavior is {c} should be true first, and then {a} or {c} should be true.": "N E c U (N X(a A c))",
    "expected behavior is {a} and {c} eventually should be true, no matter what the value of {c} is.": "F(N E c U (N a A N c))",
    "expected behavior is {c} should not be true, and then {a} or {c} should be true.": "N E c U (N O (a A c))"
  },
  "G b A G ( e U b )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A G ( e U b )",
    "expected behavior is {b} should always be true and {e} should be true infinitely often.": "G b A G e",
    "expected behavior is {b} should finally be true, no matter what the values of {e} is.": "F(b A G ( e U b ))",
    "expected behavior is only one atomic proposition in {{b},{e}} should be true.": "G b O G e",
    "expected behavior is {e} should be true first, or {b} should not be true first, and then {b} or {e} should be true.": "G ( b O X ( e U b ) )"
  },
  "b O E N c A ( c )": {
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "b O E N c O (c)",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {b} or {c} should be true.": "b U E N c A (c)",
    "expected behavior is {b} and {c} should be true simultanously.": "b A E N c A (c)",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "b U E N F(c A (c))",
    "expected behavior is finally {c} should be true, no matter what the values of {b} are.": "b U E N c U (c)"
  },
  "f U E N c A ( c )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "F(f U E N c A ( c ))",
    "expected behavior is {f}, {E}, {N} and {c} should be true simultanously.": "F(f A E A N A c A ( c ))",
    "expected behavior is {E}, {N} and {c} should be true sequentially and don't need to be adjacent.": "F(f U E U N U c A ( c ))",
    "expected behavior is {f}, {E}, {N} and {c} should be true sequentially and don't need to be adjacent.": "F(f A F(E A F(N A c)) A ( c ))",
    "expected behavior is more than one atomic proposition in {{f}, {E}, {N}, {c}} should be true.": "F(f O E O N O c A ( c ))"
  },
  "X ( ( G f ) ) U G b": {
    "expected behavior is {f} and {b} should be true simultanously.": "F(X(f) U b)",
    "expected behavior is {b} should always be true and {f} should be true at least once.": "F(X(f) A G(b))",
    "expected behavior is {f} should be true at least once or {b} should always be true.": "F(X(f) O G(b))",
    "expected behavior is {f} and {b} should be true sequentially and don't need to be adjacent.": "F(X(G(f)) U G(b))",
    "expected behavior is {b} should always be true, no matter what the values of {f} are.": "G(X(f) U G(b))"
  },
  "X ( ( G f ) ) U N b": {
    "expected behavior is {b} should be true after {f} always be true. Such specification omits {b}.": "X ( ( G f ) U b )",
    "expected behavior is {f} should be true first, then {b} should be true.": "X ( ( f A G b ) )",
    "expected behavior is {f} and {b} should be true simultanously.": "X ( ( f A b ) )",
    "expected behavior is {f} and {b} should be true sequentially and don't need to be adjacent.": "X ( ( f A F(b) ) )",
    "expected behavior is finally {f} and {b} should be true simultanously.": "F(X ( ( f ) ) U ( b ))"
  },
  "a U d A ( E d ) A b": {
    "expected behavior is {b} should be true first or {b} and {d} should be true simultanously. Such specification omits {b}.": "a U (d A (E(d) A b))",
    "expected behavior is {a} and {d} should be true simultanously.": "F(a A d) A (E(d) A b)",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "F(a A F(d A (E(d) A b)))",
    "expected behavior is {a}, {b} and {d} finally be true simultanously.": "F(a A d A b)",
    "expected behavior is {a}, {b} or {d} should be true.": "F(a O b O d)"
  },
  "a U d U ( E d ) A b": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U d U (E d) A b",
    "expected behavior is to make {d} and {b} be true simultanously.": "a U (d A b) U (E d)",
    "expected behavior is to make {d} and {b} be true sequentially and don't need to be adjacent.": "a U F(d U (E d))A b",
    "expected behavior is {a}, {d} and {b} finally be true simultanously.": "F(a A d A b)",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {b}} should be true.": "F(a O d O b)",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} or {b} should be true.": "a U (d O X(b)) U (E d)",
    "expected behavior is {d} and {b} should be true simultanously, and then {b} should always be true.": "a U (d A G(b)) U (E d)",
    "expected behavior is finally {b} should be true, no matter what the values of {a} and {d} are.": "F(a U d U b)",
    "expected behavior is {b} should always be true, or {a} and {d} be true, but subsequently {b} should be true.": "G(a U d U b)"
  },
  "N N ( E ( d U c ) )": {
    "expected behavior is {d} and {c} should be true simultanously.": "N N (E (d A c))",
    "expected behavior is {d} should be true first and then {c} should be true.": "N N (E (d U F(c)))",
    "expected behavior is {d} and {c} should be true sequentially and don't need to be adjacent.": "N N (E (d A F(c)))",
    "expected behavior is {d} and {c} finally be true simultanously.": "N N (E (d A c))",
    "expected behavior is more than one atomic proposition in {{d}, {c}} should be true.": "N N (E (d O c))"
  },
  "N X ( E ( d U c ) )": {
    "expected behavior is {d} should be true first, then {c} should be true. Such specification omits {d}.": "N X ( E (d A c) )",
    "expected behavior is to make {c} be true after {d} is true and don't need to be adjacent.": "N X ( E (d A F(c)))",
    "expected behavior is to make {d} and {c} be true simultanously.": "N X ( E (d A c))",
    "expected behavior is to make {d} and {c} be true sequentially and don't need to be adjacent.": "N X ( E (d A F(c)))",
    "expected behavior is that {d} and {c} finally be true simultanously.": "N X ( E (d A c))"
  },
  "E e U ( N ( N d ) )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U ( E ( E e ) )",
    "expected behavior is {e} should be true first, and then {d} should be true.": "E d U ( E ( E e ) )",
    "expected behavior is {e} and {d} should be true simultanously.": "E ( e A d )",
    "expected behavior is {e} and {d} should be true sequentially and don't need to be adjacent.": "E ( e A F ( d ) )",
    "expected behavior is {e}, {d} finally be true simultanously.": "E ( F ( e ) A F ( d ) )"
  },
  "E e O ( N ( N d ) )": {
    "expected behavior is {e} and {d} should be true simultanously.": "F(e A N(N(d)))",
    "expected behavior is {e} and {d} should be true sequentially and don't need to be adjacent.": "F(e A F(N(N(d))))",
    "expected behavior is {e} should be true, or {d} should not be true first, and then {e} or {d} should be true.": "F(e O N(X(N(d))))",
    "expected behavior is more than one atomic proposition in {{e}, {d}} should be true.": "F(e O N(N(d)))",
    "expected behavior is finally {d} should be true, no matter what the values of {e} are.": "F(e U N(N(d)))"
  },
  "G G N e A d A E E e": {
    "expected behavior is to make {e} be true, and then {d} and {e} should be true at the same time.": "G G N e A (d A e)",
    "expected behavior is to make {e} and {d} be true sequentially and don't need to be adjacent.": "G G N e A F(d A e)",
    "expected behavior is {e} should be true twice.": "G G N (e A e) A d",
    "expected behavior is {e} should be true, and then {d} or {e} should be true.": "G G N e A (d O e)",
    "expected behavior is {e} should be true, and then {d} and {e} should be true simultanously.": "G G N e A (d A G(e))"
  },
  "G G N f A d U E E e": {
    "expected behavior is {f}, {d} and {e} should be true simultanously.": "G(f A d A e)",
    "expected behavior is to make {f} and {d} true sequentially and don't need to be adjacent.": "G G N (f A F(d A E E e))",
    "expected behavior is {f}, {d} and {e} should be true sequentially and don't need to be adjacent.": "G G N (f A F(d A F(E E e)))",
    "expected behavior is more than one atomic proposition in {{f}, {d}, {e}} should be true.": "G G N (f O d O E E e)",
    "expected behavior is {f} should not be true first, and then {d} or {e} should be true.": "G G N (f O X(d U E E e))"
  },
  "( E X N e A N N f )": {
    "expected behavior is {e} should be true before {f} and then {f} should always be true.": "E X (N e A (N N f))",
    "expected behavior is {e} and {f} should be true simultanously.": "(E X N e) A (N N f)",
    "expected behavior is {e} should be true first, and then {f} should be true until {e} is false.": "(E X N e) A (X N f)",
    "expected behavior is more than one atomic proposition in {{e}, {f}} should be true.": "(E X N e) O (N N f)",
    "expected behavior is {e} and {f} should be true sequentially.": "E X (N e A F(N f))"
  },
  "( E X e A N N f )": {
    "expected behavior is {e} or {f} should be true first. Such specification omits {e} or {f}.": "(E X (e O f) A N N f)",
    "expected behavior is to make {e} and {f} be true simultanously.": "(E X (e A f) A N N f)",
    "expected behavior is to make {e} and {f} be true sequentially and don't need to be adjacent.": "(E X e A N N (X f))",
    "expected behavior is to make {e}, {f} and {g} be true sequentially and don't need to be adjacent.": "(E X e A N N (X (f A g)))",
    "expected behavior is {e}, {f} and {g} finally be true simultanously.": "(E X e A N N (f A g))"
  },
  "N N ( a ) A N e U e": {
    "expected behavior is to make {e} be true finally. Such specification omits {e}.": "N N ( a ) A N e U e U e",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U N N ( a ) A N e U e",
    "expected behavior is to make {a} and {e} be true simultanously.": "N N (a A e) A N e U e",
    "expected behavior is to make {a} and {e} be true sequentially and don't need to be adjacent.": "N N (a) A N (e U e) A N e U e",
    "expected behavior is more than one atomic proposition in {{a}, {e}} should be true.": "N N (a O e) A N e U e"
  },
  "N X ( a ) A N b U e": {
    "expected behavior is {a} and {b} should be true simultanously.": "N X ( a A b ) U e",
    "expected behavior is {e} should be true, no matter what the values of {a} and {b} are.": "N X ( a A b ) A e",
    "expected behavior is {a} should be true first, and then {b} should be true, and finally {e} should be true.": "N X ( a ) A N b A e",
    "expected behavior is {a} should not be true first, and then {b} and {e} should be true.": "N X ( a ) U N b U e",
    "expected behavior is {a} and {b} should be true sequentially, but don't need to be adjacent.": "N X ( a ) A N X ( b ) U e"
  },
  "d A f A N d U a A d": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d A f A N d U (a A d)",
    "expected behavior is to make {f} and {d} be true simultanously.": "d A (f A N d) U (a A d)",
    "expected behavior is to make {f} and {d} be true sequentially and don't need to be adjacent.": "d A F(f A N d) U (a A d)",
    "expected behavior is to make {a}, {f} and {d} be true sequentially and don't need to be adjacent.": "d A F(f A N d) U F(a A d)",
    "expected behavior is {a}, {f} and {d} finally be true simultanously.": "F(d A (f A (N d U a)) A d)"
  },
  "f A f O d U d U d": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "F(f A f O d U d U d)",
    "expected behavior is to make {d} be true at least twice.": "F(f A f O d U X(d U d))",
    "expected behavior is to make {d} be true three times and don't need to be adjacent.": "F(f A f O d U F(d U F(d)))",
    "expected behavior is to make {f}, {d} be true sequentially and don't need to be adjacent.": "F(f A F(f O d) U F(d U d))",
    "expected behavior is to make {f} and {d} finally be true simultanously.": "F(f A f O (d U d) A d)"
  },
  "G E N ( X X d ) U e": {
    "expected behavior is {d} should be true first, and then {e} should be true. Such specification omits {d}.": "G E N (d U e)",
    "expected behavior is to make {d} and {e} be true simultanously.": "G E N (X d A e)",
    "expected behavior is to make {d} and {e} be true sequentially and don't need to be adjacent.": "G E N (X d U e)",
    "expected behavior is {d} and {e} should be true simultanously, and then {e} should always be true.": "G E N (X d A G(e))",
    "expected behavior is finally {e} should be true, no matter what the values of {d} are.": "G E N (X d U e)"
  },
  "E E ( G ( f ) ) O b": {
    "expected behavior is {f} should be true eventually. Such specification omits {f}.": "E E (G(f) O b)",
    "expected behavior is {b} should be true eventually. Such specification omits {b}.": "E E (G(f) O b)",
    "expected behavior is {f} and {b} should be true simultanously.": "F(E E (G(f)) O b)",
    "expected behavior is {f} and {b} should be true sequentially and don't need to be adjacent.": "F(E E (G(f)) A X b)",
    "expected behavior is {f}, {b} finally be true simultanously.": "E E (G(f) A b)"
  },
  "( G d ) U N c U N e": {
    "expected behavior is {d} should always be true. Such specification omits {d}.": "G d U N c U N e",
    "expected behavior is {c} and {e} should be true simultanously.": "(G d U (N c A N e))",
    "expected behavior is {c} and {e} should be true sequentially and don't need to be adjacent.": "(G d U (N c A F(N e)))",
    "expected behavior is {d}, {c} and {e} should be true sequentially and don't need to be adjacent.": "(G d A F(N c A F(N e)))",
    "expected behavior is more than one atomic proposition in {{d}, {c}, {e}} should be true.": "(G d O N c O N e)",
    "expected behavior is {d} shoule be true, or {c} should not be true first, and then {d} or {e} should be true.": "(G d U (N c O N e))",
    "expected behavior is {c} and {e} should be true simultanously, and then {e} should always be true.": "(G d U (N c A G(N e)))",
    "expected behavior is finally {e} should be true, no matter what the values of {d} and {c} are.": "(G d U (N c U N e))",
    "expected behavior is {e} should always be true, or {d} and {c} be true, but subsequently {e} should be true.": "G(G d U (N c U N e))"
  },
  "( N d ) O N c U N e": {
    "expected behavior is {c}, {d} and {e} should be true simultanously.": "( N d ) O ( N c U N e )",
    "expected behavior is {d} should be true, or {d} should not be true first, and then {c} or {e} should be true.": "( N d ) O ( N c O N e )",
    "expected behavior is {c}, {d} and {e} should be true sequentially and don't need to be adjacent.": "( N d ) O N ( c U F(e) )",
    "expected behavior is more than one atomic proposition in {{c}, {d}, {e}} should be true.": "( N d ) O ( N c O e )",
    "expected behavior is {e} should always be true, or {d} and {c} be true, but subsequently {e} should be true.": "G( ( N d ) O ( N c U e ) )"
  },
  "E N N a U d O ( a )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (d O (a))",
    "expected behavior is to make {a} and {d} be true simultanously.": "E N N (a A d)",
    "expected behavior is to make {a} and {d} be true sequentially and don't need to be adjacent.": "E N N (a U (d O (a)))",
    "expected behavior is to make {a}, {d} and {a} be true sequentially and don't need to be adjacent.": "E N N (a A (d O (a)))",
    "expected behavior is more than one atomic proposition in {{a}, {d}} should be true.": "E N N (a O d)"
  },
  "E b U N ( c ) O N a": {
    "expected behavior is {b} should always be true. Such specification omits {b}.": "b U N(c) O N a",
    "expected behavior is {c} should be true eventually. Such specification omits {c}.": "b U (c O N a)",
    "expected behavior is {a} should be true eventually. Such specification omits {a}.": "b U N(c) O a",
    "expected behavior is {a} and {b} should be true simultanously. Such specification omits {b}.": "b A N(c) O N a",
    "expected behavior is {a}, {b} and {c} should be true simultanously. Such specification omits {c}.": "b A c O N a"
  },
  "E b U N ( f ) O a": {
    "expected behavior is {b} should be true first and then {f} or {a} should be true. Such specification omits {b}.": "b U N(f) O a",
    "expected behavior is {a} and {f} should be true simultanously.": "E b U (N(f) A a)",
    "expected behavior is {a} should be true first.": "E b U (N(f) O a)",
    "expected behavior is {b}, {f} and {a} should be true simultanously.": "E (b A N(f) A a)",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {b} or {a} should be true.": "E b U (N(f) O X(a))"
  },
  "N X G c O c U b U c": {
    "expected behavior is {c} should always be true. Such specification omits {c}.": "G(c O c U b U c)",
    "expected behavior is {b} should be true first, and then {c} should always be true.": "G(b U (c O c U c))",
    "expected behavior is {c} should be true sequentially, and don't need to be adjacent.": "N X G(c O F(c U b U c))",
    "expected behavior is {b} and {c} should be true simultanously.": "N X G(c O (b A c) U c)",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "N X G(c O (b O c) U c)",
    "expected behavior is {b} or {c} should be true first, then {c} should always be true.": "N X G(c O (b U c) U c)",
    "expected behavior is {b} and {c} should be true simultanously, and then {b} or {c} should be true.": "N X G(c O (b A c) U (b U c))",
    "expected behavior is finally {c} should be true, no matter what the values of {b} are.": "N X G(c O b U c)"
  },
  "N G G d O c U b O c": {
    "expected behavior is {d} should not be true first, and then {c} and {b} should be true sequentially. Such specification omits {d}.": "N G d O (c U b O c)",
    "expected behavior is {b} and {c} should be true simultanously.": "N G G d O (b A c U b O c)",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "N G G d O (b A F(c) U b O c)",
    "expected behavior is at least one atomic proposition in {{b}, {c}} should be true.": "N G G d O (b O c U b O c)",
    "expected behavior is finally {b} and {c} should be true simultanously.": "N G G d O (b A c U b A c)"
  },
  "( N N N c ) A ( e )": {
    "expected behavior is {c} should be true first and then {e}. Such specification omits {e}.": "(N N N (c A e))",
    "expected behavior is to make {c} and {e} be true simultanously.": "(N N N c) A e",
    "expected behavior is to make {c} and {e} be true sequentially and don't need to be adjacent.": "(N N N c) A F(e)",
    "expected behavior is {c}, {e} eventually be true simultanously.": "F((N N N c) A e)",
    "expected behavior is more than one atomic proposition in {{c}, {e}} should be true.": "F(c O e)"
  },
  "( E N c ) A ( e )": {
    "expected behavior is {e} should not be true until {c} is true. Such specification omits {c}.": "( E N c ) A ( E N e )",
    "expected behavior is {e} should be true first, and then {c} should be true.": "( E N e ) A ( c )",
    "expected behavior is {c} should be true first, and then {e} should be true.": "( c ) A ( E N e )",
    "expected behavior is {c} should be true first, and then {e} should not be true.": "( c ) A ( N e )",
    "expected behavior is {c} and {e} should be true simultanously.": "( c ) A ( e )"
  },
  "b A G a U N N ( c )": {
    "expected behavior is {b} and {a} should be true simultanously.": "b A (a U G (c))",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be true.": "b A G (a U (N N (c)))",
    "expected behavior is {b} and {a} should be true sequentially and don't need to be adjacent.": "F(b A G (a U N N (c)))",
    "expected behavior is to make {b}, {a} and {c} be true sequentially and don't need to be adjacent.": "F(b A F(a U N N (c)))",
    "expected behavior is finally {c} should be true, no matter what the values of {a} and {b} are.": "F(b A a U G(c))"
  },
  "( d O N G e U N a )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O (N G (e U N a))",
    "expected behavior is {e} should be true first, then {a}. Such specification omits {e}.": "d O (N G (e A N a))",
    "expected behavior is {a} should always be true. Such specification omits {a}.": "d O (N G (e U a))",
    "expected behavior is at least one atomic proposition in {{d}, {e}, {a}} should be true.": "d O (N G (e U a)) V d O (N G e) V d O (N G a)",
    "expected behavior is at least one atomic proposition in {{d}, {e}, {a}} should be true, and {a} should always be true.": "d O (N G (e U a)) V d O (N G e) V G(a)"
  },
  "( d O N G e U a )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O (N G (e U a))",
    "expected behavior is {e} should not be true before {a}.": "(d O N (G (e) U a))",
    "expected behavior is {a} should not be true before {e}.": "(d O N ((G e) A a))",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {a}} should be true.": "F(d O N G(e U a))",
    "expected behavior is {e} and {a} should be true simultanously.": "(d O N (e A a))"
  },
  "N f A E N ( d ) U c": {
    "expected behavior is {f} should be false first. Such specification omits {f}.": "N f A E N ( d ) U c",
    "expected behavior is {d} and {c} should be true simultanously.": "N f A E ( d A c)",
    "expected behavior is {d} and {c} should be true sequentially and don't need to be adjacent.": "N f A E ( d A F(c))",
    "expected behavior is to make {f}, {d} and {c} be true sequentially and don't need to be adjacent.": "N f A F(E(d A F(c)))",
    "expected behavior is {f}, {d} and {c} finally be true simultanously.": "N f A E (d A c)"
  },
  "( e U ( G X N e ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (G X N(e))",
    "expected behavior is {e} should not be true again after it becomes true.": "( e U ( X N e ) )",
    "expected behavior is {e} should be true only once.": "G( e U (X N e ) )",
    "expected behavior is {e} should be true until {N} becomes true.": "F( e U (X N e ) )",
    "expected behavior is {N} should be true, or {N} should not be true first, and then {N} or {e} should be true.": "F(e U (N O X(e)))",
    "expected behavior is {e} should be true until {N} and {e} become true simultanously.": "F(e U (G X (N A e)))"
  },
  "( e U ( N N N c ) )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c U (N N N e)",
    "expected behavior is to make {e} and {c} be true simultanously.": "(e A c)",
    "expected behavior is to make {e} and {c} be true sequentially and don't need to be adjacent.": "(e U F(N N N c))",
    "expected behavior is to make {e}, {N} and {c} be true sequentially and don't need to be adjacent.": "(e A F(N A F(N A c)))",
    "expected behavior is {e}, {N} and {c} finally be true simultanously.": "F(e A N A c)",
    "expected behavior is more than one atomic proposition in {{e}, {N}, {c}} should be true.": "F(e O N O c)",
    "expected behavior is {N} shoule be true, or {N} should not be true first, and then {N} or {c} should be true.": "(e U (N O X(c)))",
    "expected behavior is {N} and {c} should be true simultanously, and then {c} should always be true.": "(e U (N A G(c)))",
    "expected behavior is finally {c} should be true, no matter what the values of {e} and {N} are.": "(e U (N U c))",
    "expected behavior is {c} should always be true, or {e} and {N}be true, but subsequently {c} should be true.": "G(e U (N U c))"
  },
  "d U G a O d O ( b )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "G(d U a O d O (b))",
    "expected behavior is to make {a} and {d} be true simultanously.": "d U (a A d O (b))",
    "expected behavior is to make {a} and {d} be true sequentially and don't need to be adjacent.": "d U (a A F(d O (b)))",
    "expected behavior is to make {a}, {d} and {b} be true sequentially and don't need to be adjacent.": "d U (a A F(d A F(b)))",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {b}} should be true.": "d U (a O d O b)"
  },
  "X X e A b U N E N d": {
    "expected behavior is {e} should be true first and then {b} should be true. Such specification omits {e}.": "X (X e A b) U N (E N d)",
    "expected behavior is {b} and {d} should be true simultanously.": "X (X e A b) U (N E N d)",
    "expected behavior is to make {e}, {b} and {d} be true sequentially and don't need to be adjacent.": "X X (e A F(b A F(d)))",
    "expected behavior is {e}, {b} and {d} should finally be true simultanously.": "X X (e A b A d)",
    "expected behavior is more than one atomic proposition in {{e}, {b}, {d}} should be true.": "X X (e O b O d)"
  },
  "X X e U f U N E N d": {
    "expected behavior is to make {e} and {f} be true simultanously.": "X X (e A f) U N E N d",
    "expected behavior is to make {e} and {f} be true sequentially and don't need to be adjacent.": "X X (e U F(f)) U N E N d",
    "expected behavior is to make {d}, {e} and {f} be true sequentially and don't need to be adjacent.": "X X (e U F(f U F(N E N d)))",
    "expected behavior is {d}, {e} and {f} finally be true simultanously.": "X X (e A f A N E N d)",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {f}} should be true.": "X X (e O f O N E N d)"
  },
  "N b U ( N d ) O G a": {
    "expected behavior is all atomic propositions in {{a}, {b}, {d}} should be true.": "F(b U (N d) O G a)",
    "expected behavior is {a} and {b} should be true simultanously.": "F(b A G a) U (N d)",
    "expected behavior is {d} should not be true first, and then {b} or {d} should be true.": "N b U (N d O G a)",
    "expected behavior is {a} should be true first, and then {b} or {d} should be true.": "G a U (N b U (N d))",
    "expected behavior is first {d} should be false, and then {b} and {d} should be true simultanously.": "G(N d) U (b A G a)"
  },
  "N b U ( N a ) O X a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (N a) O X a",
    "expected behavior is {b} and {a} should be true sequentially and don't need to be adjacent.": "N b U (N a) O X F(a)",
    "expected behavior is {b} should not be true, and then {a} should be true.": "N b U (N a) O X G(a)",
    "expected behavior is {a} should be true finally, no matter what the values of {b} are.": "F(b U (N a) O X a)",
    "expected behavior is {b} should be true, and then {a} should not be true.": "N b U (N F(a)) O X a"
  },
  "( X f U b A G G c )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U (b A G G(c))",
    "expected behavior is to make {b} and {c} be true simultanously.": "( X f U b A c )",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "( X f U b A F(c)))",
    "expected behavior is to make {f}, {b} and {c} be true sequentially and don't need to be adjacent.": "( X f A F(b A F(c)))",
    "expected behavior is {f}, {b} and {c} finally be true simultanously.": "( X f A b A c)"
  },
  "( N f U b A G N c )": {
    "expected behavior is {f} should be true first.": "f U (b A G(N c))",
    "expected behavior is {b} and {c} should be true simultanously, and then {c} should always be true.": "(N f U b) A G(N c)",
    "expected behavior is {f}, {b} and {c} should be true simultanously.": "(N f A b A G N c)",
    "expected behavior is {f} should always be true, or {b} and {c} be true, but subsequently {f} should be true.": "G(N f U (b A G N c))",
    "expected behavior is {f}, {b} and {c} should be true sequentially and don't need to be adjacent.": "(N f U (b A F(G N c)))"
  },
  "G a U c A N ( N b )": {
    "expected behavior is {a} and {b} should be true sequentially. Such specification omits {b}.": "G(a U b A c)",
    "expected behavior is {a}, {b} and {c} should be true sequentially and don't need to be adjacent.": "G(a A F(b A F(c)))",
    "expected behavior is to make {a} and {c} be true simultanously.": "G(a A c)",
    "expected behavior is to make {a}, {b} and {c} finally be true simultanously.": "F(a A b A c)",
    "expected behavior is that {b} should not be true.": "G(a U c)"
  },
  "X a U ( f O b ) U b": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "a U (f O b) U b",
    "expected behavior is {f} should be true first, and then {b} should be true.": "X(a U (f A b)) U b",
    "expected behavior is {b} should be true first, and then {f} should be true.": "X a U (b A f) U b",
    "expected behavior is {b} should always be true. Such specification omits {b}.": "X a U (f O b) U b",
    "expected behavior is more than one atomic proposition in {{a}, {f}, {b}} should be true.": "X(a O f O b) U b"
  },
  "X a U ( a A b ) U b": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (a A b) U b",
    "expected behavior is {b} should be true first. Such specification omits {b}.": "X a U (a A b) U b",
    "expected behavior is to make {a} and {b} be true simultanously.": "X a U (a A b) A b",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent.": "X a U (a A F(b))",
    "expected behavior is {a}, {b} finally be true simultanously.": "F(X a U (a A b))"
  },
  "X e A ( a ) O ( a )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a A (e O (a))",
    "expected behavior is {a} should be true only when {e} is true.": "X(e A (a))",
    "expected behavior is {a} should be true only when {e} is false.": "X(\u00ace A (a))",
    "expected behavior is to make {a} and {e} be true simultanously.": "F(e A (a))",
    "expected behavior is to make {a} and {e} be true sequentially and don't need to be adjacent.": "F(e A F(a))"
  },
  "N e A ( e ) O ( e )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A (e) O (e)",
    "expected behavior is to make {e} be true twice.": "F(e A (e) O (e))",
    "expected behavior is to make {e} be true sequentially and don't need to be adjacent.": "F(e A F(e O (e)))",
    "expected behavior is to make {e} be true at least once.": "G(e A (e) O (e))",
    "expected behavior is to make {e} should be true, or {e} should not be true first, and then {e} should be true.": "F(e O X(e A (e)))"
  },
  "c A a U e A N a U a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a A c U e A N a U a",
    "expected behavior is {a} should be true again after {e} is true. Such specification omits {a}.": "c A a U (e A N a) U a",
    "expected behavior is {a} should not be true again after {e} is true. Such specification doesn't omit {a}.": "c A a U (e A N(a U a))",
    "expected behavior is {a} should be true after {c} and {e}, but not necessarily in adjacent time frames. Such specification omits {a}.": "c A a U (e A F(N(a)))",
    "expected behavior is {c}, {e} and {a} should be true simultanously. Such specification omits {a}.": "c A a U (e A (N(a) A a))"
  },
  "c A a U e O N a U e": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (c A e O N (a U e))",
    "expected behavior is to make {c} and {e} be true simultanously.": "c A (a U e O N a U e)",
    "expected behavior is to make {c}, {a} and {e} be true sequentially and don't need to be adjacent.": "F(c A a U F(e O N (a U e)))",
    "expected behavior is finally {a}, {e} should be true simultanously.": "F(c A a U F(e O N a U e))",
    "expected behavior is more than one atomic proposition in {{c}, {a}, {e}} should be true.": "F(c O a O e)"
  },
  "( N X d A N ( c ) )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d A N ( c )",
    "expected behavior is {c} should be true first. Such specification omits {c}.": "N X d A N ( c )",
    "expected behavior is to make {c} and {d} be true simultanously.": "( N X d A c )",
    "expected behavior is to make {c} and {d} be true sequentially and don't need to be adjacent.": "( N X d A N ( F(c) ) )",
    "expected behavior is more than one atomic proposition in {{c}, {d}} should be true.": "( N X d A N ( c O d ) )"
  },
  "E G b A N ( f U d )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "G b A N (f U d)",
    "expected behavior is {f} and {d} should be true simultanously.": "E G b A (f A d)",
    "expected behavior is {f} and {d} should be true sequentially and don't need to be adjacent.": "E G b A F(f U d)",
    "expected behavior is to make {b}, {f} and {d} be true sequentially and don't need to be adjacent.": "E G F(b A F(f U d))",
    "expected behavior is {b}, {f} and {d} finally be true simultanously.": "E G (b A f A d)"
  },
  "N X b A ( f U d )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A (f U d)",
    "expected behavior is to make {f} and {d} be true simultanously.": "N X (f A d)",
    "expected behavior is to make {f} and {d} be true sequentially and need to be adjacent.": "N X (f U d)",
    "expected behavior is to make {b}, {f} and {d} be true sequentially and need to be adjacent.": "N X (b U f U d)",
    "expected behavior is {b}, {f} and {d} finally be true simultanously.": "N X (b A f A d)",
    "expected behavior is more than one atomic proposition in {{b}, {f}, {d}} should be true.": "N X (b O f O d)",
    "expected behavior is {f} shoule be true, or {f} should not be true first, and then {f} or {d} should be true.": "b A (f O X(d))",
    "expected behavior is {f} and {d} should be true simultanously, and then {d} should always be true.": "N X (b A G(f A d))",
    "expected behavior is finally {d} should be true, no matter what the values of {b} and {f} are.": "N X (b U f U d)",
    "expected behavior is {d} should always be true, or {b} and {f} be true, but subsequently {d} should be true.": "G(b U f U d)"
  },
  "( G X N e U a A c )": {
    "expected behavior is {a} and {c} should be true sequentially and don't need to be adjacent.": "G X N e U (a A F(c))",
    "expected behavior is {e} should not be true, and then {a} and {c} should be true simultanously.": "G (X N e) U (a A c)",
    "expected behavior is {a} and {c} should be true simultanously, and then {e} should always be true.": "G X (N (e A (a A c)))",
    "expected behavior is {a} and {c} should be true sequentially and adjacent.": "G X N (e U (a A c))",
    "expected behavior is {a}, {c} and {e} finally be true simultanously.": "G X N (e A a A c)"
  },
  "( N a ) O E c U E c": {
    "expected behavior is {c} should eventually be true but not necessary to be true immediately.": "( N a ) O F(c U E c)",
    "expected behavior is one of {a} and {c} should be true first.": "F((N a) O (E c U E c))",
    "expected behavior is {c} should eventually be true but not necessary to be true immediately, and {a} should always be true.": "G(a O F(c U E c))",
    "expected behavior is {c} should eventually be true but not necessary to be true immediately, and {a} should eventually be true but not necessary to be true immediately.": "F(G(a) O F(c U E c))",
    "expected behavior is {c} should eventually be true but not necessary to be true immediately, and {a} should eventually be true but not necessary to be true immediately, and {a} and {c} should be true simultanously.": "F(G(a) O F((c A E c)))",
    "expected behavior is {c} should eventually be true but not necessary to be true immediately, and {a} should eventually be true but not necessary to be true immediately, and {a} or {c} should be true simultanously.": "F(G(a) O F((c O E c)))"
  },
  "( N a ) U E e U N a": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (N a U N a)",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "N a U (E e U N a)",
    "expected behavior is {e} and {a} should be true simultanously.": "(N a A E e) U N a",
    "expected behavior is to make {e} and {a} be true sequentially and don't need to be adjacent.": "(N a A F(E e)) U N a",
    "expected behavior is to make {e}, {a} and {e} finally be true simultanously.": "F(e A N a A E e)"
  },
  "G ( ( N b ) ) A N a": {
    "expected behavior is {a} should be false first. Such specification omits {a}.": "G ((N b) A N a)",
    "expected behavior is {a} and {b} should be false simultanously.": "G ( ( N b ) A N a )",
    "expected behavior is to make {a} and {b} be false sequentially and don't need to be adjacent.": "G(N(b A N(a)))",
    "expected behavior is {a} and {b} should be false, but {a} should be true first.": "G((N b) U N a)",
    "expected behavior is at least one atomic proposition in {{a}, {b}} should be false.": "G(N(a O N(b)))"
  },
  "( N e ) O G N ( f )": {
    "expected behavior is {e} and {f} should be true simultanously.": "G(e A f)",
    "expected behavior is {e} and {f} should be true sequentially and don't need to be adjacent.": "(N e) O G N F(f)",
    "expected behavior is {e} should be true, or {e} should not be true first, and then {e} or {f} should be true.": "(N e) O G N (e O f)",
    "expected behavior is {e} and {f} should be true, and then {f} should always be true.": "(N e) O G(f)",
    "expected behavior is finally {f} should be true, no matter what the values of {e} are.": "(N e) U G N (f)"
  },
  "f O N ( G ( X e ) )": {
    "expected behavior is to make {f} or {e} be true. Such specification omits {f}.": "f O N ( G ( f U X e ) )",
    "expected behavior is to make {f} or {e} be true, and then {e} should always be true.": "f O N ( G ( f U G X e ) )",
    "expected behavior is to make {f} and {e} be true simultaneously.": "f O N ( G ( f A X e ) )",
    "expected behavior is to make {f} and {e} be true sequentially and don't need to be adjacent.": "f O N ( G ( f A F ( X e ) ) )",
    "expected behavior is finally {f} or {e} should be true, no matter what the values of other atomic propositions are.": "F ( f O N ( G ( X e ) ) )"
  },
  "G E ( ( N f ) ) A b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A G E ( ( N f ) )",
    "expected behavior is to make {b} and {f} be true simultanously.": "G E ( ( N (b A f)) )",
    "expected behavior is to make {b} and {f} be true sequentially and don't need to be adjacent.": "G E ( ( N b ) ) A F(f)",
    "expected behavior is to make {b}, {f} and {e} be true sequentially and don't need to be adjacent.": "G E ( ( N b ) ) A F(E(f A e))",
    "expected behavior is {b}, {f} and {e} finally be true simultanously.": "G E ( ( N (b A f A e)) )"
  },
  "N ( E X G e ) O N b": {
    "expected behavior is {e} should be true at the same time with {b}.": "N(EX(Ge A b))",
    "expected behavior is {b} should be true first, and then {e} should be true.": "N(b A EXG(e))",
    "expected behavior is {e} should be true at least once, and then {b} should be true.": "N(EG(e) A b)",
    "expected behavior is {b} should not be true, and then {e} should be true.": "N(b O EXG(e))",
    "expected behavior is {e} should be true at most once, and then {b} should be true.": "N(EFXG(e) A b)"
  },
  "N ( E N G e ) O N b": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "E N G (e O N b)",
    "expected behavior is to make {e} and {b} be true simultanously.": "N (E N (G e A N b))",
    "expected behavior is to make {e} and {b} be true sequentially and don't need to be adjacent.": "N (E N G (e A F(N b)))",
    "expected behavior is to make {e}, {b} and {c} be true sequentially and don't need to be adjacent.": "N (E N G (e A F(N b A F(N c))))",
    "expected behavior is more than one atomic proposition in {{e}, {b}, {c}} should be true.": "N (E N G (e O N b O N c))"
  },
  "b U X ( f ) A E N e": {
    "expected behavior is {e} should be true after {f} is true. Such specification omits {e}.": "b U (f A E N e)",
    "expected behavior is {f} should be true or {e} should be true.": "b U (f O E N e)",
    "expected behavior is {f} should be true and then {e} should be true.": "b U (f A E N (X e))",
    "expected behavior is {b}, {f} and {e} should be true simultanously.": "b A f A E N e",
    "expected behavior is {e} should always be true.": "b U (f A G E N e)"
  },
  "N E ( d ) A X E X e": {
    "expected behavior is to make {d} and {e} be true sequentially and don't need to be adjacent.": "N E (d) A X F(E X e)",
    "expected behavior is to make {d} and {e} be true simultanously.": "N E (d A e) A X E X e",
    "expected behavior is more than one atomic proposition in {{d}, {e}} should be true.": "N E (d O e) A X E X e",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} or {e} should be true.": "N E (d U X(e)) A X E X e",
    "expected behavior is finally {e} should be true, no matter what the value of {d} is.": "N E (d U e) A X E X e"
  },
  "N N ( c ) A X E N e": {
    "expected behavior is finally {e} should be true, no matter what the values of {c} are.": "F(c A X E N e)",
    "expected behavior is {e} should always be true, or {c} should be true, but subsequently {e} should be true.": "G(c A X E N e)",
    "expected behavior is {c} and {e} should be true simultanously, and then {e} should always be true.": "F(N N (c) A X G(E N e))",
    "expected behavior is {c} should not be true first, and then {e} should be true.": "F(N N (c) O X E N e)",
    "expected behavior is more than one atomic proposition in {{c}, {e}} should be true.": "F(N N (c) O E N e)"
  },
  "X N N G d A G b O c": {
    "expected behavior is {d} should be true. Such specification omits {d}.": "X N N (d A G b O c)",
    "expected behavior is {b} and {c} should be true simultanously.": "X N N (d A (b A c))",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "X N N (d A (b A F(c)))",
    "expected behavior is to make {d}, {b} and {c} be true sequentially and don't need to be adjacent.": "X N N (G d A F(b A F(c)))",
    "expected behavior is {d}, {b} and {c} finally be true simultanously.": "X N N (d A b A c)"
  },
  "E N ( X ( a ) U c )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "E N ( X ( a ) U c )",
    "expected behavior is to make {a} and {c} be true simultanously.": "E N ( a U c )",
    "expected behavior is to make {a} and {c} be true sequentially and don't need to be adjacent.": "E N ( X ( a ) U F(c))",
    "expected behavior is to make {a}, {b} and {c} be true sequentially and don't need to be adjacent.": "E N ( X ( a ) A F(X(c)))",
    "expected behavior is {a}, {b} and {c} finally be true simultanously.": "E N ( a A X(c) )",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be true.": "E N ( X ( a ) O X ( c ) )",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {c} should be true.": "E N ( X ( a ) U ( F(c) O X(c) ))",
    "expected behavior is {b} and {c} should be true simultanously, and then {c} should always be true.": "E N ( X ( a ) A G(c) )",
    "expected behavior is finally {c} should be true, no matter what the values of {a} and {b} are.": "E N ( X ( a ) U G(c) )",
    "expected behavior is {c} should always be true, or {a} and {b} be true, but subsequently {c} should be true.": "E N ( X ( a ) U ( c O G(c) ) )"
  },
  "e U G G ( f ) O N f": {
    "expected behavior is {e} should not be true and then {f} should not be true.": "e U G G (f) O N (f U e)",
    "expected behavior is {e} should be true and then {f} should not be true.": "F(e U G G (f) O N f)",
    "expected behavior is {e} should not be true and then {f} should never be true.": "e U G G (f) O N (f R e)",
    "expected behavior is {e} should not be true and then {f} should always be true.": "e U G G (f) O N (f A e)",
    "expected behavior is {e} should not be true and then {f} should eventually be true.": "e U G G (f) O N (f U e)"
  },
  "c U G N ( f ) A N f": {
    "expected behavior is {f} should be true before {c}. Such specification omits {f}.": "f U (c G N(f) A N f)",
    "expected behavior is {f} should be true before {c}, and then {f} should always be true.": "f U (c G(N f A N f))",
    "expected behavior is {c} should be true before {f}. Such specification omits {c}.": "c U (G N (f) A N f)",
    "expected behavior is {c} should be true first, and then {f} should always be true.": "c U (G (N f) A N f)",
    "expected behavior is {c} should be true first, and then {f} should not be true.": "c U (G N(f) O N f)"
  },
  "E N e O ( ( N f ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e O ( ( N f ) )",
    "expected behavior is to make {e} and {f} be true simultanously.": "E N (e A f)",
    "expected behavior is to make {e} and {f} be true sequentially and don't need to be adjacent.": "E N (e O f)",
    "expected behavior is to make {e}, {N f} and {f} be true sequentially and don't need to be adjacent.": "E N (e O N f O f)",
    "expected behavior is more than one atomic proposition in {{e}, {N f}, {f}} should be true.": "E N (e O N f O f)"
  },
  "( X a A G N d U e )": {
    "expected behavior is to make {d} and {e} be true simultanously.": "(X a A G (d A e))",
    "expected behavior is {d} and {e} should be true sequentially and don't need to be adjacent.": "(X a A G (d U e))",
    "expected behavior is {a} should be true only once, and then {d} and {e} should be true simultanously.": "(X a A G N (d A e))",
    "expected behavior is {d} and {e} should be true simultanously, but {d} should not be true.": "(X a A G (N d A e))",
    "expected behavior is {a}, {d}, and {e} should all finally be true simultanously.": "F(X a A G (d A e))"
  },
  "f O X N N ( a ) O X b": {
    "expected behavior is {a} and {b} should be true simultanously.": "f O (a A b)",
    "expected behavior is {a} should be true first, and then {b} should be true.": "F(a U b)",
    "expected behavior is {a} should be true first, and then {b} should be true, no matter what the values of {f} are.": "F(f O (a U b))",
    "expected behavior is {f}, {a} and {b} should finally be true simultanously.": "F(f A (X N N (a)) A X b)",
    "expected behavior is more than one atomic proposition in {{f}, {a}, {b}} should be true.": "F(f O (a O b))"
  },
  "f O X N ( a ) A G b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "F(b O X N ( a ) A G b)",
    "expected behavior is {b} should not be true first, and then {a} or {b} should be true.": "F(b O X N ( a ) O G b)",
    "expected behavior is {a} and {b} should be true simultanously, and then {a} should always be true.": "F(b A X N (a A G b))",
    "expected behavior is finally {a} should be true, no matter what the value of {b} is.": "F(b U X N (a))",
    "expected behavior is {a} should always be true, or {b} be true, but subsequently {a} should be true.": "G(b U X N (a))"
  },
  "E G d A N a U ( N f )": {
    "expected behavior is to make {d} and {a} be true simultanously.": "E G (d A a) U (N f)",
    "expected behavior is {d} should be true first, and then {a} or {f} should be true.": "E G d A (N a U N f)",
    "expected behavior is {d} should always be true, or {a} and {f} be true, but subsequently {a} should be true.": "G(E G d A (N a U N f))",
    "expected behavior is to make {a} and {f} be true sequentially and don't need to be adjacent.": "E G d A (N a A N f)",
    "expected behavior is more than one atomic proposition in {{d}, {a}, {f}} should be true.": "E G (d O a O f)"
  },
  "E G d O N a U ( f )": {
    "expected behavior is {d} should be true in the end, but it is not specified.": "E G d O N a U (f A G d)",
    "expected behavior is {f} should be true before {a}, but it is not specified.": "E G d O N (f U a)",
    "expected behavior is {d} and {f} should be true simultanously, but it is not specified.": "E G d O N (f A d) U a",
    "expected behavior is {d} and {a} should be true simultanously, but it is not specified.": "E G d O N (d A a) U f",
    "expected behavior is {f} should be true first, but it is not specified.": "E G d O N (f A X(a U f))"
  },
  "c O E e O N b U N N d": {
    "expected behavior is at least one of {b}, {d} should be true. Such specification omits {b} and {d}.": "c O E e O b U N d",
    "expected behavior is at least one of {b}, {d} should be true, and {b} should be true first. Such specification omits {b}.": "c O E e O N b U d",
    "expected behavior is at least one of {b}, {d} should be true, and {d} should be true first. Such specification omits {d}.": "c O E e O N b U N b",
    "expected behavior is finally {b} and {d} should be true simultanously. Such specification omits {b}.": "c O E e O N b A N d",
    "expected behavior is finally {b} and {d} should be true, no matter what the values of {c} and {e} are. Such specification omits {b}.": "c U E e U b A d"
  },
  "d U E e O X e U N d": {
    "expected behavior is {d} and {e} should be true simultanously.": "d A E(e O X(e U N(d)))",
    "expected behavior is {e} should be true, or {e} should not be true first, and then {d} or {e} should be true.": "d U E(e O X(e U N(d)))",
    "expected behavior is {e} should always be true, or {d} and {e} be true, but subsequently {e} should be true.": "G(d U E(e O X(e U N(d))))",
    "expected behavior is more than one atomic proposition in {{d}, {e}} should be true.": "F(d O E(e O X(e U N(d))))",
    "expected behavior is finally {d} should be true, no matter what the values of {e} is.": "d A E(e O X(e U N(d)))"
  },
  "( N c ) U ( a ) U G d": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U ( ( N c ) U G d)",
    "expected behavior is to make {a} and {d} be true sequentially and don't need to be adjacent.": "F(a A F( ( N c ) U G d))",
    "expected behavior is to make {c} and {d} be true simultanously.": "F( ( N c ) A G d )",
    "expected behavior is finally {d} should be true, no matter what the values of {c} and {a} are.": "F( ( N c ) U ( a ) U d)",
    "expected behavior is {a}, {c} and {d} finally be true simultanously.": "F(a A ( N c ) A G d)"
  },
  "G N ( N b U N a U d )": {
    "expected behavior is {b} should be true, {a} should not be true, and then {d} should be true.": "G N (N b U N a U N d)",
    "expected behavior is {b} should be true, {a} should not be true, and then {d} should always be true.": "G N (N b U N a U G d)",
    "expected behavior is {b} should be true, {a} should not be true, and then {d} should be true finally.": "G N (N b U N a A d)",
    "expected behavior is {b} should be true, {a} should not be true, and then {d} should not be true.": "G N (N b U N a O d)",
    "expected behavior is {b} should be true or {a} should not be true, and then {d} should be true.": "G N (N b O N a U d)"
  },
  "G N ( N b U a O d )": {
    "expected behavior is {b} should be true first, and then {a} or {d} should be true.": "G(b U (a O d))",
    "expected behavior is {a} should be true eventually, and {d} should not be true.": "G(b U (a A Nd))",
    "expected behavior is {a} and {b} should be true simultanously, and then {d} should be true.": "G(b A a U d)",
    "expected behavior is {b} should be true eventually, and {d} should always be true.": "G(b U Gd)",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {d}} should be true.": "G(a O b O d)"
  },
  "( d ) O X b O E e O f": {
    "expected behavior is {b}, {e} and {f} should be true simultaneously.": "(d O b) O E (e O f)",
    "expected behavior is {b} should be true first, and then {e} or {f} should be true.": "(d O X b) O E (e U f)",
    "expected behavior is more than one atomic proposition in {{d}, {b}, {e}, {f}} should be true.": "(d O b) O E (e O f) A (d O e) A (d O f) A (b O e) A (b O f)",
    "expected behavior is {e} should be true, or {e} should not be true first, and then {e} or {f} should be true.": "(d O X b) O E (e O X f))",
    "expected behavior is {b} and {e} should be true simultaneously, and then {f} should always be true.": "(d O b) O E (e A G f))"
  },
  "( d ) O X b O G e U f": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O X (b O G (e U f))",
    "expected behavior is {b} should be true after {d}.": "(d U b) O G (e U f)",
    "expected behavior is {e} and {f} should be true simultanously.": "(d O X b O G (e A f))",
    "expected behavior is {e} and {f} should be true sequentially and don't need to be adjacent.": "(d O X b O G (e U F(f)))",
    "expected behavior is {e}, {f} and {b} should be true simultanously.": "(d O X (b A e A f))"
  },
  "( N X b O X e A G c )": {
    "expected behavior is {b} and {e} should be true simultanously.": "( N X (b A e) O X G c )",
    "expected behavior is {b} or {e} should be true, then {c} should be true.": "( N X (b O e) O X G c )",
    "expected behavior is {b} and {e} should be true sequentially and don't need to be adjacent.": "( N X b O X (e A G c) )",
    "expected behavior is after {b} and {e} be true, {c} should always be true.": "( N X (b A e) O X G(c))",
    "expected behavior is finally {b}, {e} and {c} should be true simultanously.": "F(N X (b A e) O X c)"
  },
  "( N N b A X e A G c )": {
    "expected behavior is {b} should be false first, then {e} and {c} should be true simultanously.": "F(b) A (X e A G c)",
    "expected behavior is {b} should be false first, then {e} should be true, and then {c} should always be true.": "F(b) A (X e A G c)",
    "expected behavior is {b} and {e} should be true simultanously, then {c} should always be true.": "F(b A e) A G c",
    "expected behavior is {b}, {e} and {c} should be true simultanously.": "F(b A e A c)",
    "expected behavior is more than one atomic proposition in {{b}, {e}, {c}} should be true.": "F(b O e O c)"
  },
  "( f U G N G e O N d )": {
    "expected behavior is {f}, {e}, {d} should be true sequentially and don't need to be adjacent.": "F((f U G(N(G(e)))) O N(d))",
    "expected behavior is {f}, {e}, {d} should be true simultanously.": "F(f A G(N(G(e))) A N(d))",
    "expected behavior is {f}, {e}, {d} should be true sequentially and need to be adjacent.": "F(f U G(N(e O N(d))))",
    "expected behavior is {f} should be true first, then {e} and {d} should be true.": "F(f U G(N(e A N(d))))",
    "expected behavior is {f}, {e} and {d} should finally be true simultanously.": "F(f A G(N(e)) A N(d))"
  },
  "( ( N b ) ) A E b U a": {
    "expected behavior is {a} and {b} should be true simultaneously.": "( ( N b ) ) A ( b A a )",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "( ( N b ) ) A F(b U a)",
    "expected behavior is {a} and {b} should be true sequentially and need to be adjacent.": "( ( N b ) ) A X(b U a)",
    "expected behavior is {a} and {b} should be true ultimately.": "F( ( N b ) A ( b U a) )",
    "expected behavior is {b} should always be true, no matter what the value of {a} is.": "G( ( N b ) A ( b U a) )"
  },
  "E N ( c ) U G E a U f": {
    "expected behavior is {c} should be true, or {a} and {f} should be true simultanously.": "E N (c) U (G E a A G E f)",
    "expected behavior is {a} and {f} should be true sequentially and don't need to be adjacent.": "E N (c) U (G E a A F(G E f))",
    "expected behavior is {a} and {f} should be true first, and then {c} should be true.": "E N (G E (a U f)) U G E c",
    "expected behavior is {a} and {f} should be true simultanously, or {c} should be true.": "E N (c O (G E a A G E f))",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {f}} should be true.": "E N (c O (G E a O G E f))"
  },
  "X N ( c ) U G E a U f": {
    "expected behavior is {c} should be true eventually, no matter what the values of {a} and {f} are.": "F(X N (c) U G E a U f)",
    "expected behavior is {c} should be true until {a} is true.": "F(X N (c) U (G E a) U f)",
    "expected behavior is {c} should be true until {a} and {f} are both true.": "F(X N (c) U (G E a O G E f) U f)",
    "expected behavior is {c} should be true until {a} or {f} is true.": "F(X N (c) U (G E a O G E f) U f)",
    "expected behavior is {c} should be true until {a} is false, and then {f} should be true.": "F(X N (c) U (G E (a A X f)) U f)"
  },
  "N b U ( c A N b U b )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U ( c A N b U b )",
    "expected behavior is {b} and {c} should be true simultanously.": "N b U ( c A b )",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "N b U ( c A F(N b U b) )",
    "expected behavior is to make {b}, {c} and {b} be true sequentially and don't need to be adjacent.": "N b U ( c A F(N b U F(b)) )",
    "expected behavior is {b}, {c} and {b} finally be true simultanously.": "N b U ( c A b A b )"
  },
  "G N ( f ) U ( ( e ) )": {
    "expected behavior is {f} and {e} should be true simultanously.": "G(f A e)",
    "expected behavior is {f} should always be true, and then {e} should be true.": "G(f U e)",
    "expected behavior is first {f} should be true, then {e} should be true, and finally both of them should be true.": "G(f A (e U f))",
    "expected behavior is first {f} should be true, and then {e} should always be true.": "G(f A G(e))",
    "expected behavior is one of {f} or {e} should be true.": "G(f O e)"
  },
  "X N ( f ) U ( ( e ) )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "X(f) U ((e))",
    "expected behavior is {e} should be true always.": "F(X(f) U (e))",
    "expected behavior is {f} and {e} should be true simultanously.": "F(X(f A e))",
    "expected behavior is {f} should be true, or {e} should not be true first, and then {f} or {e} should be true.": "F(X(f) U (e O X(f)))",
    "expected behavior is {f} and {e} should be true sequentially and don't need to be adjacent.": "F(X(f A F(e)))"
  },
  "X a U ( E G E d ) U b": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U ( E G E d ) U b",
    "expected behavior is to make {d} be true.": "X a U ( E G d ) U b",
    "expected behavior is to make {b} and {d} be true simultanously.": "X a U ( E G E b A d )",
    "expected behavior is to make {b} and {d} be true sequentially and don't need to be adjacent.": "X a U ( E G E b ) U F d",
    "expected behavior is to make {a}, {b}, and {d} be true sequentially and don't need to be adjacent.": "X a A F( E G E b ) U F d"
  },
  "X c U ( N G E d ) O b": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "X c U ( N G E d ) O b A d",
    "expected behavior is to make {b} and {d} be true simultanously.": "X c U ( N G (b A d))",
    "expected behavior is to make {b} and {d} be true sequentially and don't need to be adjacent.": "X c U ( N G E (b U d))",
    "expected behavior is to make {c}, {b} and {d} be true sequentially and don't need to be adjacent.": "X c A F(b A F(d))",
    "expected behavior is {c}, {b} and {d} finally be true simultanously.": "F(c A b A d)"
  },
  "X X c U ( X b ) O X e": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "X X (c U (X b)) O X e",
    "expected behavior is to make {b} and {e} be true simultanously.": "X X c U (X (b O e))",
    "expected behavior is to make {b} and {e} be true sequentially and don't need to be adjacent.": "X X c U (X b) O F(X e)",
    "expected behavior is to make {c}, {b} and {e} be true sequentially and don't need to be adjacent.": "X X c U (X b) O F(X F(e))",
    "expected behavior is {c}, {b} and {e} finally be true simultanously.": "X X c A (X b A e)"
  },
  "X N c O ( X b ) O N f": {
    "expected behavior is {c},{b},{f} should be true simultanously.": "X N c O (b O N f)",
    "expected behavior is {c} and {b} should be true simultanously.": "X N c A X b O N f",
    "expected behavior is {c},{b},{f} should be true sequentially and don't need to be adjacent.": "X N c O X (b O N f)",
    "expected behavior is {c} and {f} should be true sequentially and don't need to be adjacent.": "X N c O ( X b N f )",
    "expected behavior is {c},{b},{f} should be true simultanously, and then {f} should always be true.": "X N c O ( X b A G f )"
  },
  "N N ( N G d U ( f ) )": {
    "expected behavior is {d} and {f} should be true simultanously.": "N N ( N G (d A f) )",
    "expected behavior is {d} and {f} should be true sequentially and don't need to be adjacent.": "N N ( N G (d A F(f)) )",
    "expected behavior is {d} and {f} should be true sequentially but need to be adjacent.": "N N ( N G (d W f) )",
    "expected behavior is {d} and {f} finally be true simultanously.": "N N ( N G (d A f) ) U (f)",
    "expected behavior is more than one atomic proposition in {{d}, {f}} should be true.": "N N ( N G (d O f) )"
  },
  "N G c U G e U N ( c )": {
    "expected behavior is {c} should be true before {e} and {e} should be true until {c} is not true. Such specification omits {e}.": "N G c U (G e A N ( c ))",
    "expected behavior is {c} should be true until {e} is not true. Such specification omits {e}.": "N G c U (e A N ( c ))",
    "expected behavior is {c} and {e} should be true simultanously. Such specification omits {e}.": "N G (c A e) U N ( c )",
    "expected behavior is {c} should be true until {e} is true. Such specification omits {e}.": "N G c U (G e U N ( c ))",
    "expected behavior is {c} should be true until {e} is true and {e} should be true forever. Such specification omits {e}.": "N G c U (G e A G N ( c ))"
  },
  "N ( f ) A N b U ( a )": {
    "expected behavior is {f} should be false first. Such specification omits {f}.": "N (f) A N b U (f A a)",
    "expected behavior is to make {b} and {a} be true simultanously.": "N (f) A N (b A a)",
    "expected behavior is to make {b} and {a} be true sequentially and don't need to be adjacent.": "N (f) A N (b A F(a))",
    "expected behavior is {f}, {b} and {a} should finally be true simultanously.": "N (F(f A b)) A F(a)",
    "expected behavior is more than one atomic proposition in {{f}, {b}, {a}} should be true.": "N (f O b O a)"
  },
  "( N G a ) A N N ( b )": {
    "expected behavior is {a} should not always be true. Such specification omits {a}.": "(N G a) A N N (b A a)",
    "expected behavior is {b} should not always be true. Such specification omits {b}.": "(N G a) A N N (b V a)",
    "expected behavior is {a} and {b} should not be true simultanously. Such specification omits {a} and {b}.": "(N G a) A N N ((b A a) O (b V a))",
    "expected behavior is {a} should be true, and then {b} should be true. Such specification omits {a}.": "(G a) A N N (b)",
    "expected behavior is {a} should be true, and then {b} should not be true. Such specification omits {a}.": "(G a) A N N (N b)"
  },
  "( N G a ) A N ( a )": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "G(a) A N(a)",
    "expected behavior is to make {a} be true first, then never be false.": "N(G(a)) A N(a)",
    "expected behavior is to make {a} be true first, and then never be false until {a} is false.": "N(G(a)) A G(N(a))",
    "expected behavior is to make {a} be true first, and then {a} or {b} should be true.": "N(G(a)) A (N(a) U b)",
    "expected behavior is to make {a} be true first, and then {a} and {b} should be true simultanously.": "N(G(a)) A (N(a) A b)"
  },
  "N X ( d ) U X N ( d )": {
    "expected behavior is to make {d} be true. Such specification omits {d}.": "N X (d) U X N (d)",
    "expected behavior is to make {d} be true sequentially and don't need to be adjacent.": "N X (d) U X N F(d)",
    "expected behavior is to make {d} be true and then {d} should always be true.": "N X (d) U X G(d)",
    "expected behavior is {d} should always be true, or {d} should not be true first, and then {d} should be true.": "N X (d) U X N O (d)",
    "expected behavior is {d} should be true before {X N (d)}, no matter what the values of {N X (d)} are.": "F(N X (d)) U X N (d)"
  },
  "G X ( d ) U N ( e )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "G (d U N (e))",
    "expected behavior is to make {d} and {e} be true simultanously.": "G (d A N (e))",
    "expected behavior is to make {d} and {e} be true sequentially and don't need to be adjacent.": "G (d A F(N (e)))",
    "expected behavior is to make {d}, {e} finally be true simultanously.": "G (d A e)",
    "expected behavior is more than one atomic proposition in {{d}, {e}} should be true.": "G (d O N (e))",
    "expected behavior is {e} should be true, or {e} should not be true first, and then {e} should be true.": "G X (d U N (e) O e)",
    "expected behavior is {d} and {e} should be true simultanously, and then {e} should always be true.": "G X (d U G(N (e)))",
    "expected behavior is finally {e} should be true, no matter what the value of {d} is.": "G X (d U e)",
    "expected behavior is {e} should always be true, or {d} be true, but subsequently {e} should be true.": "G (X (d) U e)"
  },








  "E X ( ( a ) ) U N G a": {
    "expected behavior is {a} should be true and remains true. Such specification omits {a}.": "E X ( ( a ) ) U N G(a)",
    "expected behavior is {a} should be true first, and then {a} should remain true.": "E X ( ( a ) ) U N G F(a)",
    "expected behavior is {a} should be true and remains true, or {a} should not be true.": "E X ( ( a ) ) U (N G(a) O F(a))",
    "expected behavior is more than one atomic proposition in {{a}} should be true.": "E X ( ( a ) ) U N G(a O b)",
    "expected behavior is {a} should be true first and then {a} should remain true, but not necessarily forever.": "E X ( ( a ) ) U N G F(a) U a"
  },
  "E X ( ( a ) ) U N E a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (E X (N E a))",
    "expected behavior is to make {a} be true after one time delay and not necessary to repeat.": "E X (a) U N E a",
    "expected behavior is to make {a} be true infinitely many times.": "G(E X (a) U N E a)",
    "expected behavior is to make {a} be true at least once and then {a} should always be true.": "F(E X (a) U N E a)",
    "expected behavior is {a} should be true and then {a} should not be true.": "F(E X (a) U N (X (N E a)))"
  },
  "( N e U N E f A X c )": {
    "expected behavior is {e} and {f} should not be true at the same time. Such specification omits this.": "( N e U N E f A X (N e A N f) A c )",
    "expected behavior is {e} and {f} should not be true at the same time, and when {c} turns to be true, {e} or {f} should not be true.": "( N e U N E f A X (N e A N f) A (N e U N f A X c) )",
    "expected behavior is when {c} turns to be true, {e} and {f} should be true simultanously. Such specification omits this.": "( N e U N E f A X (e A f) A X c )",
    "expected behavior is when {c} turns to be true, {e} and {f} should be true sequentially. Such specification omits this.": "( N e U N E f A X F(e A f) A X c )",
    "expected behavior is when {c} turns to be true, {e} and {f} should finally be true. Such specification omits this.": "( N e U N E f A F(X c A (e A f)) )"
  },
  "E ( f ) U b U ( E f )": {
    "expected behavior is {f} should be true first and then {b}, {f} should be true again. Such specification omits {f}.": "E(f) U b U (E(f) U f)",
    "expected behavior is {f} and {b} should be true simultanously.": "E(f) U (b A f)",
    "expected behavior is {f} should be true first and then {b}, {f} should be true again, and {b} should be true again.": "E(f) U b U (E(f) U b U f)",
    "expected behavior is {f} and {b} should be true sequentially and don't need to be adjacent.": "E(f) U b U (E(f) A f)",
    "expected behavior is to make {f} and {b} be true more than once.": "E(f) U (b A E(f) A f)"
  },
  "E ( f ) U b U ( N f )": {
    "expected behavior is {b} should be true first and then {f} should be true. Such specification omits {b}.": "F ( E (f) U b U (N f))",
    "expected behavior is {f} should be true, or {f} should not be true first, and then {f} or {b} should be true.": "F ( E (f) U (b O X(f)))",
    "expected behavior is {f} and {b} should be true simultanously, and then {f} should always be true.": "F ( E (f) A G(b U (N f)))",
    "expected behavior is finally {f} should be true, no matter what the values of {b} are.": "F ( E (f) U b U G(N f))",
    "expected behavior is {f} should always be true, or {b} should be true, but subsequently {f} should be true.": "G(E(f) U b U (N f))"
  },
  "( b U N e O G G N f )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U (N e O G G N f)",
    "expected behavior is to make {e} and {f} be true sequentially but not necessarily adjacent.": "(b U (N e A F(G G N f)))",
    "expected behavior is to make {e} and {f} be true simultanously.": "(b U (N e A G G N f))",
    "expected behavior is to make {f} always be true, no matter what the value of {e} is.": "(b U (N e U G G N f))",
    "expected behavior is {e} should be true first, and then {f} should always be true.": "(b U (N e A G G N G f))"
  },
  "( N N X d A ( G b ) )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "( N N d A ( G b ) )",
    "expected behavior is {d} should always be true, or {b} should always be true.": "( N N ( d O G(b) ) )",
    "expected behavior is {d} should be true or {b} should be true first, and then {d} or {b} should be true.": "( N N ( d O X( G(b) ) ) )",
    "expected behavior is {d} should be true, and then {b} should always be true.": "( N N ( d A G(b) ) )",
    "expected behavior is {d} should be true first, and then {b} should be true.": "( N N d A X( G(b) ) )"
  },
  "N a U f O G b U ( c )": {
    "expected behavior is {a} should be false first. Such specification omits {a}.": "N(a U F(O G(b U (c))))",
    "expected behavior is to make {a} and {b} be false simultanously.": "N(a A F(O Gb U (c)))",
    "expected behavior is to make {a} and {b} be false sequentially and don't need to be adjacent.": "N(a A F(O G(b A F (c))))",
    "expected behavior is to make {a}, {b} and {c} be false sequentially and don't need to be adjacent.": "N(a A F(b A F(O G c)))",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be false.": "N(a O F(b O G(c)))",
    "expected behavior is {b} shoule be false, or {b} should not be false first, and then {b} or {c} should be false.": "N(a U F(O G (b O F (c))))",
    "expected behavior is {b} and {c} should be false simultanously, and then {c} should always be false.": "N(a U F(O G (b A F G (c))))",
    "expected behavior is finally {c} should be false, no matter what the values of {a} and {b} are.": "N(a U F (O G (b U F (c))))",
    "expected behavior is {c} should always be false, or {a} and {b} be false, but subsequently {c} should be false.": "N(a U F(O G (b U FG (c))))"
  },
  "N N G ( ( b ) ) A E c": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A E c",
    "expected behavior is to make {b} and {c} be true simultanously.": "G(b A c)",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "N N G(b A F(c))",
    "expected behavior is to make {b} and {c} finally be true simultanously.": "G(b A c)",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "G(b O c)",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {c} should be true.": "N N G(b O X(c))",
    "expected behavior is {b} and {c} should be true simultanously, and then {c} should always be true.": "G(b A G(c))",
    "expected behavior is finally {c} should be true, no matter what the values of {b} are.": "E c",
    "expected behavior is {c} should always be true, or {b} should be true, but subsequently {c} should be true.": "G(b U c)"
  },
  "N N G ( ( b ) ) U E e": {
    "expected behavior is {e} should be true first and then make other atomic propositions true. Such specification omits {e}.": "E e U N N G( (b) )",
    "expected behavior is {b} should be true first and then make other atomic propositions true. Such specification omits {b}.": "E e U N G(b) N G( (b) )",
    "expected behavior is both {e} and {b} should be true first and then make other atomic propositions true. Such specification omits both {e} and {b}.": "E e U b U N N G( (b) )",
    "expected behavior is {e} should be always true, or {e} should be true first and then make other atomic propositions true. Such specification omits the always-true condition of {e}.": "G(E e) U N N G( (b) )",
    "expected behavior is both {e} and {b} should be always true, or {e} and {b} should be true first and then make other atomic propositions true. Such specification omits the always-true condition of both {e} and {b}.": "G(E e U b) U N N G( (b) )"
  },
  "f U G X ( d U E d ) U e": {
    "expected behavior is {d} should be true and then {d} should always be true.": "F U G X (d A Gd) U e",
    "expected behavior is {d} should not be true first, and then {d} or {e} should be true.": "F U G X (d O Xe) U e",
    "expected behavior is {d} and {e} should be true simultanously.": "F U G X (d A e) U e",
    "expected behavior is to make {d}, {e} and eventually {f} be true sequentially and don't need to be adjacent.": "F U G X (d A F(e A Ff)) U e",
    "expected behavior is to make {d}, {e}, {f} and eventually {f} be true simultanously.": "F U G X (d A e A f) U e"
  },
  "f U N X ( c U E b ) U b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U (f U N X ( c U E b ))",
    "expected behavior is to make {c} and {b} be true simultanously.": "f U N X ( c A E b ) U b",
    "expected behavior is to make {c} and {b} be true sequentially and don't need to be adjacent.": "f U N X ( c U F(E b)) U b",
    "expected behavior is to make {f}, {c} and {b} be true sequentially and don't need to be adjacent.": "F(f U N X ( c U (E b) )) U b",
    "expected behavior is {f}, {c} and {b} finally be true simultanously.": "F(f A N X ( c A E b )) U b"
  },
  "X b A ( N N E a O E e )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A ( N N E a O E e )",
    "expected behavior is to make {a}, {e} be true simultanously.": "X b A ( N N E (a O E e ) )",
    "expected behavior is to make {a}, {e} be true sequentially and don't need to be adjacent.": "X b A ( N N (E a A E e ) )",
    "expected behavior is to make {b}, {a}, {e} be true sequentially and don't need to be adjacent.": "X (b A F(a A F(e)))",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {e}} should be true.": "X b A ( N N (E (a V E e ) ))"
  },
  "X a A ( N N E c O G e )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A ( N N E c O G a )",
    "expected behavior is {c} and {e} should be true simultanously.": "X a A ( N N E (c A e) )",
    "expected behavior is to make {c} and {e} be true sequentially and don't need to be adjacent.": "X a A ( N N E c O G F(e) )",
    "expected behavior is to make {a}, {c} and {e} be true sequentially and don't need to be adjacent.": "X a A ( N N E c O G F(F(e)) )",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {e}} should be true.": "X a A ( N N E (c O G e) )"
  },
  "N ( ( c ) O X N e U a )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "N ( ( c ) O X e U a )",
    "expected behavior is to make {a} and {e} be true simultanously.": "N ( ( c ) O X (e A a))",
    "expected behavior is to make {a} and {e} be true sequentially and don't need to be adjacent.": "N ( ( c ) O X (e U a))",
    "expected behavior is to make {a}, {e} and {c} be true sequentially and don't need to be adjacent.": "N ( ( c ) O X (e U N a))",
    "expected behavior is more than one atomic proposition in {{a}, {e}, {c}} should be true.": "N ( ( c ) O X (e O a))"
  },
  "( G ( E a ) O f U N e )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O (f U N(e))",
    "expected behavior is {f} should not be true.": "(G(E(a)) O f U N(e))",
    "expected behavior is {e} should be true before {f}.": "(G(E(a)) O N(e) U f)",
    "expected behavior is {f} shoule be true, or {e} should not be true first, and then {f} or {e} should be true.": "(G(E(a)) O (f O X(e)))",
    "expected behavior is more than one atomic proposition in {{a}, {f}, {e}} should be true.": "(G(E(a)) O (f O e))"
  },
  "( G ( N a ) O c A N e )": {
    "expected behavior is {a} should be false all the time. Such specification omits {a}.": "F(G ( N a ) O c A N e )",
    "expected behavior is {c} should be true first. Such specification omits {c}.": "G(G ( N a ) O c A N e )",
    "expected behavior is {a}, {c}, {e} should all be true simultaneously. Such specification omits {e}.": "G(G ( N a ) O c A e )",
    "expected behavior is {a} and {c} should be true, but subsequently {e} should be true. Such specification omits {a}.": "G(G ( a ) O c A N e )",
    "expected behavior is {a} should not be true, and then {c} and {e} should be true simultaneously. Such specification omits {e}.": "G(G ( N a ) O c A e )"
  },
  "N X X b A ( d ) U f A d": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A (X X d) U f A d",
    "expected behavior is to make {d} and {f} be true simultanously.": "N X X b A d U (f A d)",
    "expected behavior is to make {d} and {f} be true sequentially and don't need to be adjacent.": "N X X b A (d U F(f)) A d",
    "expected behavior is to make {b}, {d} and {f} be true sequentially and don't need to be adjacent.": "N X X b A F(d A F(f)) A d",
    "expected behavior is {b}, {d} and {f} finally be true simultanously.": "N X X (b A d A f) U d U f",
    "expected behavior is more than one atomic proposition in {{b}, {d}, {f}} should be true.": "N X X (b O d O f) A d U f",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} or {f} should be true.": "N X X b A (d O X(f)) U f A d",
    "expected behavior is {d} and {f} should be true simultanously, and then {f} should always be true.": "N X X b A (d U G(f)) U f A d",
    "expected behavior is finally {f} should be true, no matter what the values of {b} and {d} are.": "N X X b A (d U f) U f A d",
    "expected behavior is {f} should always be true, or {b} and {d} be true, but subsequently {f} should be true.": "G(N X X b A (d U f)) U f A d"
  },
  "E N E b A ( b ) U f A d": {
    "expected behavior is {b} should be true first and then {f} and {d} should be true. Such specification omits {f}.": "E N E b A ( b ) U f A F(d)",
    "expected behavior is {b} should be true first and then {f} and {d} should be true sequentially and don't need to be adjacent.": "E N E b A ( b ) U f A F(F(d))",
    "expected behavior is {f} and {d} should be true simultanously.": "E N E b A ( b ) U (f A d)",
    "expected behavior is finally {d} should be true, no matter what the values of {b} and {f} are.": "E N E b A ( b ) U f A G(d)",
    "expected behavior is only one atomic proposition in {{b}, {f}, {d}} should be true.": "E N E b A ( b ) U f O d"
  },
  "d U E ( f ) A N ( N b )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U (E (f) A N (N b))",
    "expected behavior is {f} and {b} should be true simultanously.": "d U (E(f) A N (b))",
    "expected behavior is to make {f} and {b} be true sequentially and don't need to be adjacent.": "d U (E(f) A N (F (b)))",
    "expected behavior is to make {d}, {f} and {b} be true sequentially and don't need to be adjacent.": "F(d A F (E(f) A F (N b)))",
    "expected behavior is {d}, {f} and {b} finally be true simultanously.": "F(d A E(f) A N b)"
  },
  "N e A b A E ( G a O a )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "e A b A E ( G a O a )",
    "expected behavior is to make {a}, {b} and {e} be true sequentially and don't need to be adjacent.": "N e A b A E ( G F(a) O F(a) )",
    "expected behavior is {b} and {e} should be true simultanously.": "N e A b A G(e) O G(a)",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {e}} should be true.": "N e A b A F(G(a) O G(a))",
    "expected behavior is finally {a} should be true, no matter what the values of {b} and {e} are.": "N e A b A F(e U a)"
  },
  "N e A a U E ( N a U e )": {
    "expected behavior is {e} should always be true. Such specification omits {e}.": "e A a U E ( N a U e )",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "N e A a U E ( N a U e )",
    "expected behavior is both {a} and {e} should be true. Such specification omits the requirement of {a} and {e}.": "N e A a A E ( N a U e )",
    "expected behavior is {a} and {e} should be true sequentially and don't need to be adjacent.": "N e A a U E ( N a A e )",
    "expected behavior is finally {a} and {e} should be true simultanously.": "N e A a A E ( N a A e )"
  },
  "e O N ( X ( a O N b ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e O N ( X ( a O N b ) )",
    "expected behavior is {a} and {b} should be true simultanously.": "e O N ( a O N b )",
    "expected behavior is {a} and {b} should be true sequentially but don't need to be adjacent.": "e O N ( X ( a A X b ) )",
    "expected behavior is {e} and {a}, {b} should be true sequentially and don't need to be adjacent.": "F(e A X ( a A X b ))",
    "expected behavior is more than one atomic proposition in {{e}, {a}, {b}} should be true.": "e O N ( a O N b ) O N e"
  },
  "e U ( X ( a O N b ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U ( X ( a O N b ) )",
    "expected behavior is to make {a} and {b} be true simultanously.": "e U ( X ( a A N b ) )",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent.": "e U ( X ( a A F(N b) ) )",
    "expected behavior is to make {a}, {b} and {e} be true sequentially and don't need to be adjacent.": "F(e A F(a A F(N b)))",
    "expected behavior is {a}, {b} and {e} finally be true simultanously.": "F(e A a A N b)",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {e}} should be true.": "F(e O a O N b)",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {e} should be true.": "e U ( X ( a O N(b O e) ) )",
    "expected behavior is {b} and {e} should be true simultanously, and then {e} should always be true.": "e U ( X ( a A G(N b) ) )",
    "expected behavior is finally {e} should be true, no matter what the values of {a} and {b} are.": "F(e U ( a U N b ))",
    "expected behavior is {e} should always be true, or {a} and {b} be true, but subsequently {e} should be true.": "G(e U ( a U N b ))"
  },
  "a A ( N ( c U E G f ) )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a A ( N ( c U (E G f) ) )",
    "expected behavior is {f} should be true eventually. Such specification omits {f}.": "a A ( N ( c U (E G f) ) ) F(f)",
    "expected behavior is to make {c} and {f} be true simultanously.": "a A ( N ( c A (E G f) ) )",
    "expected behavior is to make {c} and {f} be true sequentially and don't need to be adjacent.": "a A ( N ( c U (E F(f)) ) )",
    "expected behavior is finally {c} and {f} should be true, no matter what the values of {a} and {b} are.": "G(a A ( N ( c U (E G f) ) ) )"
  },
  "e A ( G d A G N a U b )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A ( G d A G N (a U b) )",
    "expected behavior is {d} should be true first and not be negated.": "e A (d A G N (a U b))",
    "expected behavior is to make {a} and {b} be true simultanously.": "e A ( G d A G N (a A b))",
    "expected behavior is to make {a}, {d} and {b} be true sequentially and don't need to be adjacent.": "F(e A F( G d A F( G N (a U b))))",
    "expected behavior is {a}, {d} and {b} finally be true simultanously.": "F(e A (d A (G N (a A b))))"
  },
  "e A ( G b A G a U b )": {
    "expected behavior is {e}, {a} and {b} should finally be true simultanously.": "F(e A (G b A G a U b))",
    "expected behavior is {e}, {a} and {b} should be true sequentially and don't need to be adjacent.": "F(e A F(G b A F(G a U b)))",
    "expected behavior is {e} should be true first, and then {a} and {b} should be true simultanously.": "F(e A (a A b))",
    "expected behavior is more than one atomic proposition in {{e}, {a}, {b}} should be true.": "F(e O a O b)",
    "expected behavior is {e}, {a} and {b} should be true sequentially, and {a} and {b} should not be adjacent.": "F(e A (G b A (F a U b)))"
  },
  "c O E f U c O b A ( c )": {
    "expected behavior is to make {b} and {c} be true simultanously.": "c O E f U (c O b A c)",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "c O E f U (c O (b A F(c)))",
    "expected behavior is {b} and {c} should be true simultanously, and then {c} should always be true.": "c O E f U (c O (b A G(c)))",
    "expected behavior is {b} should not be true first, and then {b} or {c} should be true.": "c O E f U (c O (b O X(c)))",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "c O E f U (c O (b O c))"
  },
  "c O E f U c U b A ( c )": {
    "expected behavior is {c} should always be true. Such specification omits {c}.": "G(c) O E f U c U b A ( c )",
    "expected behavior is {f} should be true first. Such specification omits {f}.": "c O E f U (f U c U b A ( c ))",
    "expected behavior is to make {c}, {b} and {f} be true sequentially and don't need to be adjacent.": "c O E f U (c U F(b A F( c )))",
    "expected behavior is to make {b}, {c} and {f} be true simultanously.": "c O E (f A b A c) U (c U b A ( c ))",
    "expected behavior is more than one atomic proposition in {{c}, {b}, {f}} should be true.": "c O E (f V b V c) U (c U b A ( c ))"
  },
  "e U X ( e U ( e ) U f )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U X (e U (e) U f)",
    "expected behavior is to make {e} and {f} be true sequentially and don't need to be adjacent.": "F(e U (e U f))",
    "expected behavior is to make {e} and {f} be true simultanously.": "F(e A (e U f))",
    "expected behavior is more than one atomic proposition in {{e}, {f}} should be true.": "F(e O f)",
    "expected behavior is {e} shoule be true, or {e} should not be true first, and then {e} or {f} should be true.": "F(e U (e O X(f)))"
  },
  "e A X ( d O ( e ) U f )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O (e A X (e U f))",
    "expected behavior is to make {e} and {f} be true simultanously.": "e A (d O (e U f))",
    "expected behavior is to make {e} and {f} be true sequentially and don't need to be adjacent.": "e A X (d O (e U F(f)))",
    "expected behavior is to make {d}, {e} and {f} be true sequentially and don't need to be adjacent.": "e A X (d A X (e A X (f)))",
    "expected behavior is {d}, {e} and {f} finally be true simultanously.": "e A (d A (e A f))",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {f}} should be true.": "e A X (d O (e O f))",
    "expected behavior is {e} shoule be true, or {e} should not be true first, and then {e} or {f} should be true.": "e A X (d O (e O X(f)))",
    "expected behavior is {e} and {f} should be true simultanously, and then {f} should always be true.": "e A X (d O (e A G(f)))",
    "expected behavior is finally {f} should be true, no matter what the values of {d} and {e} are.": "e A X (d U (e U f))",
    "expected behavior is {f} should always be true, or {d} and {e} be true, but subsequently {f} should be true.": "G(e A X (d U (e U f)))"
  },
  "N e U ( G G b ) O c A c": {
    "expected behavior is to make {b} and {c} be true simultanously.": "N e U ( G G b ) A c",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "N e U ( G G b ) O F(c)",
    "expected behavior is to make {e}, {b} and {c} be true sequentially and don't need to be adjacent.": "N F(e A G G b) O c",
    "expected behavior is {b} and {c} should be true simultanously, and then {c} should always be true.": "N e U (G G b) A G(c)",
    "expected behavior is finally {c} should be true, no matter what the values of {e} and {b} are.": "N e U (G G b) U c"
  },
  "N e U ( G X e ) O c A c": {
    "expected behavior is {e} and {c} should be true simultanously.": "F(e U (G X e) A c)",
    "expected behavior is {e} and {c} should be true sequentially and don't need to be adjacent.": "F(e U G(X(e) U c))",
    "expected behavior is {e} and {c} should be true sequentially and don't need to be adjacent, and {c} should always be true.": "F(e U G(X(e) A c))",
    "expected behavior is {c} should always be true, or {e} first then {c}.": "G(e U (X(e) U c))",
    "expected behavior is finally {c} should be true, no matter what the values of {e} are.": "F(e U c)"
  },
  "N f O G G d U ( N X a )": {
    "expected behavior is {f} should be false first. Such specification omits {f}.": "N f O G G d U ( N X a )",
    "expected behavior is to make {d} and {a} be true simultanously.": "N f O G (d A a)",
    "expected behavior is to make {d} and {a} be true sequentially and don't need to be adjacent.": "N f O G (d A F(a))",
    "expected behavior is to make {f}, {d} and {a} be true sequentially and don't need to be adjacent.": "N f A G(d A F(a))",
    "expected behavior is {f}, {d} and {a} finally be true simultanously.": "N f A G(d A a)",
    "expected behavior is more than one atomic proposition in {{f}, {d}, {a}} should be true.": "N f O G (d O a)",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} or {a} should be true.": "N f O G (d O X(a))",
    "expected behavior is {d} and {a} should be true simultanously, and then {a} should always be true.": "N f O G (d A G(a))",
    "expected behavior is finally {a} should be true, no matter what the values of {f} and {d} are.": "N f O (G d U a)",
    "expected behavior is {a} should always be true, or {f} and {d} be true, but subsequently {a} should be true.": "G(N f O (G d U a))"
  },
  "N f O G G d U ( X N a )": {
    "expected behavior is {f} should not be true first, and then {d} should be true, or {d} always be true.": "N f O G G d U ( X (N f O a))",
    "expected behavior is {a} should not be true first, and then {d} should be true, or {d} always be true.": "N f O G G d U ( X (N a O f))",
    "expected behavior is {f} and {d} always be true, or {a} should not be true first, and then {d} should be true.": "N f O G G d U ( X (N f O a) A X (N a O f))",
    "expected behavior is {f} and {a} should not be true first, and then {d} should be true.": "N f O G G d U ( X (N f O a) O X (N a O f))",
    "expected behavior is {f}, {a} and {d} should be true simultanously.": "N f O G G d A X (N f A a)"
  },
  "d U f U ( N f ) U f O c": {
    "expected behavior is {f} should be true first and then {c} should be true. Such specification omits {c}.": "d U f U ( N f ) U (f O c)",
    "expected behavior is {d}, {f} and {c} should be true sequentially and don't need to be adjacent.": "F(d A F(f A F(c)))",
    "expected behavior is {d}, {f} and {c} should finally be true simultanously.": "F(d A f A c)",
    "expected behavior is more than one atomic proposition in {{d}, {f}, {c}} should be true.": "F(d O f O c)",
    "expected behavior is {f} or {c} should be true first, and then {f} or {c} should be true.": "F(d U (f O X(c)))",
    "expected behavior is {f} and {c} should be true simultanously, and then {f} should always be true.": "F(d U (f A G(c)))",
    "expected behavior is finally {c} should be true, no matter what the values of {d} and {f} are.": "F(d U (f U c))",
    "expected behavior is {c} should always be true, or {d} and {f} be true, but subsequently {c} should be true.": "G(d U (f U c))"
  },
  "d O d U ( N f ) U f O c": {
    "expected behavior is {d} should be always true. Such specification omits {d}.": "G(d) O (N(f) U f) O c",
    "expected behavior is {f} should be always true. Such specification omits {f}.": "d O d U G(f) U f O c",
    "expected behavior is {d} and {f} should be true simultanously. Such specification omits the simultanousness.": "d O (d O f) U f O c",
    "expected behavior is {f} should be true first, and then {d} or {c} should be true. Such specification omits {f}.": "F(f) O d U (N(f) U f) O c",
    "expected behavior is no matter what the values of {d}, {f}, and {c} are, finally {f} should be true. Such specification omits {f}.": "d O d U (N(f) U f) U F(f) O c"
  },
  "( a U c A d U N E E c )": {
    "expected behavior is {a} and {c} should be true simultanously.": "(a A c U d U N E E c)",
    "expected behavior is {a}, {c} and {d} should be true sequentially and don't need to be adjacent.": "(a U F(c U d U N E E c))",
    "expected behavior is finally {c} should be true, no matter what the values of {a} and {d} are.": "(a U c U d U N E G(c))",
    "expected behavior is {a}, {c} and {d} should be true simultanously.": "(a A c A d U N E E c)",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {d}} should be true.": "(a O c O d U N E E c)"
  },
  "( a U c O d U N E E c )": {
    "expected behavior is {a} should be true first, and then {d} should be true, and then {c} should be true again. Such specification omits {a}.": "a U (c O (d U N E E c))",
    "expected behavior is to make {c} and {d} be true simultanously.": "(a U c) O (d U N E E c)",
    "expected behavior is to make {c} and {d} be true sequentially.": "(a U c) O (d U N E F c)",
    "expected behavior is to make {c} and {d} be true sequentially and don't need to be adjacent.": "(a U c) O (d U N E F(N c))",
    "expected behavior is to make {a}, {c} and {d} be true sequentially and don't need to be adjacent.": "a U (c O (d U N E F(N E c)))"
  },
  "( e ) A N N N b A ( d )": {
    "expected behavior is {e} and {d} should be true simultanously.": "(e A d) A N N N b",
    "expected behavior is {b} should be true, or {e} and {d} should be true.": "(e O d) A N N N b",
    "expected behavior is {b} should be true first, and then {e} and {d} should be true simultanously.": "(e A d) A X N b",
    "expected behavior is {e} and {d} should be true sequentially, but not necessarily adjacent.": "(e A F(d)) A N N N b",
    "expected behavior is {b} should be true, or {e} should be true first, and then {d} should be true.": "(e U d) A N N N b"
  },
  "( d ) A N N X b A ( f )": {
    "expected behavior is {b} should be true, no matter what the values of {d} and {f} are.": "G(d A N N X b A f)",
    "expected behavior is {b} should be true after {d} and {f} be true simultanously.": "F(d A N N X b A f)",
    "expected behavior is {b} should be true after {d} and {f} be true sequentially.": "F(d A N N X b A F(f))",
    "expected behavior is {b} should be true after {d} be true, and then either {f} or {b} should be true.": "F(d A N N X b A (f O X b))",
    "expected behavior is {f} should be true, no matter what the values of {d} and {b} are.": "G(d A N N X b A f)"
  },
  "X E X ( a U ( b O a ) )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U ( a O X ( a ) )",
    "expected behavior is {a} and {b} should be true simultanously.": "X E X ( a A b )",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "X E X ( a A F ( b ) )",
    "expected behavior is {a}, {b} and {a} finally be true simultanously.": "X E X ( a A b A a )",
    "expected behavior is more than one atomic proposition in {{a}, {b}} should be true.": "X E X ( a O b )",
    "expected behavior is {a} shoule be true, or {b} should not be true first, and then {a} or {b} should be true.": "X E X ( a U ( b O a) )"
  },
  "G E X ( a O ( b O a ) )": {
    "expected behavior is {b} should be true first and then {a} should be true. Such specification omits {b}.": "G E X ( b O ( a O b ) )",
    "expected behavior is to make {a} and {b} be true simultanously.": "G E X ( a A ( b A a ) )",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent.": "G E X ( a A X ( b A a ) )",
    "expected behavior is more than one atomic proposition in {{a}, {b}} should be true.": "G E X ( a O b O a )",
    "expected behavior is {a} should always be true, or {a} and {b} be true, but subsequently {a} should be true.": "G E X ( a U ( b U a ) )"
  },
  "E ( G c U N e O f A d )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U (G c U N e O f A d)",
    "expected behavior is to make {e}, {f} and {d} be true simultanously.": "E ( G c U (N e A f A d))",
    "expected behavior is to make {e}, {f} and {d} be true sequentially and don't need to be adjacent.": "E ( G c U N e O f A F(d))",
    "expected behavior is to make {c}, {e}, {f} and {d} be true sequentially and don't need to be adjacent.": "E ( G c U N e O f A F(F(d)))",
    "expected behavior is {e}, {f} and {d} finally be true simultanously.": "E ( G c U (N e A f A d))"
  },
  "( X E b U ( N c ) U b )": {
    "expected behavior is after {b} becomes true, {c} should be true then. Such specification omits {c}.": "(XE b U (N c) U b U c)",
    "expected behavior is after {c} becomes false, {b} should be true then. Such specification omits {c}.": "(XE b U (N c) U (N b))",
    "expected behavior is after {b} becomes true, {c} should be true then, and then {b} should always be true. Such specification omits {b}.": "(XE b U (N c) U b U G(b))",
    "expected behavior is after {b} becomes true, {c} should be true then, and then {c} should always be true. Such specification omits {c}.": "(XE b U (N c) U b U G(c))",
    "expected behavior is after {b} becomes true, {c} should be true then, and then both {b} and {c} should always be true. Such specification omits {b} and {c}.": "(XE b U (N c) U b U c U G(b) U G(c))"
  },
  "N N ( G c O f U b U b )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "G(c) O (f U (b U b))",
    "expected behavior is {b} and {f} should be true simultanously.": "N N ( G c U (b A f))",
    "expected behavior is {b} and {f} should be true sequentially and don't need to be adjacent.": "N N ( G c U (b A F(f)))",
    "expected behavior is to make {c}, {b} and {f} be true sequentially and don't need to be adjacent.": "N N ( G c A F(b A F(f)))",
    "expected behavior is {c}, {b} and {f} finally be true simultanously.": "N N ( G c A b A f)"
  },
  "N ( G f O e U b U d )": {
    "expected behavior is {f}, {e}, {b}, {d} should be true sequentially and don't need to be adjacent.": "N (f A G(e A G(b A G(d))))",
    "expected behavior is {e}, {b}, {d} should be true simultanously.": "N (G f O (e A b A d))",
    "expected behavior is more than one atomic proposition in {{f}, {e}, {b}, {d}} should be true.": "N (G f O (e O b O d))",
    "expected behavior is {b} shoule be true, or {e} and {d} should be true simultanously, and then {b} should be true.": "N (G f O (e A b) U (d A b))",
    "expected behavior is finally {d} should be true, no matter what the values of {f}, {e}, {b} are.": "N (f U e U b U d)"
  },
  "( G N a U ( N E E c ) )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (N E E c)",
    "expected behavior is to make {c} be true simultanously.": "G N a U (N E c)",
    "expected behavior is to make {c} be true sequentially and don't need to be adjacent.": "G N a U (N E F(c))",
    "expected behavior is to make {a}, {N}, {E} and {c} be true sequentially and don't need to be adjacent.": "G N a A F(N E F(c))",
    "expected behavior is {a}, {N}, {E} and {c} finally be true simultanously.": "G N a A N E c",
    "expected behavior is more than one atomic proposition in {{a}, {N}, {E}, {c}} should be true.": "G N a O N E c",
    "expected behavior is {N} shoule be true, or {N} should not be true first, and then {N} or {c} should be true.": "G N a U ( N O X(c))",
    "expected behavior is {N} and {c} should be true simultanously, and then {c} should always be true.": "G N a U ( N E G(c))",
    "expected behavior is finally {c} should be true, no matter what the values of {a},{N} and {E} are.": "G N a U ( N E c )",
    "expected behavior is {c} should always be true, or {a},{N} and {E} be true, but subsequently {c} should be true.": "G( N a U ( N E c))"
  },
  "X ( N N a ) O E N f U e": {
    "expected behavior is {a} should be true first, and then {f} and {e} should be true simultanously. Such specification omits this expected behavior.": "X ( N N a ) O E N f A e",
    "expected behavior is {f} should be true, or {f} should not be true first, and then {f} or {e} should be true. Such specification omits this expected behavior.": "X ( N N a ) O E (N f U e)",
    "expected behavior is {a}, {f} and {e} should be true sequentially and don't need to be adjacent. Such specification omits this expected behavior.": "F(X ( N N a ) A F(E N f A e))",
    "expected behavior is {a}, {f} and {e} finally be true simultanously. Such specification omits this expected behavior.": "F(X ( N N a ) A E N f A e)",
    "expected behavior is more than one atomic proposition in {{a}, {f}, {e}} should be true. Such specification omits this expected behavior.": "F(X ( N N a ) O E (N f O e))"
  },
  "X ( N a ) O E N f U e": {
    "expected behavior is {e} should be true before {f}. Such specification omits {e}.": "X ( N a ) O E (N f U e)",
    "expected behavior is {f} should be true before {e}.": "X ( N a ) O (E N f A e)",
    "expected behavior is to make {a}, {f} and {e} be true sequentially and don't need to be adjacent.": "X ( N a ) O E (N f A F(e))",
    "expected behavior is finally {e} should be true, no matter what the values of {a} and {f} are.": "X ( N a ) O (E N f U G(e))",
    "expected behavior is more than one atomic proposition in {{a}, {f}, {e}} should be true.": "X ( N a ) O (E N f O e)"
  },
  "N ( b ) A N a O G c U d": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O (N (b) A N (G (c U d)))",
    "expected behavior is to make {b}, {c} and {d} be true sequentially and don't need to be adjacent.": "N (b) A N a O F(G c U F(d))",
    "expected behavior is to make {b}, {c} and {d} be true simultanously.": "N (b A c A d) A N a O G c U d",
    "expected behavior is more than one atomic proposition in {{b}, {c}, {d}} should be true.": "N (b O c O d) A N a O G c U d",
    "expected behavior is {b} should not be true first, and then {c} or {d} should be true.": "N (b) A N a O G(c O X(d))",
    "expected behavior is finally {d} should be true, no matter what the values of {a}, {b} and {c} are.": "N (b) A N a O G(c U d)"
  },
  "X ( b ) U N a O G c U d": {
    "expected behavior is {b}, {a}, {c} and {d} should be true sequentially and don't need to be adjacent.": "F(X(b) A F(N(a) A F(G(c) U d)))",
    "expected behavior is {b}, {a}, {c} and {d} should be true simultanously.": "F(X(b) A N(a) A G(c) A d)",
    "expected behavior is {d} should always be true, or {b}, {a} and {c} be true, but subsequently {d} should be true.": "G(X(b) U N(a) O G(c) U d)",
    "expected behavior is more than one atomic proposition in {{b}, {a}, {c}, {d}} should be true.": "F(X(b) O N(a) O G(c) O d)",
    "expected behavior is finally {d} should be true, no matter what the values of {b}, {a} and {c} are.": "F(X(b) U N(a) U G(c) U d)",
    "expected behavior is {b}, {a} and {c} should be true sequentially and don't need to be adjacent, and then {d} should always be true.": "F(X(b) A F(N(a) A F(G(c) U G(d))))",
    "expected behavior is {b}, {a} and {c} should be true simultanously, and then {d} should always be true.": "F(X(b) A N(a) A G(c) A G(d))"
  },
  "E ( d ) U ( ( E N c ) )": {
    "expected behavior is {d} should be true first and then {c} should be true. Such specification omits {d}.": "d U (E(N(c)))",
    "expected behavior is {c} should be true first and then {d} should be true.": "E(N(c)) U d",
    "expected behavior is {d} and {c} should be true simultanously.": "E ( d A N c )",
    "expected behavior is {d} and {c} should be true sequentially and don't need to be adjacent.": "E( d A F(N(c)))",
    "expected behavior is more than one atomic proposition in {{d}, {c}} should be true.": "E ( d O N c )"
  },
  "E ( e ) A ( ( E N c ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A ( ( E N c ) )",
    "expected behavior is to make {e} and {c} be true simultanously.": "E ( e A c )",
    "expected behavior is to make {e} and {c} be true sequentially and don't need to be adjacent.": "E ( e A F(c))",
    "expected behavior is to make {e}, {N} and {c} be true sequentially and don't need to be adjacent.": "E ( e A F(N A F(c)))",
    "expected behavior is {e}, {N} and {c} finally be true simultanously.": "E ( e A N A c )",
    "expected behavior is more than one atomic proposition in {{e}, {N}, {c}} should be true.": "E ( e O N O c )",
    "expected behavior is {N} should be true, or {N} should not be true first, and then {N} or {c} should be true.": "E ( e A ( N O X(c)))",
    "expected behavior is {N} and {c} should be true simultanously, and then {c} should always be true.": "E ( e A ( N A G(c)))",
    "expected behavior is finally {c} should be true, no matter what the values of {e} and {N} are.": "E ( e A ( N U c))",
    "expected behavior is {c} should always be true, or {e} and {N} be true, but subsequently {c} should be true.": "G(e A (N U c))"
  },
  "X ( X N N b U e ) U X d": {
    "expected behavior is {b} and {e} should be true sequentially and don't need to be adjacent.": "X ( X N N b A F(e)) U X d",
    "expected behavior is {b} and {e} should be true simultanously.": "X ( X N N b A e) U X d",
    "expected behavior is {d} should always be true, or {b} and {e} be true, but subsequently {d} should be true.": "G(X ( X N N b U e) U X d)",
    "expected behavior is {b} and {e} should be true sequentially and need to be adjacent.": "X ( X N (N b A e)) U X d",
    "expected behavior is finally {d} should be true, no matter what the values of {b} and {e} are.": "F(X ( X N N b U e) U X d)"
  },
  "N ( N E d U e ) U X a": {
    "expected behavior is {e} and {d} should be true simultanously.": "N ( F(d A e)) U X a",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "N ( N E d U e ) U (a U X a)",
    "expected behavior is {d} should be true first, and then {e} should be true.": "N ( F(d U e)) U X a",
    "expected behavior is {e} should be true first, and then {d} should be true.": "N ( F(e U d)) U X a",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {a}} should be true.": "N ( N E d O e ) U X a"
  },
  "( N N b O b O X N E c )": {
    "expected behavior is {b} at least appear once. Such specification omits {b}.": "( N N b O b O X N E (b O c))",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "( N N b O b O X N E F(b A c))",
    "expected behavior is {c} should always be true, or {a} and {b} be true, but subsequently {c} should be true.": "G(N N b O b O X N E (b U c))",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be true.": "( N N b O b O X N E (b O c O d))",
    "expected behavior is finally {c} should be true, no matter what the values of {a} and {b} are.": "( N N b O b O X N E G(c))"
  },
  "( G N b O b U N G N c )": {
    "expected behavior is {b} and {c} should be true simultanously.": "G(b A c)",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "G(b A F(c))",
    "expected behavior is {b} or {c} should be true, and then {b} or {c} should be true.": "G(b O X(c))",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "G(b O c)",
    "expected behavior is {c} should always be true, or {b} should not be true first, and then {b} or {c} should be true.": "G(N b O X(c))"
  },
  "X N ( ( G a ) A ( c ) )": {
    "expected behavior is {a} and {c} should be true simultaneously. Such specification omits {a}.": "X N ( ( G a ) A F ( c ) )",
    "expected behavior is {c} should be true, or {a} should be true first, and then {c} should be true.": "X N ( ( G a ) O F ( c ) )",
    "expected behavior is {a} should be true first.": "X N ( F (a) A F ( c ) )",
    "expected behavior is {a} and {c} should be true sequentially and don't need to be adjacent.": "X N ( F (a) A X F ( c ) )",
    "expected behavior is more than one atomic proposition in {{a}, {c}} should be true.": "X N ( F (a) O F ( c ) )"
  },
  "e U X ( e ) U a A ( e )": {
    "expected behavior is to make {e} and {a} be true simultanously.": "F(e U X(e)) A (e U a)",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "e U X ( e ) U (e A a)",
    "expected behavior is to make {e} and {a} be true sequentially and don't need to be adjacent.": "F(e U X(e)) A F(e U a)",
    "expected behavior is more than one atomic proposition in {{e}, {a}} should be true.": "F(e O a)",
    "expected behavior is finally {a} should be true, no matter what the values of {e} are.": "F(e U X ( e ) U a)"
  },
  "G e A G f A ( E a O b )": {
    "expected behavior is {a} and {b} should be true simultanously.": "G e A G f A ( a O b )",
    "expected behavior is {e} and {f} should be true sequentially and don't need to be adjacent.": "G(e A F(f A (E a O b)))",
    "expected behavior is {e}, {f}, {a} and {b} should be true sequentially and don't need to be adjacent.": "F(e A F(f A F(a O b)))",
    "expected behavior is to make {a} and {b} be true simultanously, and then {e} and {f} should be true.": "F(a O b) A G(e A G(f))",
    "expected behavior is {a}, {b}, {e} and {f} should be true simultanously.": "G(e A f) A (a O b)"
  },
  "N f A G c U ( E a U b )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (f A G (c U (E (b U a))))",
    "expected behavior is {a} should be true first, and {f}, {c}, {a} and {b} should be true sequentially.": "F(a A f A G(c A E(b A a)))",
    "expected behavior is {a}, {f}, {c} and {b} should be true simultanously.": "F(a O f O c O b)",
    "expected behavior is {a} and {b} should be true, and then {f} and {c} should be true simultanously.": "F(a A b A (f O c))",
    "expected behavior is {a}, {f} and {c} should be true, and then {b} should be true finally.": "F(a A f A c A b)"
  },
  "b A N ( G f O N ( f ) )": {
    "expected behavior is {f} and {b} should be true simultanously.": "F(b A (G f O N(f)))",
    "expected behavior is {b} should be true, and then {f} should be true until {f} is false.": "F(b A (G f U N(f)))",
    "expected behavior is {b} should be true, and then some negative value of {f} should be true.": "F(b A X (N(f)))",
    "expected behavior is {f} should eventually be true, and {b} should be true.": "F(b A G(f))",
    "expected behavior is {b} should be true, and then {f} should be true until the end.": "F(b A (G f A N(f)))"
  },
  "b U N ( G f O N ( f ) )": {
    "expected behavior is {f} and {b} should be true simultanously.": "b A G(f O N(f))",
    "expected behavior is {f} should be true first, and then {b} should be true.": "G(f) U N(b)",
    "expected behavior is {b} should be true first, and then {f} should be true.": "b U N(G(f) O N(f))",
    "expected behavior is {b} should always be true, or {f} should be true once and then {b} should be true.": "G(b) U N(G(f) O N(f))",
    "expected behavior is {b} and {f} should be true simultanously, and then {f} should always be true.": "b A G(f A N(f))"
  },
  "( G d U b O N ( X e ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "G d U b O N ( e U X e )",
    "expected behavior is to make {b} and {e} be true simultanously.": "( G d U (b A N e) )",
    "expected behavior is to make {b} and {e} be true sequentially and don't need to be adjacent.": "( G d U (b A F(N e)) )",
    "expected behavior is to make {d}, {b} and {e} be true sequentially and don't need to be adjacent.": "( G d A F(b A F(N e)) )",
    "expected behavior is {d}, {b} and {e} finally be true simultanously.": "( G(d A b A N e) )",
    "expected behavior is more than one atomic proposition in {{d}, {b}, {e}} should be true.": "( G d O b O N e )",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {e} should be true.": "( G d U (b O X(N e)))",
    "expected behavior is {b} and {e} should be true simultanously, and then {e} should always be true.": "( G d U (b A G(N e)))",
    "expected behavior is finally {e} should be true, no matter what the values of {d} and {b} are.": "( G d U (b U N e))",
    "expected behavior is {e} should always be true, or {d} and {b} be true, but subsequently {e} should be true.": "G(d U (b U N e))"
  },
  "( N ( a ) A e U d O a )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O (N(a) A (e U a))",
    "expected behavior is to make {a}, {e}, and {d} be true sequentially and don't need to be adjacent.": "(N(a) A (e U F(d O a)))",
    "expected behavior is {a}, {e}, and {d} finally be true simultanously.": "F(N(a) A (e U d O a))",
    "expected behavior is more than one atomic proposition in {{a}, {e}, {d}} should be true.": "F(N(a) O e O d O a)",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {a} or {e} should be true.": "F(N(a) A (d O X(e U a)))",
    "expected behavior is {a}, {e} and {d} should be true simultanously, and then {a} should always be true.": "F(N(a) A (e U G(d O a)))",
    "expected behavior is finally {a} should be true, no matter what the values of {e} and {d} are.": "F(N(a) U (e U d O a))",
    "expected behavior is {a} should always be true, or {e} and {d} be true, but subsequently {a} should be true.": "G(N(a) U (e U d O a))"
  },
  "b A ( G f U N e ) U E e": {
    "expected behavior is {e} should be true eventually, and {f} should always be true.": "b A ( G f U N e ) A E e",
    "expected behavior is {f} should be true eventually, and {e} should always be true.": "b A ( F f U N e ) U E e",
    "expected behavior is {b} should be true first, then {f} or {e} should be true simultanously.": "b A ( F f O N e ) U E e",
    "expected behavior is {f} or {e} should be true eventually, and {e} should always be true.": "b A ( F f U N e ) A E e",
    "expected behavior is to make {b}, {f} and {e} be true simultanously.": "b A f A e"
  },
  "b A ( N f U d ) U N e": {
    "expected behavior is {b} should be true first, and {f}, {d} and {e} should be false. Such specification omits {b}.": "b A (N f U d) U N e",
    "expected behavior is to make {f}, {d} and {e} be true simultanously.": "b A ( N f A d A e )",
    "expected behavior is to make {f}, {d} and {e} be true sequentially and don't need to be adjacent.": "b A ( N f A F(d A F(e)))",
    "expected behavior is to make {b}, {f}, {d} and {e} be true sequentially and don't need to be adjacent.": "F(b A F(f A F(d A F(e))))",
    "expected behavior is {b}, {f}, {d} and {e} finally be true simultanously.": "F(b A f A d A e)"
  },
  "N ( e ) A E G f U ( d )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A N ( E G f U (d))",
    "expected behavior is to make {e}, {f} and {d} be true simultanously.": "N (e) A E G (f A d)",
    "expected behavior is to make {e}, {f} and {d} be true sequentially and don't need to be adjacent.": "N (e) A E G (f U F(d))",
    "expected behavior is {e}, {f} and {d} finally be true simultanously.": "N (e A f A d)",
    "expected behavior is more than one atomic proposition in {{e}, {f}, {d}} should be true.": "N (e O f O d)",
    "expected behavior is {f} shoule be true, or {f} should not be true first, and then {f} or {d} should be true.": "N (e A (f O X(d)))",
    "expected behavior is {f} and {d} should be true simultanously, and then {d} should always be true.": "N (e A G(f A d))",
    "expected behavior is finally {d} should be true, no matter what the values of {e} and {f} are.": "N (e A f U d)",
    "expected behavior is {d} should always be true, or {e} and {f} be true, but subsequently {d} should be true.": "G(N (e A f) U d)"
  },
  "N ( f ) U E X f U ( b )": {
    "expected behavior is {f} should not be true first. Such specification omits {f}.": "F(N(f) U EX f U (b))",
    "expected behavior is to make {f} and {b} be true simultanously.": "F(N(f) U (f A b))",
    "expected behavior is to make {f} and {b} be true sequentially and don't need to be adjacent.": "F(N(f) U (f A F(b)))",
    "expected behavior is to make {f}, {E} and {b} be true sequentially and don't need to be adjacent.": "F(N(f) A F(E X f) A F(b))",
    "expected behavior is {f}, {E} and {b} finally be true simultanously.": "F(N(f) A E X f A b)"
  },
  "N ( E E a U E N d ) U c": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "E E a U E N d U c",
    "expected behavior is to make {a} and {c} be true simultanously.": "N ( E E a A c ) U c",
    "expected behavior is to make {a} and {c} be true sequentially and don't need to be adjacent.": "N ( E E a U E N d U F(c))",
    "expected behavior is to make {a}, {d} and {c} be true sequentially and don't need to be adjacent.": "N ( E E a U F(E N d) U F(c) )",
    "expected behavior is {a}, {d} and {c} finally be true simultanously.": "N ( E E a A d A c )",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {c}} should be true.": "N ( E E a O d O c )",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} or {c} should be true.": "N ( E E a U (E N d O X(c)))",
    "expected behavior is {d} and {c} should be true simultanously, and then {c} should always be true.": "N ( E E a U (E N d A G(c)))",
    "expected behavior is finally {c} should be true, no matter what the values of {a} and {d} are.": "N ( E E a U (E N d U c))",
    "expected behavior is {c} should always be true, or {a} and {d} be true, but subsequently {c} should be true.": "N ( G(E E a U (E N d)) U c )"
  },
  "N ( N E a U E N d ) U e": {
    "expected behavior is {a}, {d}, {e} should be true simultanously.": "N ( N E a U E N d ) U e O e",
    "expected behavior is {d} should be true first, and then {a} or {e} should be true.": "N ( N E a U E N d ) U e A d",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {e}} should be true.": "N ( N E a U E N d ) U e O d O e",
    "expected behavior is {a}, {d}, {e} should be true sequentially and don't need to be adjacent.": "N ( N E a U E N d ) U F(e)",
    "expected behavior is finally {a}, {d}, {e} should be true simultanously.": "F(N ( N E a U E N d ) U e)"
  },
  "E ( e ) O a O f U a A b": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O (e O f U (a A b))",
    "expected behavior is {e} and {f} should be true simultanously.": "E(e A f) O a O (a A b)",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "E(e O f) U F(a A b)",
    "expected behavior is more than one atomic proposition in {{e}, {f}, {a}, {b}} should be true.": "E(e O f) O (a O b)",
    "expected behavior is {f} shoule be true, or {f} should not be true first, and then {e} or {f} should be true.": "E(e O (a O f) U a A b)"
  },
  "E ( d ) U a O e U a A a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O e U a A a",
    "expected behavior is to make {d}, {a}, {e} be true sequentially and don't need to be adjacent.": "E ( d A F(e U a A a))",
    "expected behavior is to make {a}, {e} and {a} be true sequentially and don't need to be adjacent.": "E ( d U F(a O e U a A a))",
    "expected behavior is more than one atomic proposition in {{d}, {a}, {e}} should be true.": "E ( d O a O e U a A a)",
    "expected behavior is finally {a} should be true, no matter what the values of {d},{e} are.": "E ( d U e U a A a )"
  },
  "G ( b U d A N X f U e )": {
    "expected behavior is {b} should be true, or {b} should not be true first, and then {f} or {e} should be true.": "G(b O X(f U e))",
    "expected behavior is {b} and {d} should be true simultanously, and then {f} or {e} should be true.": "G(b A d A (f U e))",
    "expected behavior is {b} and {d} should be true sequentially and don't need to be adjacent.": "G(b U X(d A (f U e)))",
    "expected behavior is more than one atomic proposition in {{b}, {d}, {f}, {e}} should be true.": "G(b O d O f O e)",
    "expected behavior is {f} or {e} should always be true, and then {b} and {d} should be true simultanously.": "G(F(f U e) A (b A d))"
  },
  "G ( b U c A N X f O f )": {
    "expected behavior is {b} and {c} should be true simultanously.": "G ( b A c U X f O f )",
    "expected behavior is {f} should always be true.": "G ( b U c A N X f G f )",
    "expected behavior is {f} should be true at least once.": "G ( b U c A N X f F f )",
    "expected behavior is {f} should be true at most once.": "G ( b U c A N X (f U !f) )",
    "expected behavior is {b}, {c} and {f} should be true sequentially and don't need to be adjacent.": "G ( b U c A N X (F(f A F(c A F(b)))) )"
  },
  "( a A G f U b O N X d )": {
    "expected behavior is {d} should be true after {b} and not before. Such specification omits {N}.": "(a A G f U b O X d)",
    "expected behavior is to make {a} and {f} true sequentially and don't need to be adjacent.": "(a A F(G f) U b O X d)",
    "expected behavior is to make {a}, {f} and {b} be true sequentially and don't need to be adjacent.": "(a A F(G f A b) O X d)",
    "expected behavior is more than one atomic proposition in {{a}, {f}, {b}} should be true.": "(a O G f O b U X d)",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {d} should be true.": "(a A G f U b O X(b O d))"
  },
  "( a U G f U b U N X a )": {
    "\n": "E",
    "P": "R",
    "o": "R",
    "s": "R"
  },
  "N ( c ) A ( e A ( d ) )": {
    "expected behavior is to make {d}, {e}, and {c} be true sequentially and don't need to be adjacent.": "N(c A F(e A F(d)))",
    "expected behavior is to make {e} and {d} be true simultanously.": "N(c A (e A d))",
    "expected behavior is {d}, {e}, and {c} should always be true.": "G(N(c) A (e A d))",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {c}} should be true.": "N(c O e O d)",
    "expected behavior is {d} should be true, or {d} should not be true first, and then {e} or {c} should be true.": "N(c U (e O X(d)))",
    "expected behavior is finally {c} should be true, no matter what the values of {d} and {e} are.": "N(c U (e U d))",
    "expected behavior is {d} and {e} should be true simultanously, and then {c} should always be true.": "N(c A (e A G(d)))"
  },
  "N ( a ) U ( e A ( d ) )": {
    "expected behavior is {a} should not be true and {e} should be true first. Such specification omits {a}.": "N(a) U (e A N(d))",
    "expected behavior is {e} and {d} should be true simultanously.": "N(a) U (e A d)",
    "expected behavior is {e} and {d} should be true sequentially and don't need to be adjacent.": "N(a) U (e A F(d))",
    "expected behavior is {a}, {e} and {d} should be true sequentially and don't need to be adjacent.": "N(a) A F(e A F(d))",
    "expected behavior is more than one atomic proposition in {{a}, {e}, {d}} should be true.": "N(a) O e O d"
  },
  "X N f U ( N a O E X e )": {
    "expected behavior is {f} should be true first, and then {a} and {e} should be true simultanously. Such specification omits {f}.": "f U (N a O E X e)",
    "expected behavior is {a} and {e} should be true sequentially and don't need to be adjacent.": "X N f U (N a A E X e)",
    "expected behavior is {a}, {e} and {f} should be true sequentially and don't need to be adjacent.": "X N f A E (N a A E X e)",
    "expected behavior is {a} and {e} finally be true simultanously.": "X N f U (N a A E X e)",
    "expected behavior is more than one atomic proposition in {{a}, {e}, {f}} should be true.": "X N f U (N a O F X e)"
  },
  "N a U ( N a O E N e )": {
    "expected behavior is {a} should be false first. Such specification omits {a}.": "N(a U (N(a) O E N e))",
    "expected behavior is {e} should never be true. Such specification omits {e}.": "N(a U (N(a) O E N(e)))",
    "expected behavior is {a} and {e} should be false simultanously.": "N(a U (N(a) A N e))",
    "expected behavior is more than one atomic proposition in {{a}, {e}} should be false.": "N(a O N e)",
    "expected behavior is {a} and {e} should be false, and then {a} or {e} should not be true.": "N(a U (N(a) O E N(e)))"
  },
  "G N ( X N N a A ( f ) )": {
    "expected behavior is {a} and {f} should be true simultanously.": "G N ( X N N a A ( f A a ) )",
    "expected behavior is {f} should be true first.": "G N ( X N N a A ( f ) U a )",
    "expected behavior is {a} should be true first, and then {f} should be true.": "G N ( X N N a U ( f A a ) )",
    "expected behavior is {a} and {f} should be true sequentially and don't need to be adjacent.": "G N ( X N N a A F(f A a) )",
    "expected behavior is finally {a} and {f} should be true simultanously.": "G N ( X N N a A F(f) A a )"
  },
  "c U N e U b A E ( ( d ) )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "F(c U N e U b A E( (d) ))",
    "expected behavior is {e} and {b} should be true simultanously.": "c U N (e A b) U E( (d) )",
    "expected behavior is to make {d} be true at least once.": "c U N e U b A EF (d)",
    "expected behavior is to make {d} and {b} be true sequentially and don't need to be adjacent.": "c U N e U (b A XF (d))",
    "expected behavior is to make {d}, {e} and {b} be true sequentially and don't need to be adjacent.": "c U N (e A XF(b A F(d)))"
  },
  "c A N e U f O X ( ( d ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A N (f O X ( ( d ) ))",
    "expected behavior is to make {e} and {f} be true simultanously.": "c A N (e A f O X ( ( d ) ))",
    "expected behavior is {e} and {f} should not be true simultanously.": "c A N (e O f O X ( ( d ) ))",
    "expected behavior is {d} should be true, no matter the values of {e} and {f}.": "c A N (e U f U X( ( d ) ))",
    "expected behavior is finally {d} should be true, no matter what the values of {e} and {f} are.": "F(c A N (e U f O X( ( d ) )))"
  },
  "G ( X f ) A ( a ) A f U d": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a A G(X(f)) A (f U d)",
    "expected behavior is {f} should be true first and then {d} should be true.": "a A G(X(f)) A f A d",
    "expected behavior is {f} and {d} should be true simultanously.": "a A G(X(f)) A (f A d)",
    "expected behavior is to make {f} and {d} be true sequentially and don't need to be adjacent.": "a A G(X(f)) A (f U F(d))",
    "expected behavior is more than one atomic proposition in {{f}, {d}} should be true.": "a A G(X(f)) A (f O d)",
    "expected behavior is {d} should be true, or {f} should not be true first, and then {d} or {f} should be true.": "a A G(X(f)) A (f O X(d))",
    "expected behavior is {f} and {d} should be true simultanously, and then {d} should always be true.": "a A G(X(f)) A (f A G(d))",
    "expected behavior is finally {d} should be true, no matter what the values of {f} are.": "a A G(X(f)) A (f U G(d))",
    "expected behavior is {d} should always be true, or {a}, {f} shoule be true, but subsequently {d} should be true.": "G(a A G(X(f)) U (f U d))"
  },
  "E ( e ) U G ( N X N N e )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U G(N X N N e)",
    "expected behavior is to make {N} and {N N e} be true simultanously.": "E(e U G(N A N N e))",
    "expected behavior is to make {N} and {N N e} be true sequentially and don't need to be adjacent.": "E(e U G(N A F(N N e)))",
    "expected behavior is to make {e}, {N} and {N N e} be true sequentially and don't need to be adjacent.": "E(e A F(N A F(N N e)))",
    "expected behavior is {e}, {N} and {N N e} finally be true simultanously.": "E(e A N A N N e)",
    "expected behavior is more than one atomic proposition in {{e}, {N}, {N N e}} should be true.": "E(e O N O N N e)",
    "expected behavior is {N} shoule be true, or {N} should not be true first, and then {N} or {N N e} should be true.": "E(e U (N O X(N N e)))",
    "expected behavior is {N} and {N N e} should be true simultanously, and then {N N e} should always be true.": "E(e U (N A G(N N e)))",
    "expected behavior is finally {N N e} should be true, no matter what the values of {e} and {N} are.": "E(e U (N U N N e))",
    "expected behavior is {N N e} should always be true, or {e} and {N} be true, but subsequently {N N e} should be true.": "G(e U (N U N N e))"
  },
  "E ( c ) U G ( E N G e )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c U (E N G e)",
    "expected behavior is to make {c} and {e} be true sequentially and don't need to be adjacent.": "E(c A F(E N G e))",
    "expected behavior is to make {c}, {e} and {G} be true simultanously.": "F(c A E N G e)",
    "expected behavior is more than one atomic proposition in {{c}, {e}, {G}} should be true.": "F(c O E N G e)",
    "expected behavior is {e} shoule be true, or {e} should not be true first, and then {e} or {G} should be true.": "E(c U (e O X(G)))"
  },
  "G ( N N ( G d A f ) O e )": {
    "expected behavior is {d}, {e}, {f} should be true simultanously.": "G(d A e A f)",
    "expected behavior is {d} and {f} should be true simultanously, and then {f} should always be true.": "G(d A G(e O f))",
    "expected behavior is {d}, {e}, {f} should be true sequentially and don't need to be adjacent.": "G(d A F(e A F(f)))",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {f}} should be true.": "G(d O e O f)",
    "expected behavior is finally {e} should be true, no matter what the values of {d} and {f} are.": "F(d U (e U f))"
  },
  "G ( N E ( G d U b ) O e )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "G(N E (b U G(d)) O e)",
    "expected behavior is {e} should be true first, then {d} or {b} should be true. Such specification omits this condition.": "G(N E (G(d) U b) O F(e))",
    "expected behavior is {d} and {b} should be true simultanously. Such specification omits this condition.": "G(N E (G(d A b)) O e)",
    "expected behavior is {d} and {b} should be true sequentially, and don't need to be adjacent. Such specification omits this condition.": "G(N E (G(d) A b) O e)",
    "expected behavior is {d} or {b} should be true, and then {e} should be true. Such specification omits this condition.": "G(N E (G(d U b)) A e)"
  },
  "d A ( ( X b O c U N d ) )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d A ( ( X b O c U N d ) )",
    "expected behavior is to make {b} and {c} be true simultanously.": "d A ( ( X b A c U N d ) )",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "d A ( ( X b A F(c) U N d ) )",
    "expected behavior is to make {d}, {b} and {c} be true sequentially and don't need to be adjacent.": "d A ( ( X b A F(c) U F(N d) ) )",
    "expected behavior is {d}, {b} and {c} finally be true simultanously.": "d A ( ( X b A c U N d ) )"
  },
  "d O ( ( N f O c U N d ) )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d O ( ( N f O c U N d ) )",
    "expected behavior is {f} and {d} should be true at the same time.": "d O ( ( f O c U d ) )",
    "expected behavior is {f} should be true first, and then {d} or {c} should be true.": "d O ( ( f O X(c U d) ) )",
    "expected behavior is {d} should always be true, or {f} and {c} should be true, but subsequently {d} should be true.": "G(d O ( (f O c U d) ) )",
    "expected behavior is finally {d} should be true, no matter what the values of {f} and {c} are.": "F(d O ( f O c U d ) )"
  },
  "G b U ( N e U f O ( b ) )": {
    "expected behavior is {e} should be false first, and then {f} should be true, and then {b} should be true. Such specification omits {e}.": "G b U ( e U f O ( b ) )",
    "expected behavior is {f} should be true first, and then {b} should be true. Such specification omits {f}.": "G b U ( N e U (f A b))",
    "expected behavior is {b} should be true, or {e} and {f} should be true, but subsequently {b} should be true.": "G (b O (e U f)) U b",
    "expected behavior is more than one atomic proposition in {{e}, {f}, {b}} should be true.": "G b O (e O f O b)",
    "expected behavior is {f} should be true, or {e} should not be true first, and then {e} or {b} should be true.": "G b U (N e U (f O b))"
  },
  "( e ) U ( X G N c U X b )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (X G (N c U X b))",
    "expected behavior is {c} and {b} should be true simultanously.": "G(e U (X (N c A X b)))",
    "expected behavior is {b} should be true first, and then {b} or {c} should be true.": "G(e U (X (N c O X b)))",
    "expected behavior is more than one atomic proposition in {{b}, {c}} should be true.": "G(e U (X (N c O b)))",
    "expected behavior is {e}, {b}, and {c} should be true sequentially and don't need to be adjacent.": "G(e A X G (N c A X b))"
  },
  "( e ) U ( E G N e U N b )": {
    "expected behavior is more than one atomic proposition in {{e}, {b}} should be true.": "F(e O b)",
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e U (E G N e U N b)",
    "expected behavior is {e}, {b} and {N e} should be true simultanously.": "F(e A N e A b)",
    "expected behavior is to make {e} and {b} be true sequentially and don't need to be adjacent.": "F(e A F(N e U N b))",
    "expected behavior is finally {e}, {N e} and {b} should be true simultanously.": "F(e A N e A G(b))"
  },
  "G ( ( a U c ) ) U G b O e": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "G ( ( a U c ) ) U b O e",
    "expected behavior is {b} and {e} should be true simultanously.": "G ( ( a U c ) ) U (b A e)",
    "expected behavior is to make {a}, {c}, {b} and {e} be true sequentially and don't need to be adjacent.": "G ( ( a U F(c) ) U F(b A F(e)))",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {b}, {e}} should be true.": "G ( ( a U c ) ) U (b O e)",
    "expected behavior is finally {b} or {e} should be true, no matter what the values of {a} and {c} are.": "G ( ( a U c ) ) U (b U e)"
  },
  "E ( ( a U f ) ) U G b O c": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U ( ( f ) ) U G b O c",
    "expected behavior is to make {b} and {c} be true simultanously.": "E ( ( a U f ) ) U (b A c)",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "E ( ( a U f ) ) U G b A G c",
    "expected behavior is to make {a}, {b} and {c} be true sequentially and don't need to be adjacent.": "E ( ( a U f ) ) U G b A F(G c)",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be true.": "E ( ( a U f ) ) U (b O c)"
  },
  "( G N a U f O ( f ) O b )": {
    "expected behavior is {a} should be true first, but this task omits {a}.": "G(a U f O (f) O b)",
    "expected behavior is to make {f}, {f} and {b} be true sequentially and don't need to be adjacent.": "( G N a U f A F((f) A F(b)))",
    "expected behavior is to make {f}, {f} and {b} be true simultanously.": "( G N a U (f A (f) A b))",
    "expected behavior is to make {a}, {f}, {f} and {b} be true sequentially and don't need to be adjacent.": "(G N a A F(f A F((f) A F(b))))",
    "expected behavior is to make {a}, {f}, {f} and {b} finally be true simultanously.": "(G N (a A f A (f) A b))"
  },
  "( X N a U f U ( f ) O a )": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "a U (X N (f U (f) O a))",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (X N (f U (f) O a))",
    "expected behavior is {a} should be true or {f} should be true before {a}. Such specification omits this requirement.": "X N (a U f U (f) O a)",
    "expected behavior is {a} and {f} should be true simultanously. Such specification omits this requirement.": "X N (a A f U (f) O a)",
    "expected behavior is {a} should be true after {f} and {f} should be true twice. Such specification omits this requirement.": "X N ((f A f) U a O a)"
  },
  "N N ( N c U f A b ) O G b": {
    "expected behavior is {f}, {b} should be true simultanously. Such specification omits {f}.": "N N ( N c U (f A b)) O G b",
    "expected behavior is to make {b} always be true. Such specification omits {b}.": "N N ( N c U f A b) O G (b)",
    "expected behavior is {c} should be true first, and then make {f} and {b} be true simultanously. Such specification omits {c}.": "N N ((c U f A b)) O G b",
    "expected behavior is to make {f} and {b} be true sequentially and don't need to be adjacent. Such specification omits {f}.": "N N ( N c U (f A F(b))) O G b",
    "expected behavior is to make {c}, {f} and {b} be true sequentially and don't need to be adjacent. Such specification omits {c}.": "N N (N (f A F(b))) O G b"
  },
  "N ( X a U f A b ) O G b": {
    "expected behavior is {a} should be true first, while {f} is not a necessary condition.": "N (X a U b A f) O G b",
    "expected behavior is {a}, {b} and {f} should be true simultanously.": "N (X a A b A f) O G b",
    "expected behavior is {a} and {f} should be true simultanously, and then {b} should be true.": "N (X (a A f) U b) O G b",
    "expected behavior is {a}, {b} and {f} should be true sequentially and don't need to be adjacent.": "N (X a A F(f A b)) O G b",
    "expected behavior is {a}, {b} and {f} should be true sequentially but need to be adjacent.": "N (X a A (f A b)) O G b"
  },
  "N N ( d ) U G ( d ) U N d": {
    "expected behavior is {d} should be false first, and then {d} or {d} should be true.": "N(N(d) U G(d) U d)",
    "expected behavior is {d} should be false first, and then {d} or {d} should be true, and then {d} should always be true.": "N(N(d) U G(d) U G(d))",
    "expected behavior is {d} should be false first, and then only one of {d} or {d} should be true.": "N(N(d) O G(d) U d)",
    "expected behavior is {d} should be false first, and then {d} or {d} should be true sequentially.": "N(N(d) U (G(d) U d))",
    "expected behavior is more than one atomic proposition in {{d}} should be true.": "N(N(d) O G(d) O d)"
  },
  "N N ( d ) U N ( d ) U d": {
    "expected behavior is {d} should not be true twice. Such specification omits this requirement.": "N N ( d ) U N ( d ) O d",
    "expected behavior is {d} should not be true more than once. Such specification omits this requirement.": "N N ( d ) A N ( d ) U d",
    "expected behavior is {d} should not be true twice and should be true at last. Such specification omits this requirement.": "N N ( d ) U N ( d ) A d",
    "expected behavior is {d} should not be true twice, and should not be false for any time. Such specification omits this requirement.": "G(N N ( d ) U N ( d ) U d)",
    "expected behavior is {d} should not be false for any time, but should be true at last. Such specification omits this requirement.": "F(N N ( d ) U N ( d ) U d)"
  },
  "( ( d O N ( G G E c ) ) )": {
    "expected behavior is {d} and {c} should be true sequentially and don't need to be adjacent.": "F(d A F(F(G G E c)))",
    "expected behavior is {d} and {c} finally be true simultanously.": "F(d A G G E c)",
    "expected behavior is {d} and {c} should be true simultanously, and then {c} should always be true.": "F(d A G(G G E c))",
    "expected behavior is more than one atomic proposition in {{d}, {c}} should be true.": "F(d O G G E c)",
    "expected behavior is finally {c} should be true, no matter what the values of {d} are.": "F(d U G G E c)"
  },
  "( ( b O N ( G N G a ) ) )": {
    "expected behavior is {a} should be true and there is no restriction on {b}.": "( ( b U T ) U G N G a )",
    "expected behavior is {b} should be true first, and then {a} should always be true.": "F( ( b U T ) U G a )",
    "expected behavior is all of {{a}, {b}} should be true simultanously.": "G( a A b )",
    "expected behavior is {b} should be true or {a} should always be true.": "( b O F( G a ) )",
    "expected behavior is {a} should eventually be true, no matter what the value of {b} is.": "F( ( b U a ) )"
  },
  "N ( X ( X c ) ) U N G N d": {
    "expected behavior is {c} should be true twice, but not {d}. Such specification omits {d}.": "N ( X ( X c ) ) U N G d",
    "expected behavior is {c} should be true twice, but not {d}. Then {d} should be true later.": "N ( X ( X c ) ) U F ( G d )",
    "expected behavior is {d} should be true later, no matter what the values of {c} are.": "N ( X ( X c ) ) U N G F d",
    "expected behavior is {d} should be true at the same time with {c}, and then {d} should always be true.": "N ( X ( X c ) A d ) U N G d",
    "expected behavior is {c} should be true twice and then {d} should be true.": "N ( X ( X c ) ) A N ( X d ) U N G d"
  },
  "b U ( X a ) U N ( ( c ) )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U (X (a U N((c))))",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "b U (X (a)) U N((c))",
    "expected behavior is to make {a}, {b} and {c} be true sequentially and don't need to be adjacent.": "b U (X(a) A F(N(c)))",
    "expected behavior is to make {a}, {b} and {c} be true simultanously.": "b A X(a) A N(c)",
    "expected behavior is to make {a} and {b} be true sequentially and don't need to be adjacent, and then {c} should be true.": "b U (X(a) A N(c))"
  },
  "X e A N c U ( ( e A a ) )": {
    "expected behavior is {e} should be true, and then {a} should be true. Such specification omits {e}.": "e A (X c U (a A e))",
    "expected behavior is {e} should be true first, and then {c} and {a} should be true simultanously.": "X e A (c A a)",
    "expected behavior is {c} and {a} should be true sequentially and don't need to be adjacent.": "X e A N c U (a A e)",
    "expected behavior is {e}, {c} and {a} should be true sequentially and don't need to be adjacent.": "X e A N (c U (a A e))",
    "expected behavior is {e}, {c} and {a} should finally be true simultanously.": "X e A (c A a A e)"
  },
  "E G ( E N f ) O ( E N c )": {
    "expected behavior is {f} should be true until {c} is true. Such specification omits {f}.": "E G ( E N f ) O G ( E N c )",
    "expected behavior is {f} should be true until {c} is false. Such specification omits {f}.": "E G ( E N f ) O F ( E N c )",
    "expected behavior is {f} and {c} should be true until {f} and {c} are false. Such specification omits {f}.": "E G ( E N f A E N c ) O F ( E N f A E N c )",
    "expected behavior is {f} should be true, and then alternately {f} and {c} should be true. Such specification omits {f}.": "E G ( E N f ) O X ( E N c )",
    "expected behavior is {f} should always be true or {c} should always be true. Such specification omits {f}.": "E G ( E N f O E N c ) O F ( E N f O E N c )"
  },
  "E G ( E N f ) O ( N N c )": {
    "expected behavior is {f} and {c} should be true simultanously.": "E G (f A c)",
    "expected behavior is {f} and {c} should be true sequentially and don't need to be adjacent.": "E G (E(f) O N(c))",
    "expected behavior is {f} and {c} should finally be true simultanously.": "F(G(f) A G(c))",
    "expected behavior is more than one atomic proposition in {{f}, {c}} should be true.": "F(f O c)",
    "expected behavior is {f} shoule be true, or {f} should not be true first, and then {f} or {c} should be true.": "E G (E(f) O (N(f) U N(c)))"
  },
  "N N ( b O X d A N a U d )": {
    "expected behavior is {b} should be true first and then {d} should be true. Such specification omits {b}.": "N N ( b O X d A N a U b O X d )",
    "expected behavior is to make {a}, {b}, and {d} be true simultanously.": "N N ( b O X d A a A b A d )",
    "expected behavior is to make {a}, {b} and {d} be true sequentially and don't need to be adjacent.": "N N ( b O X d A F(a A F(b A F(d))) )",
    "expected behavior is to make {a}, {b} and {d} finally be true simultanously.": "N N ( b O X d A F(a A b A d) )",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {d}} should be true.": "N N ( b O X d A F(a O b O d) )"
  },
  "N N ( b U X d A b O b )": {
    "expected behavior is {b} should be true first and then {d} should be true. Such specification omits {d}.": "N N ( b U (X d A b) O b )",
    "expected behavior is to make {b} and {d} be true sequentially and don't need to be adjacent.": "N N ( b U (d A F(b)) O b )",
    "expected behavior is to make {b} and {d} be true simultanously.": "N N ( b U (d A b) O b )",
    "expected behavior is {b} and {d} should be true simultanously, and then {b} should always be true.": "N N ( b U (d A G(b)) O b )",
    "expected behavior is {b}, {d} and {b} finally be true simultanously.": "N N ( b A d A b )",
    "expected behavior is more than one atomic proposition in {{b}, {d}, {b}} should be true.": "N N ( b O d O b )"
  },
  "N N ( c ) A ( G e ) O G b": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "N N ( c ) A ( e ) O G b",
    "expected behavior is to make {b} and {c} be true simultanously.": "N N ( c A b ) A ( G e ) O G b",
    "expected behavior is to make {b} and {e} be true sequentially and don't need to be adjacent.": "N N ( c ) A ( G e A G b ) O G b",
    "expected behavior is to make {c}, {b} and {e} be true sequentially and don't need to be adjacent.": "N N ( c A F(b A F(e))) A ( G e ) O G b",
    "expected behavior is more than one atomic proposition in {{c}, {b}, {e}} should be true.": "N N ( c O b O e ) A ( G e ) O G b"
  },
  "E N ( c ) A ( G e ) U X b": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U (E N ( c ) A ( G e ))",
    "expected behavior is {e} should be true first and then {c} should be true. Such specification omits {e}.": "E N ( ( G e ) U X c ) A b",
    "expected behavior is {c} should be true first, but don't need to be adjacent to {e}.": "E N ( G ( e U X c )) A b",
    "expected behavior is {c} should be true first, and then {e} and {b} should be true simultanously.": "E N ( c A ( G e )) U X b",
    "expected behavior is {e} and {b} should be true simultanously, and then {c} should always be true.": "E N ( G ( e A b )) U X c"
  },
  "X e O ( d ) U ( ( E c ) )": {
    "expected behavior is {d} should be true first, and then {c} should be true. Such specification omits {d}.": "X e O d U (E c)",
    "expected behavior is {c} should be true when {d} is false.": "X e O (d A F(E c))",
    "expected behavior is {d} and {c} should be true simultanously.": "X e O (d A c)",
    "expected behavior is {d} and {c} should be true sequentially and don't need to be adjacent.": "X e O (d A F(E c))",
    "expected behavior is {e}, {d} and {c} finally be true simultanously.": "F(e A d A c)"
  },
  "N e O ( d ) U ( ( E c ) )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U (N e O (E c))",
    "expected behavior is to make {d} and {e} be true simultanously.": "N (d A e) O (E c)",
    "expected behavior is to make {d}, {e} and {c} be true sequentially and don't need to be adjacent.": "N (d A F(e A F(c)))",
    "expected behavior is to make {d}, {e} and {c} finally be true simultanously.": "N (d A e A c)",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {c}} should be true.": "N (d O e O c)"
  },
  "N N ( b O e ) U E ( N b )": {
    "expected behavior is to make {b} and {e} be true sequentially and don't need to be adjacent.": "N N ( b A F(e) ) U E ( N b )",
    "expected behavior is to make {b} and {e} be true simultanously.": "N N ( b A e ) U E ( N b )",
    "expected behavior is more than one atomic proposition in {{b}, {e}} should be true.": "N N ( b O e ) U E ( N (b O e) )",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {b} or {e} should be true.": "N N ( b O X(e) ) U E ( N b )",
    "expected behavior is {b} and {e} should be true simultanously, and then {e} should always be true.": "N N ( b A G(e) ) U E ( N b )"
  },
  "N N ( f O e ) U E ( b )": {
    "expected behavior is to make {f} and {e} be true sequentially and don't need to be adjacent.": "N N ( F(f A e) ) U E ( b )",
    "expected behavior is to make {f} and {e} be true simultanously.": "N N ( f A e ) U E ( b )",
    "expected behavior is more than one atomic proposition in {{f}, {e}, {b}} should be true.": "N N ( F(f O e) ) U E ( F(b) )",
    "expected behavior is {b} should be true, or {f} and {e} should be true simultanously.": "N N ( f O e ) U E ( F(b) )",
    "expected behavior is {b} should always be true, or {f} and {e} should be true sequentially and don't need to be adjacent.": "N N ( F(f A e) ) U E ( G(b) )"
  },
  "( d A f U X c A ( N c ) )": {
    "expected behavior is {d}, {f}, {c} should be true simultanously.": "F( d A f A ( c U X c A ( N c )))",
    "expected behavior is {d}, {f} and {c} should be true sequentially and don't need to be adjacent.": "F(d A F(f A F(c U X c A ( N c ))))",
    "expected behavior is to make {d}, {f}, {c} finally be true simultanously.": "F(d A f A c A X c A ( N c ))",
    "expected behavior is more than one atomic proposition in {{d}, {f}, {c}} should be true.": "F(d O f O c U X c A ( N c ))",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {f} or {c} should be true.": "F(d U (f O X(c U X c A ( N c ))))",
    "expected behavior is {f} and {c} should be true simultanously, and then {c} should always be true.": "F(d A (f A G(c U X c A ( N c ))))",
    "expected behavior is finally {c} should be true, no matter what the values of {d} and {f} are.": "F(d U (f U c U X c A ( N c )))",
    "expected behavior is {c} should always be true, or {d} and {f} be true, but subsequently {c} should be true.": "G(d U (f U c U X c A ( N c )))"
  },
  "( d A f U X c O ( N c ) )": {
    "expected behavior is {c} should be true first and then {d} and {f} should be true. Such specification omits {c}.": "(X c A d A f O ( N c ) )",
    "expected behavior is {f} should be true at the same time with {d}, or {d} should be true first and then {f}.": "( d A ( f O X(d) ) U X c O ( N c ) )",
    "expected behavior is more than one atomic proposition in {{d}, {f}, {c}} should be true.": "(d O f O c U X c O ( N c ))",
    "expected behavior is {c} should be true, or {c} should not be true first, and then {d} or {f} should be true.": "(d A f U X (c O (N c)))",
    "expected behavior is finally {c} should be true, no matter what the values of {d} and {f} are.": "F(d A f U X c O ( N c ) )"
  },
  "N ( c U ( e U G e ) U f )": {
    "expected behavior is {c}, {e} and {f} should be true simultanously.": "F(c A e A f)",
    "expected behavior is {f} should be true, and then {e} should be true and should always be true.": "F(c U (e A G(e)) U f)",
    "expected behavior is {f} should be true, and then {e} should be true and only once.": "F(c U (e A X(e)) U f)",
    "expected behavior is {e} should be true, and then {f} should be true and only once.": "F(c U (e U X(f)) U f)",
    "expected behavior is {f} should be true, and then {c} or {e} should be true.": "F(c O (e U G(f))) U f)"
  },
  "N ( c U ( e U X a ) U b )": {
    "expected behavior is {c}, {e} and {a} should be true sequentially and don't need to be adjacent.": "N(c U (e U F(a)) U b)",
    "expected behavior is {c} should be true first, and then {a} or {b} should be true.": "N(c U (e O X(a)) U b)",
    "expected behavior is more than one atomic proposition in {{c}, {e}, {a}, {b}} should be true.": "N(c O e O a O b)",
    "expected behavior is {e} and {a} should be true simultanously, and then {e} or {a} should always be true.": "N(c U (e A G(a)) U b)",
    "expected behavior is finally {b} should be true, no matter what the values of {c}, {e} and {a} are.": "N(c U (e U b))"
  },
  "N e A N b O ( E N ( b ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A N b O (E N (b))",
    "expected behavior is to make {b} and {e} be true simultanously.": "N e A b O (E N (b))",
    "expected behavior is to make {b} and {e} be true sequentially and don't need to be adjacent.": "N e A b O (E N (F(b)))",
    "expected behavior is to make {e}, {b} and {e} finally be true simultanously.": "N e A b A e",
    "expected behavior is more than one atomic proposition in {{e}, {b}} should be true.": "N e O b O e"
  },
  "N c A N b U ( N G ( b ) )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U (N G (b))",
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c A N b U (N G (b))",
    "expected behavior is {b} should not be true and then {c} should be true.": "N c A N b U (b)",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "N c A N b U (F(b))",
    "expected behavior is {b} should always be false.": "N c A N b U (G(b))"
  },
  "( N c U E E G d A N ( c ) )": {
    "expected behavior is {c}, {d} should be true simultanously. Such specification omits {d}.": "(N c U E E G (d A N (c)))",
    "expected behavior is {d} should be true after {c} is true.": "(N c U E E G (d U N (c)))",
    "expected behavior is {d} should be true eventually no matter what the values of {c} is.": "( N c U E E G (d O N (c)))",
    "expected behavior is {c}, {d} should be true simultanously in a finite number of steps. Such specification omits {d}.": "(N c U (E G (d A N (c))))",
    "expected behavior is {d} should be true after {c} is true, and then {d} should be true always. Such specification omits {d}.": "(N c U E E G (d A G (N (c))))"
  },
  "( N c U E E X f A N ( c ) )": {
    "expected behavior is {c} should be true, or {f} should be true first and then {c} should be true. Such specification omits {f}.": "N(c U E E X (f A N(c)))",
    "expected behavior is {c}, {f} should be true simultanously.": "(N c U E E (X f A N c))",
    "expected behavior is to make {c}, {f} be true sequentially and don't need to be adjacent.": "(N c U E E X (f A F N c))",
    "expected behavior is more than one atomic proposition in {{c}, {f}} should be true.": "(N c U E E X (f O N c))",
    "expected behavior is {c}, {f} finally be true simultanously.": "(N c U E E (X f A G N c))"
  },
  "X N ( b A N d ) O N N ( e )": {
    "expected behavior is {b} and {d} should be true simultanously.": "X N ( b A d ) O N N ( e )",
    "expected behavior is {d} should not be true, or {d} and {e} should be true simultanously.": "X N ( b O N d ) O N N ( e )",
    "expected behavior is {b} should be true and then {d} should always be true.": "X N ( b A G(d) ) O N N ( e )",
    "expected behavior is {b}, {d} and {e} should be true sequentially and don't need to be adjacent.": "X N ( b A F(N d A F(e))) O N N ( e )",
    "expected behavior is more than one atomic proposition in {{b}, {d}, {e}} should be true.": "X N ( b O d O e ) O N N ( e )"
  },
  "X N ( b U d ) A N N ( e )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U (d A N N(e))",
    "expected behavior is to make {b} and {d} be true simultanously.": "X N(b A d) A N N(e)",
    "expected behavior is to make {b} and {d} be true sequentially and don't need to be adjacent.": "X N(b U F(d)) A N N(e)",
    "expected behavior is to make {b}, {d} and {e} be true sequentially and don't need to be adjacent.": "X N(b U F(d A F(e))) A N N(e)",
    "expected behavior is {b}, {d} and {e} finally be true simultanously.": "X N(b A d A e) A N N(e)"
  },
  "N ( G c ) O G ( ( c U c ) )": {
    "expected behavior is {c} should be true until {c} is false. Such specification omits {c}.": "G c U G ( ( c U c ) )",
    "expected behavior is {c} should always be true. Such specification omits {c}.": "G(c A G((c U c)))",
    "expected behavior is {c} should be true first and then {c} should be false. Such specification omits {c}.": "G c A G ( ( c U c ) )",
    "expected behavior is to make {c} and {c} be true sequentially and don't need to be adjacent.": "N ( G c ) O G ( ( c A F ( c ) ) )",
    "expected behavior is more than one atomic proposition in {{c}} should be true.": "N(G(c A c)) O G((c U c))"
  },
  "N ( G c ) A G ( ( c U c ) )": {
    "expected behavior is {c} should always be true. Such specification omits {c}.": "G(c) A G((c U c))",
    "expected behavior is {c} should first be true and then always be true.": "N(G(c)) A G((c U c))",
    "expected behavior is {c} should first be false and then always be true.": "N(N(c)) A G((c U c))",
    "expected behavior is {c} should first be false and then always be false.": "N(N(c)) A G((c A c))",
    "expected behavior is {c} should first be true and then always be false.": "N(G(c)) A G((c A c))"
  },
  "( c ) O X N f U ( ( N b ) )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c O X(N(f U ((Nb))))",
    "expected behavior is to make {f} and {b} be true simultanously.": "(c O X(Nf)) U (Nb)",
    "expected behavior is to make {f} and {b} be true sequentially and don't need to be adjacent.": "(c O X(Nf)) U (N(F(b)))",
    "expected behavior is to make {c}, {f} and {b} be true sequentially and don't need to be adjacent.": "(c O X(Nf)) U (N(F(F(b))))",
    "expected behavior is {c}, {f} and {b} finally be true simultanously.": "F((c O X(Nf)) A (Nb))"
  },
  "( c ) A G N f U ( ( N b ) )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "F(c A G(f U ((N b))))",
    "expected behavior is {b} should be false eventually. Such specification omits {b}.": "F(c A G(f U (N(b))))",
    "expected behavior is {c} and {f} should be true simultanously.": "F((c A f) A G(f U (N(b))))",
    "expected behavior is {b} should not be false eventually, or {c} and {f} should be true first, and then {b} should not be false.": "F((c A f) U (G(N(b))))",
    "expected behavior is {f} should always be true, or {c}, {b} should not be false eventually.": "G(c A G(f U (N(b))))"
  },
  "N ( X N ( f ) U f U ( f ) )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U (X N (f) U (f))",
    "expected behavior is {f} should be true twice sequentially. Such specification omits {f}.": "f U (f U (X N (f)))",
    "expected behavior is to make {f} be true three times simultanously. Such specification omits {f}.": "N(f U (f U (f)))",
    "expected behavior is to make {f} be true three times sequentially. Such specification omits {f}.": "F(f U (f U (X N (f))))",
    "expected behavior is to make {f} be true twice, and then {f} should always be true. Such specification omits {f}.": "F(f U (f A G(X N (f))))"
  },
  "E ( N N ( f ) U c U ( f ) )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "F ( N N ( f ) U c U ( f ) )",
    "expected behavior is to make {f} and {c} be true simultanously.": "E ( N N ( f ) A c U ( f ) )",
    "expected behavior is to make {f} and {c} be true sequentially and don't need to be adjacent.": "E ( N N ( f ) U c A ( f ) )",
    "expected behavior is to make {f}, {c} finally be true simultanously.": "E ( N N ( f ) A c A ( f ) )",
    "expected behavior is more than one atomic proposition in {{f}, {c}} should be true.": "E ( N N ( f ) O c U ( f ) )",
    "expected behavior is {f} shoule be true, or {f} should not be true first, and then {f} or {c} should be true.": "E ( N N ( f ) O c U ( f ) )",
    "expected behavior is {f} and {c} should be true simultanously, and then {c} should always be true.": "E ( N N ( f ) A G(c) U ( f ) )",
    "expected behavior is finally {c} should be true, no matter what the values of {f} are.": "F ( N N ( f ) U c U ( f ) )"
  },
  "N ( N ( G b ) ) U d O ( e )": {
    "expected behavior is {b} should be true first and always. Such specification omits {b}.": "N ( G ( b ) ) U d O ( e )",
    "expected behavior is {d} should be true, or {e} should be true first, and then {d} or {e} should be true.": "N ( N ( G ( b ) ) U d ) O ( e )",
    "expected behavior is {d} and {e} should be true simultanously.": "N ( N ( G ( b ) ) A d A e )",
    "expected behavior is to make {b}, {d} and {e} be true sequentially and don't need to be adjacent.": "F( N ( G ( b ) ) A F( d A F( e ) ) )",
    "expected behavior is to make {b}, {d} and {e} be true simultanously.": "F( N ( G ( b ) ) A d A e )"
  },
  "N ( N ( E b ) ) U d U ( e )": {
    "expected behavior is {b} and {d} should be true simultanously.": "N ( N ( E b ) ) A d U (e)",
    "expected behavior is {b} should be true first, and then {d} or {e} should be true.": "N ( N ( E b ) ) U (d O e)",
    "expected behavior is {e} should be true first, and then {b} or {d} should be true.": "N ( N ( E b ) ) U (e O (d U b))",
    "expected behavior is {e} should always be true, no matter what the values of {b} and {d} are.": "G(e U (N ( N ( E b )) A d))",
    "expected behavior is finally {b}, {d} and {e} should be true simultanously.": "F(N ( N ( E b ) ) A d A e)"
  },
  "G ( ( f ) O b ) U c U N G f": {
    "expected behavior is {f} should always be true, but the task omits {f}.": "G(f O b) U c U N G f",
    "expected behavior is {f}, {b} and {c} should be true simultanously.": "G((f A b) U c U N G f)",
    "expected behavior is {f} should be true, and then {c}, and then {b}, and finally {f} should always be true.": "G(f U c U b U N G f)",
    "expected behavior is {f}, {b} and {c} should be true sequentially, and don't need to be adjacent.": "G(f A F(b A F(c))) U N G f",
    "expected behavior is finally {f}, {b} and {c} should be true simultanously.": "G(f A b A c) U N G f"
  },
  "G ( ( f ) O b ) A c U N N f": {
    "expected behavior is {f} and {b} should be true simultanously, and then {c} should be true.": "G((f A b) U c)",
    "expected behavior is {f}, {b} and {c} should be true simultanously, and then {f} should always be true.": "G((f A b A c) U G(f))",
    "expected behavior is {f}, {b} and {c} should be true sequentially and don't need to be adjacent.": "G(f A F(b A F(c)))",
    "expected behavior is more than one atomic proposition in {{f}, {b}, {c}} should be true.": "G((f O b O c) U N N f)",
    "expected behavior is {f} and {b} or {c} should be true.": "G((f A b) O (f A c))"
  },
  "N G X N ( ( G b O d A c ) )": {
    "expected behavior is {b} and {c} should be true simultanously.": "N G X N ( ( G b A c ) )",
    "expected behavior is {b} and {c} should be true sequentially and don't need to be adjacent.": "N G X N ( ( G b A F(c) ) )",
    "expected behavior is {b} and {d} should be true simultanously.": "N G X N ( ( G b A d ) )",
    "expected behavior is {b}, {d} and {c} should be true sequentially and don't need to be adjacent.": "N G X N ( ( G b A F(d A c) ) )",
    "expected behavior is {b}, {d} and {c} finally be true simultanously.": "N G X N ( ( G b A d A c ) )"
  },
  "N X X N ( ( N b O d A c ) )": {
    "expected behavior is {b} is false first, or {b} should not be true first, and then {d} or {c} should be true.": "N X X N ((b A (d O c)))",
    "expected behavior is {d} and {c} should be true simultanously, and then {c} should always be true.": "N X X N ((b O (d A G(c))))",
    "expected behavior is {b}, {d} and {c} should sequentially be true, but don't need to be adjacent.": "N X X N (F(b A F(d A F(c))))",
    "expected behavior is {b}, {d} and {c} should finally be true simultanously.": "N X X N (F(b A d A c))",
    "expected behavior is more than one atomic proposition in {{b}, {d}, {c}} should be true.": "N X X N (F(b O d O c))"
  },
  "b A N ( ( f ) O N d ) U E f": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f A N ( (f) O N d ) U E f",
    "expected behavior is to make {f} and {d} be true simultanously.": "b A (f A d) U E f",
    "expected behavior is to make {f} and {d} be true sequentially and don't need to be adjacent.": "b A N ( (f) O N F(d)) U E f",
    "expected behavior is to make {b}, {f} and {d} be true sequentially and don't need to be adjacent.": "b A N ( (f) O N F(F(d))) U E f",
    "expected behavior is {b}, {f} and {d} finally be true simultanously.": "b A f A d U E f",
    "expected behavior is more than one atomic proposition in {{b}, {f}, {d}} should be true.": "b O f O d U E f",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} or {f} should be true.": "b A N ( (f) O N (d O X f)) U E f",
    "expected behavior is {d} and {f} should be true simultanously, and then {f} should always be true.": "b A N ( (f) O N G(d)) U E f",
    "expected behavior is finally {f} should be true, no matter what the values of {b} and {d} are.": "b A N ( (f) O N U f) U E f",
    "expected behavior is {f} should always be true, or {b} and {d} be true, but subsequently {f} should be true.": "G(b A N ( (f) O N U f)) U E f"
  },
  "e U N ( ( f ) U N f ) U E f": {
    "expected behavior is {f} should be true eventually and then {f} should not be true.": "e U N ( ( f ) U N f ) U F f",
    "expected behavior is {e}, {f} should be true eventually and then {f} should not be true.": "G(e U N ( ( f ) U N f )) U F f",
    "expected behavior is {e} and {f} should be true eventually and then {f} should not be true.": "G(e A N ( ( f ) U N f )) U F f",
    "expected behavior is {e} and {f} should be true eventually and then {e} or {f} should not be true.": "G(e A N ( ( f ) U N f )) O F f",
    "expected behavior is {e}, {f} should be true eventually, and then {f} should not be true, but {e} should not be true again.": "G(e U N ( ( f ) U N f )) O F f"
  },
  "N N ( a ) A N d O c A ( c )": {
    "expected behavior is {a} should always be true. Such specification omits {a}.": "G(a) A N d O c A (c)",
    "expected behavior is {a}, {c} and {d} should be true sequentially and don't need to be adjacent.": "N N (a) A F(d A F(c A (c)))",
    "expected behavior is {a}, {c} and {d} should be true simultanously.": "F(G(a) A c A d)",
    "expected behavior is {a}, {c} and {d} should finally be true simultanously.": "F(G(a) A c A d)",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {d}} should be true.": "F(G(a) O c O d)",
    "expected behavior is {d} should be true, or {d} should not be true first, and then {c} or {d} should be true.": "N N (a) A F(d O X(c A (c)))"
  },
  "N N ( c ) U N b O c A ( c )": {
    "expected behavior is {b} should not be true first, and then {b} or {c} should be true.": "F(N c U N b O X(c) A c))",
    "expected behavior is {b} and {c} should be true simultanously, and then {c} should always be true.": "F(N N c U N b A G(c))",
    "expected behavior is {b} shoule be true, and then {c} should be true.": "F(N N c U (b A X(c)) A c)",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "F(N N c U (b A F(c)) A c)",
    "expected behavior is finally {c} should be true, no matter what the values of {a} and {b} are.": "F(N N c U (b U c) A c)"
  },
  "X b O G c O ( E X ( N c ) )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b O G c O ( E X ( N c ) )",
    "expected behavior is to make {c} always be true.": "X b O G (c O ( E X ( N c )))",
    "expected behavior is to make {c} true at least once.": "X b O G F(c O ( E X ( N c )))",
    "expected behavior is {c} should not be true for a certain amount of time.": "X b O G (F c U ( E X ( N c )))",
    "expected behavior is {c} should not be true forever.": "X b O G (F c U ( E X ( F c )))"
  },
  "X b U G a O ( N X ( N c ) )": {
    "expected behavior is to make {b} and {c} be true simultanously.": "X b U G a O ( N X c )",
    "expected behavior is to make {a} and {b} be true simultanously.": "X ( b A a ) U G ( N X ( N c ) )",
    "expected behavior is to make {a}, {b} and {c} be true sequentially and don't need to be adjacent.": "X b U G ( a A F ( N X ( N c ) ) )",
    "expected behavior is to make {b} and {c} eventually be true simultanously.": "X b U G ( a A F ( b A c ) )",
    "expected behavior is to make {a}, {b} and {c} finally be true simultanously.": "X b U G ( a A b A c )"
  },
  "G N d A E ( N ( N f ) ) O a": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O G N d A E ( N ( N f ) )",
    "expected behavior is to make {f} never be true.": "G N d A E ( N ( G f ) ) O a",
    "expected behavior is to make {d} and {f} never be true.": "G ( N d A E ( N ( G f ) ) ) O a",
    "expected behavior is to make {a}, {d} and {f} never be true.": "G ( N d A E ( N ( G f ) ) )",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {f}} should be true.": "F ( N d A E ( N ( G f ) ) ) O a"
  },
  "G N d A E ( N ( N c ) ) U a": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "G(d A E(N(Nc))) U a",
    "expected behavior is {c} and {d} should be true simultanously.": "G(d A c) U a",
    "expected behavior is {c} and {d} should be true sequentially and don't need to be adjacent.": "G(d A F(N(c))) U a",
    "expected behavior is {a}, {c} and {d} should be true sequentially and don't need to be adjacent.": "G(d A F(N(F(c)))) U a",
    "expected behavior is {a}, {c} and {d} finally be true simultanously.": "G(d A c A a)"
  },
  "X G X ( e ) A c U ( ( c ) )": {
    "expected behavior is {e} should not be true. Such specification omits {e}.": "X G X (e) A (c U ((c)))",
    "expected behavior is {e} should be true first.": "F(e A (c U ((c))))",
    "expected behavior is {c} should be true first.": "F(c A (X G X (e)))",
    "expected behavior is {c} should be true, and then {e} should be true.": "F(c A X G X (e))",
    "expected behavior is {c} should always be true, and then {e} should be true.": "F(G(c) A X G X (e))"
  },
  "X ( ( ( e ) ) ) A E N c O f": {
    "P": "E",
    "o": "R",
    "s": "O",
    "i": "R"
  },
  "G ( d ) A X N e U ( N G e )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d A X N e U (N G e)",
    "expected behavior is {e} should be true first. Such specification omits {e}.": "G (d) A X e U (N G e)",
    "expected behavior is {e} should be true finally. Such specification omits {e}.": "G (d) A X N e U G e",
    "expected behavior is {d} and {e} should be true simultanously. Such specification omits {d}.": "G d A X N e U (N G e)",
    "expected behavior is finally {e} should be true, no matter what the values of {d} are.": "G (d) A X N e U F (N G e)"
  },
  "c A ( N G ( E a U d U e ) )": {
    "expected behavior is {c} should always be true. Such specification omits {c}.": "c A ( N G ( E a U d U (e A c) ) )",
    "expected behavior is to make {a}, {d} and {e} be true sequentially and don't need to be adjacent.": "c A ( N G ( E a A F(d A F(e)) ) )",
    "expected behavior is {a}, {d} and {e} finally be true simultanously.": "c A ( N G ( E a A d A e ) )",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {e}} should be true.": "c A ( N G ( E a O d O e ) )",
    "expected behavior is {a}, {d} should be true, and then {e} or {c} should be true.": "c A ( N G ( E a U (d U (e O c)) ) )"
  },
  "c A ( G N ( E a O d U e ) )": {
    "expected behavior is {d} or {e} should be true first. Such specification omits {d} and {e}.": "c A ( G N ( d U e O E a ) )",
    "expected behavior is {a}, {d} and {e} should be true sequentially and don't need to be adjacent.": "c A ( G N ( d U e A F(E a) ) )",
    "expected behavior is to make {d} and {e} be true simultanously.": "c A ( G N ( E a O (d A e) ) )",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {e}} should be true.": "c A ( G N ( E a O (d O e) ) )",
    "expected behavior is finally {a} should be true, no matter what the values of {d} and {e} are.": "c A ( G N ( E a U (d U e) ) )"
  },
  "e A X e U ( N e ) A ( E f )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A X (e U (N e) A (E f))",
    "expected behavior is to make {N e} and {E f} be true simultanously.": "e A X (e U (N e) A f)",
    "expected behavior is to make {e}, {N e} and {E f} be true sequentially and don't need to be adjacent.": "F(e A F(X(e U (N e)) A F(E f)))",
    "expected behavior is {e}, {N e} and {E f} finally be true simultanously.": "F(e A X(e U N e) A E f)",
    "expected behavior is more than one atomic proposition in {{e}, {N e}, {E f}} should be true.": "F(e O X(e U N e) O E f)"
  },
  "e A X e U ( N e ) A ( N d )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A (X (e U (N e)) A (N d))",
    "expected behavior is to make {N e} and {N d} be true simultanously.": "e A X (e U (N e)) A N d",
    "expected behavior is to make {e}, {N e} and {N d} be true sequentially and don't need to be adjacent.": "F(e A F(X (e U (N e)) A F(N d)))",
    "expected behavior is {e}, {N e} and {N d} finally be true simultanously.": "F(e A X (e U (N e)) A N d)",
    "expected behavior is more than one atomic proposition in {{e}, {N e}, {N d}} should be true.": "F(e O X (e U (N e)) O N d)",
    "expected behavior is {N e} shoule be true, or {N e} should not be true first, and then {N e} or {N d} should be true.": "F(e A (X (e U N e) O X (N d)))"
  },
  "E ( e ) U ( N G e O ( e ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "E(e) U (N G (e) O (e))",
    "expected behavior is to make {e} and {N G e} be true simultanously.": "E(e) U (N G (e) A (e))",
    "expected behavior is to make {e} and {N G e} be true sequentially and don't need to be adjacent.": "F(E(e) U (N G (e) O F(e)))",
    "expected behavior is to make {e}, {N G e} and {e} finally be true simultanously.": "F(E(e) A N G (e) A (e))",
    "expected behavior is more than one atomic proposition in {{e}, {N G e}, {e}} should be true.": "F(E(e) O N G (e) O (e))"
  },
  "N ( f ) U ( E G b O ( e ) )": {
    "expected behavior is {f} should be not true first, and then {b} should be true. Such specification omits {f}.": "N(f) U (E G (b O f))",
    "expected behavior is {b} should be true, or {f} should not be true first, and then {b} or {e} should be true.": "N(f) U (E G (b O (e O f)))",
    "expected behavior is to make {b} and {e} be true simultanously.": "N(f) U (E G (b A e))",
    "expected behavior is to make {f}, {b} and {e} be true sequentially and don't need to be adjacent.": "N(f) U (E G (b A F(e)))",
    "expected behavior is more than one atomic proposition in {{f}, {b}, {e}} should be true.": "N(f) U (E G (b O e))"
  },
  "G ( f ) A c A ( N e ) O E d": {
    "expected behavior is {f} should always be true. Such specification omits {f}.": "G(f) A c A (N e) O E d",
    "expected behavior is {f}, {e} and {d} should be true simultanously.": "G(f A (N e) A d)",
    "expected behavior is {d} should always be true, or {f},{c} and {e} be true, but subsequently {d} should be true.": "G(f A c A (N e) U d)",
    "expected behavior is more than one atomic proposition in {{f}, {c}, {e}, {d}} should be true.": "G(f O c O (N e) O d)",
    "expected behavior is finally {d} should be true, no matter what the values of {f}, {c} and {e} are.": "G(f A c A (N e) U d)"
  },
  "G ( f ) A c U ( N e ) O G a": {
    "expected behavior is {f}, {e} and {a} should be true simultaneously.": "F(f A e A a)",
    "expected behavior is to make {f}, {e} and {a} be true sequentially and don't need to be adjacent.": "F(f A F(e A F(a)))",
    "expected behavior is to make {f}, {e} and {a} be true sequentially and need to be adjacent.": "F(f A e A G(a))",
    "expected behavior is {c} should be true first, or {c} should not be true first, and then {e} or {a} should be true.": "F(c U (N e O G(a)))",
    "expected behavior is finally {a} should be true, no matter what the values of {f} and {e} are.": "F(G(f) A c U (N e) U a)"
  },
  "X ( ( e ) O X X ( a ) A X e )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e O X X (a) A X e",
    "expected behavior is to make {a} and {e} be true simultanously.": "X((e O a) A X e)",
    "expected behavior is to make {a} and {e} be true sequentially and don't need to be adjacent.": "X(e O X X(a) A F(e))",
    "expected behavior is to make {e}, {a} and {e} be true sequentially and don't need to be adjacent.": "X(e A F(X X(a) A F(e)))",
    "expected behavior is more than one atomic proposition in {{e}, {a}} should be true.": "X((e O a) O e)"
  },
  "N ( ( a ) O X X ( a ) A E e )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "(a) O X X (a) A E e",
    "expected behavior is to make {a} be true again after a very long time.": "N((a) O X X (a))",
    "expected behavior is to make {a} be true again after a very short time.": "N((a) U X X (a))",
    "expected behavior is to make {a} be true after a very long time, and then {e} should be true.": "N((a) O X X (a) A e)",
    "expected behavior is to make {a} be true again, and then {e} should always be true.": "N((a) O X X (a) A G(e))"
  },
  "( X ( b U ( a ) U f A N b ) )": {
    "expected behavior is to make {a} and {b} be true simultanously.": "( X ( b A ( a ) U f A N b ) )",
    "expected behavior is to make {a} and {b} be true sequentially but don't need to be adjacent.": "( X ( b U F(a) U f A N b ) )",
    "expected behavior is {a} and {f} should be true simultanously, and then {b} should always be true.": "( X ( b U ( a A f ) A N b ) )",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {f}} should be true.": "( X ( b U ( a O f ) A N b ) )",
    "expected behavior is finally {b} should be true, no matter what the values of {a} and {f} are.": "( X ( b U ( a U f ) A G b ) )"
  },
  "( N ( b A ( f ) U f O N b ) )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f O N ( b A ( f ) U N b )",
    "expected behavior is to make {b} and {f} be true simultanously.": "( N ( b A f ) U f O N b )",
    "expected behavior is to make {b} and {f} be true sequentially and don't need to be adjacent.": "( N ( b A F(f) ) U f O N b )",
    "expected behavior is to make {b}, {f} and {f} be true sequentially and don't need to be adjacent.": "( N ( b A F(f) ) U F(f) O N b )",
    "expected behavior is {b}, {f} and {f} finally be true simultanously.": "( N ( b A f ) U f A N b )"
  },
  "( X ( b O E ( X f ) U E a ) )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (b O E(Xf) U Ea)",
    "expected behavior is to make {b} and {f} be true simultanously.": "(X(b A E(Xf)) U Ea)",
    "expected behavior is to make {b}, {f} and {a} be true sequentially and don't need to be adjacent.": "(X(b O E(Xf)) A Ea)",
    "expected behavior is to make {b}, {f} and {a} finally be true simultanously.": "(X(b A E(Xf) A Ea))",
    "expected behavior is more than one atomic proposition in {{b}, {f}, {a}} should be true.": "(X(b O E(Xf) O Ea))"
  },
  "( X ( b A N ( X f ) U E a ) )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (b A N(X f))",
    "expected behavior is to make {b} and {f} be true simultanously.": "(X (b A f) U E a)",
    "expected behavior is to make {b} and {f} be true sequentially and don't need to be adjacent.": "(X (b A F(X f)) U E a)",
    "expected behavior is to make {a}, {b} and {f} be true sequentially and don't need to be adjacent.": "(X (b A F(X f)) A F(E a))",
    "expected behavior is {a}, {b} and {f} finally be true simultanously.": "F(a A b A F(X f))"
  },
  "E N ( ( ( a ) ) A c U a ) A e": {
    "expected behavior is to make {a}, {c} and {e} be true sequentially and don't need to be adjacent.": "E N ( ( (a) ) A F(c U F(a)) A e)",
    "expected behavior is {a} should be true first, and then {c} or {e} should be true.": "E N ( ( (a) ) A (c O e) U a )",
    "expected behavior is {a}, {c} and {e} finally be true simultanously.": "E N ( ( (a) ) A F(a U c U e))",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {e}} should be true.": "E N ( ( (a) ) A (c O e O a) )",
    "expected behavior is {c} should be true, or {a} and {e} should be true, but subsequently {c} should be true.": "E N ( ( (a) ) A (c U (a A e)) )"
  },
  "N E N ( N c ) A ( e ) U d U f": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "N E N (c) A (e) U d U f",
    "expected behavior is to make {e} and {d} be true simultanously.": "N E N (N c) A (e A d) U f",
    "expected behavior is to make {e}, {d} and {f} be true sequentially and don't need to be adjacent.": "N E N (N c) A (e A F(d A F(f)))",
    "expected behavior is to make {e}, {d} and {f} finally be true simultanously.": "N E N (N c) A (e A d A f)",
    "expected behavior is more than one atomic proposition in {{e}, {d}, {f}} should be true.": "N E N (N c) A (e O d O f)"
  },
  "N E ( c ) A ( f ) A d U f": {
    "expected behavior is to make {d} and {f} be true simultaneously.": "N E ( c ) A ( f ) A (d A f)",
    "expected behavior is {f} should be true finally.": "N E ( c ) A ( f ) A d U G(f)",
    "expected behavior is {c}, {d} and {f} should be true sequentially and don't need to be adjacent.": "N E ( c ) A F(d A F(f))",
    "expected behavior is {c}, {d} and {f} should be true simultanously.": "N E ( c ) A (d A f)",
    "expected behavior is to make {c} and {f} be true sequentially and don't need to be adjacent.": "N E F(c) A F(f)"
  },
  "N E G b U N N ( ( a ) ) U N f": {
    "expected behavior is {b} should be false first. Such specification omits {b}.": "N E G (b U N N ( (a) ) U N f)",
    "expected behavior is {f} should be true finally. Such specification omits {f}.": "N E G b U N N ( (a) ) U N F(f)",
    "expected behavior is {a} should be true first. Such specification omits {a}.": "N E G b U N N (F(a)) U N f",
    "expected behavior is {a} and {f} should be true sequentially and don't need to be adjacent.": "N E G b U N N (F(a)) U N F(f)",
    "expected behavior is {a} and {f} should be true simultanously. Such specification omits {f}.": "N E G b U N N ( (a) O f) U N f"
  },
  "N E G b U N N ( ( a ) ) U f": {
    "expected behavior is {b} should be false until {a} and {f} become true. Such specification omits {f}.": "N E G b U N N ( ( a ) ) U f U f",
    "expected behavior is {a} should be false until {b} and {f} become true. Such specification omits {b}.": "N E G b U N N ( ( a ) ) U f U b",
    "expected behavior is {f} should be false until {a} and {b} become true. Such specification omits {a}.": "N E G b U N N ( ( a ) ) U f U a",
    "expected behavior is {b} should be true first. Such specification omits {b}.": "N E G b U N N ( ( a ) ) U f U b",
    "expected behavior is to make {a}, {b} and {f} be true simultanously.": "G(a A b A f)"
  },
  "N X N ( ( f ) ) A a U ( G f )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (N X N ( ( f ) ) A G f )",
    "expected behavior is to make {f} and {a} be true simultanously.": "N X N ( ( f ) ) A F(a U G f )",
    "expected behavior is to make {f} and {a} be true sequentially and don't need to be adjacent.": "N X N ( ( f ) ) A F(a A G f )",
    "expected behavior is to make {f}, {a} and {G f} finally be true simultanously.": "F(N X N ( ( f ) ) A a A G f)",
    "expected behavior is more than one atomic proposition in {{f}, {a}, {G f}} should be true.": "F(N X N ( ( f ) ) O a O G f)"
  },
  "X N N ( E d ) A N a O ( E b )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a O (N (E d) A N (E b))",
    "expected behavior is {d} should be true first, and then {a} or {b} should be true.": "X N N (E d) A (a O (E b))",
    "expected behavior is {d} should be true first, and then {a} and {b} should be true simultanously.": "X N N (E d) A (a A (E b))",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {d}} should be true.": "X N N (E d) A (a O b O (E d))",
    "expected behavior is {d} should be true first, and then {a} and {b} should be true sequentially and don't need to be adjacent.": "X N N (E d) A (a A F(E b))"
  },
  "X N ( E d ) A N a O ( G b )": {
    "expected behavior is {a} and {b} should be true simultanously, but not {d}.": "X N (E d) A (N a A G b)",
    "expected behavior is {a} and {b} should be true sequentially.": "X N (E d) A (N a U G b)",
    "expected behavior is {a} should be true first, then {b} or {d} should be true.": "X N (E (d U b)) A N a",
    "expected behavior is {a}, {b} and {d} should be true sequentially and don't need to be adjacent.": "X N (E d) A N (a A F(G b))",
    "expected behavior is {a}, {b} and {d} finally be true simultanously.": "X N (E d) A F(N a A G b)"
  },
  "E ( ( c ) ) U ( e ) U c O ( a )": {
    "expected behavior is {e} should be true until {c} is true. Such specification omits {e}.": "E ( ( c ) ) U ( e ) U (c O ( a ))",
    "expected behavior is {e} should be true until {a} is true. Such specification omits {e}.": "E ( ( c ) ) U ( e ) U (c O ( a ))",
    "expected behavior is {c} should be true first. Such specification omits {c}.": "E ( ( c ) ) U ( e ) U (c A ( a ))",
    "expected behavior is {e} and {c} should be true simultanously. Such specification omits {e}.": "F(E ( ( c ) ) A ( e ) A c O ( a ))",
    "expected behavior is {e} and {a} should be true simultanously. Such specification omits {e}.": "F(E ( ( c ) ) A ( e ) A c A ( a ))"
  },
  "N ( ( f ) ) U ( e ) U c O ( a )": {
    "expected behavior is to make {f}, {e} and {c} be true sequentially and don't need to be adjacent.": "N(F(f) U e U F(c) O a)",
    "expected behavior is to make {e} and {c} be true simultanously.": "N((f) U (e A c) O a)",
    "expected behavior is {f}, {e} and {c} finally be true simultanously.": "N(F(f A e A c) O a)",
    "expected behavior is more than one atomic proposition in {{f}, {e}, {c}} should be true.": "N((f O e O c) U a)",
    "expected behavior is {e} shoule be true, or {e} should not be true first, and then {e} or {c} should be true.": "N((f) U (e O X(c)) O a)"
  },
  "( N ( b O f O c ) ) O E E ( b )": {
    "expected behavior is {b}, {f}, {c} should be true simultanously.": "F(b A f A c)",
    "expected behavior is {b}, {f} and {c} should be true sequentially and don't need to be adjacent.": "F(b A F(f A F(c)))",
    "expected behavior is {b} should be true, then {f} or {c} should be true.": "F((b A f) O (b A c))",
    "expected behavior is to make {b}, {f}, {c} be true simultanously, and then {b} should always be true.": "F(b A f A G(c))",
    "expected behavior is to make {b}, {f}, {c} be true sequentially, and then {b} should always be true.": "G(b A F(f A F(c)))"
  },
  "( N ( b O f O d ) ) U N E ( b )": {
    "expected behavior is {b}, {f} and {d} should be true simultanously.": "G(b A f A d)",
    "expected behavior is {f} and {d} should be true sequentially and don't need to be adjacent.": "F(b U (f A X d))",
    "expected behavior is {b}, {f} and {d} should be true sequentially and don't need to be adjacent.": "F(b A F(f A F(d)))",
    "expected behavior is {b}, {f} and {d} finally be true simultanously.": "F(b A f A d)",
    "expected behavior is more than one atomic proposition in {{b}, {f}, {d}} should be true.": "F(b O f O d)"
  },
  "( b ) U ( N d A f A N ( N d ) )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U (N d A f A N (N d))",
    "expected behavior is to make {d} and {f} be true simultanously.": "(b) U (d A f)",
    "expected behavior is to make {d} and {f} be true sequentially and don't need to be adjacent.": "(b) U (d A F (f))",
    "expected behavior is to make {b}, {d} and {f} be true sequentially and don't need to be adjacent.": "F(b A F(d A F(f)))",
    "expected behavior is {b}, {d} and {f} finally be true simultanously.": "F(b A d A f)"
  },
  "( b ) U ( N d A f A N ( d ) )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b U ( N d A f A N ( d ) )",
    "expected behavior is to make {d} and {f} be true simultanously.": "( b ) U ( d A f A N ( d ) )",
    "expected behavior is to make {d} and {f} be true sequentially and don't need to be adjacent.": "( b ) U ( N d A f A F ( d ) )",
    "expected behavior is to make {b}, {d} and {f} be true sequentially and don't need to be adjacent.": "F( b A F ( N d A f A N ( d ) ) )",
    "expected behavior is more than one atomic proposition in {{b}, {d}, {f}} should be true.": "F( b O d O f)"
  },
  "N ( ( e ) ) A ( N ( E d ) U d )": {
    "expected behavior is {e} and {d} should be true simultanously.": "F(e A N(E d) U d)",
    "expected behavior is {e} and {d} should be true sequentially and don't need to be adjacent.": "F(e A F(N(E d) U d))",
    "expected behavior is to make {e}, {d} finally be true simultanously.": "F(e A N(E d) A d)",
    "expected behavior is {e}, {d} finally be true, no matter what the values of {e} and {d} are.": "G(e A N(E d) U d)",
    "expected behavior is {e}, {d} finally be true simultanously, and then {d} should always be true.": "F(e A N(E d) A G(d))"
  },
  "( E ( ( a ) ) U E a A X d A a )": {
    "expected behavior is {d} should be true, and then {a} should be true. Such specification omits {d}.": "(E((a) U E a A (d A a))",
    "expected behavior is {a} should be true, and then {d} should be true. Such specification omits {d}.": "(E((a) U (E a A X d)) A a)",
    "expected behavior is {a} should be true first and then {d} should be true, but {a} and {d} should not be adjacent.": "(E((a) U (E a A F(d))) A a)",
    "expected behavior is {a} and {d} should be true simultanously.": "(E((a) U (E a A d)) A a)",
    "expected behavior is {a}, {d} and finally {a} should be true.": "(E((a) U E a A d)) U a"
  },
  "( N ( ( d ) ) U N a A N d U f )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U (N (a A N d U f))",
    "expected behavior is to make {a}, {d} and {f} be true simultanously.": "N (d U (a A N d U f))",
    "expected behavior is to make {a}, {d} and {f} be true sequentially and don't need to be adjacent.": "N (d U (a A F(N d U f)))",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {f}} should be true.": "N (d U (a O N d O f))",
    "expected behavior is {d} should not be true first, and then {a} or {f} should be true.": "N (d U (a O X(N d U f)))"
  },
  "X ( ( ( E f ) ) ) U ( E E X f )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U (E E X f)",
    "expected behavior is to make {f} be true sequentially and don't need to be adjacent.": "X ( ( ( E f ) ) ) U ( E E F(f))",
    "expected behavior is to make {f} and {E} be true simultanously.": "X ( ( ( f ) ) ) U ( E E X f)",
    "expected behavior is {f} and {E} finally be true simultanously.": "F(X ( ( ( E f ) ) ) A E E X f)",
    "expected behavior is more than one atomic proposition in {{f}, {E}} should be true.": "F(X ( ( ( E f ) ) ) O E E X f)",
    "expected behavior is {E} shoule be true, or {E} should not be true first, and then {E} or {f} should be true.": "X ( ( ( E f ) ) ) U ( E O X(f))",
    "expected behavior is {E} and {f} should be true simultanously, and then {f} should always be true.": "X ( ( ( E f ) ) ) U ( E A G(f))",
    "expected behavior is finally {f} should be true, no matter what the values of {E} are.": "X ( ( ( E f ) ) ) U ( E U f)",
    "expected behavior is {f} should always be true, or {E} and {f} be true, but subsequently {f} should be true.": "G(X ( ( ( E f ) ) ) U (E U f))"
  },
  "G ( ( ( E f ) ) ) U ( E N N f )": {
    "expected behavior is {f} should be true first and then {f} should always be true.": "F(f U (E N N f))",
    "expected behavior is {f} should be true first and then {f} should be true eventually.": "F(f A (E N N f))",
    "expected behavior is {f} should be true eventually, no matter what the values of {f} are.": "G(E N N f)",
    "expected behavior is {f} should be true eventually, after {f} is true.": "F(G(f) A (E N N f))",
    "expected behavior is {f} should be true eventually, and then {f} should always be true.": "F(G(f) U (E N N f))",
    "expected behavior is more than one atomic proposition in {{f}} should be true.": "G(E N N f O E N f)"
  },
  "f O N N d O G ( N b ) O ( N b )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "f O N N d O G(b) O (N b)",
    "expected behavior is {b} should be true at least once. Such specification omits {b}.": "f O N N d O G(b) O b",
    "expected behavior is {d} should be true first. Such specification omits {d}.": "f O N N d O G(N b) O (N b)",
    "expected behavior is {f} should be true at least once. Such specification omits {f}.": "f O G(N b) O (N b)",
    "expected behavior is finally {b} should be true, no matter what the values of {f} and {d} are.": "f U d U b"
  },
  "e U N d O G ( b ) O ( N d )": {
    "expected behavior is to make {e}, {d} and {b} be true and they don't need to be adjacent.": "F(e U N d A G(b) A N d)",
    "expected behavior is to make {e}, {d} true first, then {b} should be true, and {d} should always be true.": "F(e U N d A G(b) O N d)",
    "expected behavior is to make {e} and {d} be true, then {e} or {d} should be true, and finally {b} should be true.": "F(e U N d O X(G(b) U N d))",
    "expected behavior is finally {b} should be true, no matter what the values of {e} and {d} are.": "F(e U N d U G(b))",
    "expected behavior is more than one atomic proposition in {{e}, {d}, {b}} should be true.": "F(e O N d O G (b))"
  },
  "( a A b O X ( N ( a ) U N e ) )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e A ( a A b O X ( N ( a ) U N e ) )",
    "expected behavior is {a} and {b} should be true simultanously.": "(e A a) A b O X ( N ( a ) U N e )",
    "expected behavior is {a} and {b} should be true sequentially and don't need to be adjacent.": "e A ( a A F(b O X ( N ( a ) U N e )))",
    "expected behavior is {a}, {b} and {e} finally be true simultanously.": "F(e A ( a A b O X ( N ( a ) U N e )))",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {e}} should be true.": "F(e O a O b O X ( N ( a ) U N e ))",
    "expected behavior is {a}, {b} and {e} should be true sequentially and don't need to be adjacent.": "G(e A ( a A b O X ( N ( a ) U N e )))"
  },
  "( a A b U E ( N ( a ) U c ) )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a A b U E ( N ( a ) U c )",
    "expected behavior is to make {a} and {b} be true simultanously.": "F(a A b U E ( N ( a ) U c ))",
    "expected behavior is to make {a}, {b} and {c} be true sequentially and don't need to be adjacent.": "F(a A b A E ( N ( a ) U c ) )",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be true.": "F(a O b O E ( N ( a ) U c ))",
    "expected behavior is {b} shoule be true, or {b} should not be true first, and then {b} or {c} should be true.": "F( a A b U ( E ( N ( a ) O c ) ))"
  },
  "( N ( ( X d A e A N f ) A b ) )": {
    "expected behavior is {b} should be true first. Such specification omits {b}.": "b A ( N ( ( X d A e A N f ) ) )",
    "expected behavior is to make {d}, {e} and {f} be true simultanously.": "( N ( ( d A e A f ) A b ) )",
    "expected behavior is to make {d}, {e} and {f} be true sequentially and don't need to be adjacent.": "( N ( ( X d A F(e A N f) ) A b ) )",
    "expected behavior is to make {d}, {e} and {f} finally be true simultanously.": "( N ( ( d A e A f ) U b ) )",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {f}} should be true.": "( N ( ( d O e O f ) A b ) )"
  },
  "( N ( ( X d A e A f ) U b ) )": {
    "expected behavior is {d}, {e} and {f} should be true simultanously first. Such specification omits {d}.": "N ( (d A e A f ) U b )",
    "expected behavior is to make {d}, {e} and {f} be true sequentially and don't need to be adjacent.": "N( (Xd A Xe A Xf) U b)",
    "expected behavior is to make {d}, {e} and {f} be true sequentially and need to be adjacent.": "N( (Xd AXe AXf) U b)",
    "expected behavior is {b} should be true, or {b} should not be true first, and then {d}, {e} or {f} should be true.": "N ( ( X d O (e A f) ) U b )",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {f}} should be true.": "N ( ( X d O (e V f) ) U b )"
  },
  "( X ( E ( a ) U X c U d A d ) )": {
    "expected behavior is {a} should be true first. Such specification omits {a}.": "a U (X c U d A d)",
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U (X (E(a) U X c U d))",
    "expected behavior is {c} should be true before {d}. Such specification omits the ordering condition.": "X (E(a) U (X c A d)) U d",
    "expected behavior is {c} should be true first and then {d} should be true. Such specification omits the ordering condition.": "X (E(a) U (X c U d)) A d",
    "expected behavior is {a}, {c}, and {d} should be true sequentially and don't need to be adjacent.": "F(a A F(X c A F(d)))"
  },
  "( N ( E ( c ) U X c U d A b ) )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "N((E(c) U X(c) U d) A b)",
    "expected behavior is to make {b}, {c} and {d} be true simultanously.": "N((E(c) U (X(c) A b A d)))",
    "expected behavior is to make {b}, {c} and {d} be true sequentially and don't need to be adjacent.": "N((E(c) U (X(c) A F(b A F(d)))))",
    "expected behavior is {b}, {c} and {d} finally be true simultanously.": "N((E(c) U F(X(c) A b A d)))",
    "expected behavior is more than one atomic proposition in {{b}, {c}, {d}} should be true.": "N((E(c) U (X(c) O b O d)))"
  },
  "E N ( a ) O ( a ) U ( G a ) A d": {
    "expected behavior is {a} should be true until {d} be true. Such specification omits {a}.": "E N ( a ) U ( a ) O ( G a ) A d",
    "expected behavior is {a} should be true until {d} be true, then {a} should not be true.": "E N ( a ) U ( a ) O ( G a ) A X d",
    "expected behavior is {a} should be true and then {d} should be true. Such specification omits {a}.": "E N ( a ) U ( a ) O ( G a ) A d",
    "expected behavior is {a} should not be true and then {d} should be true.": "E N ( a ) U ( X a ) O ( G a ) A d",
    "expected behavior is both {a} and {d} should eventually be true.": "F(E N ( a ) U ( G a ) O ( G a ) A d)"
  },
  "E N ( e ) U ( c ) U ( G a ) A d": {
    "expected behavior is {e}, {c}, {G a}, {d} should be true sequentially and don't need to be adjacent.": "E N (e A F(c A F(G a A d)))",
    "expected behavior is {e}, {c}, {G a}, {d} should be true simultanously.": "E N (e A c A G a A d)",
    "expected behavior is {e} should be true first and then {c} or {G a} should be true.": "E N (e) U (c O G a) A d",
    "expected behavior is {e}, {c}, {G a}, {d} should be true sequentially and adjacent.": "E N (e A c A G a A d)",
    "expected behavior is {d} should always be true, or {e}, {c} and {G a} be true, but subsequently {d} should be true.": "G(E N (e U c U G a) A d)"
  },
  "( d ) U ( E N c ) A E f A ( f )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U (E N c) A E f A (f)",
    "expected behavior is {c} and {f} should be true simultanously.": "(d) U (E N c A E f) A (f)",
    "expected behavior is to make {d}, {c} and {f} be true sequentially and don't need to be adjacent.": "(d) U (E N F(c A E f)) A (f)",
    "expected behavior is to make {d}, {c} and {f} finally be true simultanously.": "(d A E N c A E f) A (f)",
    "expected behavior is more than one atomic proposition in {{d}, {c}, {f}} should be true.": "(d O E N c O E f) A (f)"
  },
  "N ( ( N N X N e A b U ( E b ) ) )": {
    "expected behavior is {b} should be true first, and then {e} and {b} should be true simutanously.": "N ( ( N N X N e A b U b ) )",
    "expected behavior is to make {e} and {b} be true sequentially and don't need to be adjacent.": "N ( ( N N X N e A F(b U b) ) )",
    "expected behavior is to make {N e}, {b} and {b} be true simultanously.": "N ( ( N N X (N e A b) U b ) )",
    "expected behavior is more than one atomic proposition in {{N e}, {b}} should be true.": "N ( ( N N X (N e O b) U b ) )",
    "expected behavior is {e} should be true, or {e} should not be true first, and then {e} or {b} should be true.": "N ( ( N N X (N e O X(b)) U b ) )"
  },
  "N ( ( N N X c A a U ( E b ) ) )": {
    "expected behavior is {a} should be true first, and then {b} and {c} should be true. Such specification omits {a}.": "N ( ( N N X c A a U ( E b ) ) )",
    "expected behavior is to make {b} and {c} be true simultanously.": "N ( ( N N (c A b) A a U ( E b ) ) )",
    "expected behavior is to make {b} and {c} be true sequentially and don't need to be adjacent.": "N ( ( N N X (c A b) A a U ( E b ) ) )",
    "expected behavior is to make {a}, {b} and {c} be true sequentially and don't need to be adjacent.": "N ( ( N N X (c A b) A (a U ( E b )) ) )",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be true.": "N ( ( N N X (c O b O a) A (a U ( E b )) ) )"
  },
  "( N e A ( N d U N N c A ( f ) ) )": {
    "expected behavior is {e}, {d} and {c} should be true sequentially with {c} cannot be true simultaneously with {d}.": "( N e A ( N d U N (N c O ( f ) ) ) )",
    "expected behavior is to make {f} true first. Such specification omits {f}.": "( N e A ( N d U N N c A ( f ) ) )",
    "expected behavior is {e}, {d} and {c} should finally be true simultanously.": "F(N e A ( N d U N N c A ( f ) ))",
    "expected behavior is to make {d} or {f} be true first, and then {d} or {c} should be true.": "( N e A ( N d U (N f O N c) A ( f ) ) )",
    "expected behavior is to make {c} be true, or {d} should not be true first, and then either {d} or {c} should be true.": "( N e A ( N d O X(N c) A ( f ) ) )"
  },
  "( N a A ( N e U X a U ( f ) ) )": {
    "expected behavior is {a} should be false and {e} should be true. Such specification omits {a}.": "N (a A (N e U X (a U (f))))",
    "expected behavior is to make {a} and {e} true simultanously.": "(N a A (N e A X a U (f)))",
    "expected behavior is to make {a} and {e} true sequentially and don't need to be adjacent.": "(N a A (N e U X a A F(f)))",
    "expected behavior is to make {e} and {f} true sequentially and don't need to be adjacent.": "(N a A (N e U X a A F(f)))",
    "expected behavior is to make {a}, {e} and {f} finally be true simultanously.": "(N a A (N e A X (a A f)))"
  },
  "N c U ( ( N a O G e ) ) A ( N b )": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c U ((N a O G e) A (N b))",
    "expected behavior is {a}, {b}, and {c} should be true simultanously.": "N c U ( ( a O G e ) ) A ( b )",
    "expected behavior is to make {a}, {e} and {b} be true sequentially and don't need to be adjacent.": "N c U ( ( N a A G F(e) ) A ( N b ) )",
    "expected behavior is {a}, {b} and {e} finally be true simultanously.": "N c U ( ( a A b A e ) )",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {e}} should be true.": "N c U ( ( N a O O G e ) ) A ( N b )"
  },
  "N c U ( ( N a O G e ) ) A ( b )": {
    "expected behavior is {b} should be true first and then {a} and {e} should be true simultanously. Such specification omits {b}.": "b A N c U ( ( N a O G e ) )",
    "expected behavior is {a} and {e} should be true sequentially and don't need to be adjacent.": "N c U ( ( N a A G e ) ) A ( b )",
    "expected behavior is {a}, {e} and {c} should be true sequentially and don't need to be adjacent.": "N c A N (a A G e ) A ( b )",
    "expected behavior is {c} should be true, or {a} should not be true first, and then {a} or {e} should be true.": "N c U ( ( N a O X e ) ) A ( b )",
    "expected behavior is {a} and {e} should be true simultanously, and then {a} should always be true.": "N c U ( ( N a A G F e ) ) A ( b )"
  },
  "d A N ( E ( e A ( d ) ) U G N c )": {
    "expected behavior is {c} should be true eventually, but {c} may not be true at all.": "F (d A N ( E ( e A ( d ) ) U G c))",
    "expected behavior is {c} should be true eventually, and {e} should be true eventually after {d} becomes true.": "F (d A N ( E ( d U ( e A G c)) ))",
    "expected behavior is {d} should be true, and then {e} and {c} should be true simultanously.": "F (d A N ( E ( d A ( e A c)) ))",
    "expected behavior is {d}, {e} and {c} should be true sequentially and don't need to be adjacent.": "F (d A N ( E ( d A F (e A F c)) ))",
    "expected behavior is {e} should not be true until {d} becomes true, and {e}, {c} should be true simultanously.": "F (d A N ( E ( d A ( e A G c)) ))"
  },
  "d O N ( E ( e A ( d ) ) U G c )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "e O N (E(e A (d)) U G(c))",
    "expected behavior is {d} should be true, or {d} should not be true first, and then {d} or {c} should be true.": "d O N (E(e A (d)) O G(c))",
    "expected behavior is {d}, {e} and {c} should be true sequentially and don't need to be adjacent.": "d O N (E(e A F(d)) U G(c))",
    "expected behavior is more than one atomic proposition in {{d}, {e}, {c}} should be true.": "d O N (E(e O d) U G(c))",
    "expected behavior is finally {c} should be true, no matter what the values of {d} and {e} are.": "d O N (E(e A d) U c)"
  },
  "X N ( G ( e U N ( d ) ) O d U a )": {
    "expected behavior is {e} should be true first. Such specification omits {e}.": "X N ( G ( e U N ( d ) ) O d U a )",
    "expected behavior is to make {e} and {d} be true simultanously.": "X N ( G ( e A N ( d ) ) O d U a )",
    "expected behavior is to make {d} and {a} be true sequentially and don't need to be adjacent.": "X N ( G ( e U N ( d ) ) O d A Xa )",
    "expected behavior is to make {e}, {d} and {a} be true sequentially and don't need to be adjacent.": "X N ( G ( e A F(d A Xa) ) )",
    "expected behavior is {e}, {d} and {a} finally be true simultanously.": "X N ( G ( e A d A a) )"
  },
  "X ( N ( e U ( d ) ) O d U a )": {
    "expected behavior is {a}, {d} and {e} should be true sequentially and don't need to be adjacent.": "X ( N ( e U ( d ) ) O (d A F(a)) )",
    "expected behavior is {a}, {d} and {e} should be true simultanously.": "X ( N ( e A d ) O (d U a) )",
    "expected behavior is {a} should be true first, and then {d} or {e} should be true.": "X ( N ( e O X(d) ) O (d U a) )",
    "expected behavior is {e} should be true, or {e} should not be true first, and then {d} or {a} should be true.": "X ( N ( e U ( d O X(a) ) ) O d U a )",
    "expected behavior is finally {a} should be true, no matter what the values of {d} and {e} are.": "X ( N ( e U ( d ) ) O (d A U(a)) )"
  },
  "d U ( d ) U E ( ( ( G c ) ) ) A f": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U (d) U E(((Gc))) A f",
    "expected behavior is {d} and {c} should be true simultanously.": "d U (d A Gc) U Ef",
    "expected behavior is to make {d},{c} and {f} be true sequentially and don't need to be adjacent.": "F(d A F(Gc A F(f)))",
    "expected behavior is {d}, {c} and {f} finally be true simultanously.": "F(d A Gc A f)",
    "expected behavior is more than one atomic proposition in {{d}, {c}, {f}} should be true.": "F(d O Gc O f)"
  },
  "c A ( e ) U E ( ( ( N c ) ) ) U f": {
    "expected behavior is {c} should be true first. Such specification omits {c}.": "c A (e) U E(((N c))) U f",
    "expected behavior is {e} should be true first, then {c} should not be true.": "c A (e U E(N c)) U f",
    "expected behavior is {e} should be true first, then {c} should not be true and {f} should be true.": "c A (e U (E(N c) U f))",
    "expected behavior is {e} and {f} should be true simultanously.": "c A (e A f) U E(((N c)))",
    "expected behavior is {e}, {c} and {f} should be true sequentially and don't need to be adjacent.": "F(c A (e A F(E(N c) A f)))"
  },
  "N E ( ( f ) ) O c O ( ( N a U c ) )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "f U (N a U c) O c",
    "expected behavior is to make {a} and {c} be true sequentially and don't need to be adjacent.": "N E (f) O c O (N ( a A F(c)) )",
    "expected behavior is {a}, {c} and {f} finally be true simultanously.": "F(a A c A f)",
    "expected behavior is more than one atomic proposition in {{a}, {c}, {f}} should be true.": "F(a O c O f)",
    "expected behavior is {a}, {c} should be true, or {a} should not be true first, and then {a} or {c} should be true.": "F(f U (N (a O X(c))))"
  },
  "N N ( ( f ) ) O c O ( ( N a U b ) )": {
    "expected behavior is {f} should be true first. Such specification omits {f}.": "F(f O c O (N a U b))",
    "expected behavior is to make {a}, {b} and {c} be true simultanously.": "F(f O (a A b A c))",
    "expected behavior is to make {a}, {b} and {c} be true sequentially and don't need to be adjacent.": "F(f O (a A F(b A F(c))))",
    "expected behavior is {a}, {b} and {c} finally be true simultanously.": "F(f O (a A b A c))",
    "expected behavior is more than one atomic proposition in {{a}, {b}, {c}} should be true.": "F(f O (a O b O c))"
  },
  "E G ( ( d ) U X ( N a ) ) O N ( G d )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "d U X (N a) O N (G d)",
    "expected behavior is to make {a} and {d} be true simultanously.": "E G (d A X (N a)) O N (G d)",
    "expected behavior is to make {a} and {d} be true sequentially and don't need to be adjacent.": "E G (d U X (N F(a))) O N (G d)",
    "expected behavior is to make {a}, {d} and {G d} finally be true simultanously.": "E G (d A (N a) A (G d))",
    "expected behavior is more than one atomic proposition in {{a}, {d}, {G d}} should be true.": "E G ((d O N a) O N (G d))"
  },
  "E N ( ( c ) A X ( f ) ) U N ( G d )": {
    "expected behavior is {c} should be true first, and then {f} should be true. Such specification omits {c}.": "(c) A X (f) U N (G d)",
    "expected behavior is {f} should be true after {c}, but {f} may be true before {c}.": "E N ((c) A X (f)) U N (G d)",
    "expected behavior is {d} should always be true.": "E N ((c) A X (f)) U G d",
    "expected behavior is {c} and {f} should be true at the same time.": "E N ((c A f)) U N (G d)",
    "expected behavior is {d} should be true after {c} and {f}.": "E N ((c) A X (f)) U (N G d)"
  },
  "G ( ( d ) ) O ( ( f ) ) A N ( G N X d )": {
    "expected behavior is {d} should be true first. Such specification omits {d}.": "G(d) O ((f) A N(G N X(d)))",
    "expected behavior is {f} should be true, or {d} should not be true first, and then {f} or {d} should be true.": "G(d) O (f O X(d))",
    "expected behavior is more than one atomic proposition in {{d}, {f}} should be true.": "G(d) O (f A N(G N d))",
    "expected behavior is finally {d} should be true, no matter what the values of {f} are.": "G(d) U (f U N(G N X(d)))",
    "expected behavior is {d} and {f} should be true simultanously, and then {d} should always be true.": "G(d A f A N(G N X(d)))"
  },
  "G ( ( d ) ) O ( ( f ) ) A N ( G N G d )": {
    "expected behavior is to make {d} and {f} be true simultanously.": "G ( ( d ) ) A ( ( f ) ) A N ( G N G d )",
    "expected behavior is to make {d} and {f} be true sequentially and don't need to be adjacent.": "G ( ( d ) ) O ( ( f ) ) A N ( G N G F(d))",
    "expected behavior is to make {d} and {f} finally be true simultanously.": "G ( ( d ) ) A ( ( f ) ) A N (G N G d) A N (G N G f)",
    "expected behavior is more than one atomic proposition in {{d}, {f}} should be true.": "G ( ( d ) ) O ( ( f ) ) A N ((G N G d) O (G N G f))",
    "expected behavior is {d} shoule be true, or {d} should not be true first, and then {d} or {f} should be true.": "G ( ( d ) ) O ( ( f ) ) A N ((G N G d) O X(G N G f))"
  }
}
